ARM GAS  /tmp/ccqnDFob.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"main.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB133:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccqnDFob.s 			page 2


  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f4xx_hal.h"
  41:Src/main.c    **** //#include "usart.h"
  42:Src/main.c    **** #include "B3M.h"
  43:Src/main.c    **** #include "string.h"
  44:Src/main.c    **** #include "sd_hal_mpu6050.h"
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** UART_HandleTypeDef huart1;
  48:Src/main.c    **** UART_HandleTypeDef huart2;
  49:Src/main.c    **** UART_HandleTypeDef huart6;
  50:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  51:Src/main.c    **** SD_MPU6050 mpu1;
  52:Src/main.c    **** 
  53:Src/main.c    **** //WWDG_HandleTypeDef hwwdg;
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  59:Src/main.c    **** void SystemClock_Config(void);
  60:Src/main.c    **** static void MX_GPIO_Init(void);
  61:Src/main.c    **** static void MX_USART2_UART_Init(void);
  62:Src/main.c    **** static void MX_USART1_UART_Init(void);
  63:Src/main.c    **** //static void MX_WWDG_Init(void);
  64:Src/main.c    **** static void MX_USART6_UART_Init(void);
  65:Src/main.c    **** static void MX_I2C1_Init(void);
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  68:Src/main.c    **** 
  69:Src/main.c    **** void setModeToNormal(/*unsigned char ID*/)
  70:Src/main.c    **** {
  71:Src/main.c    ****     uint8_t TxData[8];   // TransmitByteData [1 byte]
  72:Src/main.c    ****     //uint8_t CheckSum = 0; // CheckSum calculation
  73:Src/main.c    **** 
  74:Src/main.c    ****     TxData[0] = 0x08;   // All Byte
  75:Src/main.c    ****     TxData[1] = 0x04;   // Command
  76:Src/main.c    ****     TxData[2] = 0x00;   // Option/Status
  77:Src/main.c    ****     TxData[3] = 0x00;   // ID
  78:Src/main.c    ****     TxData[4] = 0x00;   // mode
  79:Src/main.c    ****     TxData[5] = 0x28;   // address
  80:Src/main.c    ****     TxData[6] = 0x01; // device number
  81:Src/main.c    ****     TxData[7] = 0x35;   // Sum
  82:Src/main.c    **** 
  83:Src/main.c    ****     HAL_UART_Transmit(&huart1, (uint8_t*)TxData, 8, HAL_MAX_DELAY);
  84:Src/main.c    ****     HAL_Delay(1);
  85:Src/main.c    **** 
  86:Src/main.c    **** }
  87:Src/main.c    **** 
ARM GAS  /tmp/ccqnDFob.s 			page 3


  88:Src/main.c    **** void setAngle(int16_t angle)
  89:Src/main.c    **** {
  90:Src/main.c    ****     uint8_t TxData[9];   // TransmitByteData [9 bits]
  91:Src/main.c    ****     uint8_t CheckSum = 0; // CheckSum calculation
  92:Src/main.c    ****     uint8_t RxData[9];
  93:Src/main.c    **** 
  94:Src/main.c    ****     if(angle<0)
  95:Src/main.c    ****         angle = 65535+angle+1;
  96:Src/main.c    **** 
  97:Src/main.c    ****     TxData[0] = 0x09;                 // All Byte
  98:Src/main.c    ****     TxData[1] = 0x04;                       // Command
  99:Src/main.c    ****     TxData[2] = 0x00;                       // Option/Status
 100:Src/main.c    ****     TxData[3] = 0x00;                         // ID
 101:Src/main.c    ****     TxData[4] = (uint8_t)0x00FF & angle;              //  mode
 102:Src/main.c    ****     TxData[5] = (uint8_t)0x00FF & (angle >> 8);       // address
 103:Src/main.c    ****     TxData[6] = 0x2A;                         // device number
 104:Src/main.c    ****     TxData[7] = 0x01;                     // Count
 105:Src/main.c    **** 
 106:Src/main.c    ****     // CheckSum calculation
 107:Src/main.c    ****     for(unsigned char i=0; i<=7; i++){
 108:Src/main.c    ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 109:Src/main.c    ****     }
 110:Src/main.c    ****     CheckSum = (uint8_t)0x00FF & CheckSum;
 111:Src/main.c    **** 
 112:Src/main.c    ****     TxData[8] = CheckSum;
 113:Src/main.c    **** 
 114:Src/main.c    ****     HAL_UART_Transmit(&huart1, (uint8_t*)TxData, 9, HAL_MAX_DELAY);
 115:Src/main.c    ****     HAL_Delay(1);
 116:Src/main.c    ****     HAL_UART_Receive(&huart1, (uint8_t*)RxData, 9, HAL_MAX_DELAY);
 117:Src/main.c    ****     HAL_Delay(1);
 118:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t*)RxData, 9, HAL_MAX_DELAY);
 119:Src/main.c    ****     HAl_Delay(1);
 120:Src/main.c    ****     /*追加*/
 121:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t*)TxData, 9, HAL_MAX_DELAY);
 122:Src/main.c    ****     HAL_Delay(1);
 123:Src/main.c    **** }
 124:Src/main.c    **** 
 125:Src/main.c    **** void setFree (/*unsigned char ID*/)
 126:Src/main.c    **** {
 127:Src/main.c    ****     uint8_t TxData[8];   // TransmitByteData [1byte]
 128:Src/main.c    **** 
 129:Src/main.c    ****     TxData[0] = 0x08;          // All Byte
 130:Src/main.c    ****     TxData[1] = 0x04;          // Command
 131:Src/main.c    ****     TxData[2] = 0x00;          // Option/Status
 132:Src/main.c    ****     TxData[3] = 0x00;          // ID
 133:Src/main.c    ****     TxData[4] = 0x02;          //  mode
 134:Src/main.c    ****     TxData[5] = 0x28;          // address
 135:Src/main.c    ****     TxData[6] = 0x01;          // device number
 136:Src/main.c    ****     TxData[7] = 0x37;          // Sum
 137:Src/main.c    **** 
 138:Src/main.c    ****     HAL_UART_Transmit(&huart1, (uint8_t*)TxData, 8, HAL_MAX_DELAY);
 139:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t*)TxData, 8, HAL_MAX_DELAY);
 140:Src/main.c    ****     HAL_Delay(1);
 141:Src/main.c    **** }
 142:Src/main.c    **** 
 143:Src/main.c    **** //void setGain (/*unsigned char ID*/){
 144:Src/main.c    **** //  uint8_t TxData[8];   // TransmitByteData [10byte]
ARM GAS  /tmp/ccqnDFob.s 			page 4


 145:Src/main.c    **** //
 146:Src/main.c    **** //    TxData[0] = 0x08;          // All Byte
 147:Src/main.c    **** //    TxData[1] = 0x04;          // Command
 148:Src/main.c    **** //    TxData[2] = 0x00;          // Option/Status
 149:Src/main.c    **** //    TxData[3] = 0x00;          // ID
 150:Src/main.c    **** //    TxData[4] = 0x02;          //  mode
 151:Src/main.c    **** //    TxData[5] = 0x5C;          // address
 152:Src/main.c    **** //    TxData[6] = 0x01;          // device number
 153:Src/main.c    **** //    TxData[7] = 0x69;          // Sum
 154:Src/main.c    **** //
 155:Src/main.c    **** //    HAL_UART_Transmit(&huart1, (uint8_t*)TxData, 8, HAL_MAX_DELAY);
 156:Src/main.c    **** //    HAL_UART_Transmit(&huart2, (uint8_t*)TxData, 8, HAL_MAX_DELAY);
 157:Src/main.c    **** //    HAL_Delay(1);               // Wait for transmission
 158:Src/main.c    **** //}
 159:Src/main.c    **** 
 160:Src/main.c    **** 
 161:Src/main.c    **** int main(void)
 162:Src/main.c    **** {
 163:Src/main.c    ****   SD_MPU6050_Result result ;
 164:Src/main.c    ****   uint8_t mpu_ok[15] = {"MPU WORK FINE\n"};
 165:Src/main.c    ****   uint8_t mpu_not[17] = {"MPU NOT WORKING\n"};
 166:Src/main.c    **** 
 167:Src/main.c    ****   int16_t diff = 0; //IMU出力角度
 168:Src/main.c    ****   int16_t before = 0;
 169:Src/main.c    ****   //int16_t tf = ;
 170:Src/main.c    ****   int16_t lp = 0;
 171:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 172:Src/main.c    **** 
 173:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 174:Src/main.c    ****   HAL_Init();
 175:Src/main.c    **** 
 176:Src/main.c    ****   /* Configure the system clock */
 177:Src/main.c    ****   SystemClock_Config();
 178:Src/main.c    **** 
 179:Src/main.c    ****   /* Initialize all configured peripherals */
 180:Src/main.c    ****   MX_GPIO_Init();
 181:Src/main.c    ****   MX_USART1_UART_Init();
 182:Src/main.c    ****   //MX_WWDG_Init();
 183:Src/main.c    ****   MX_USART6_UART_Init();
 184:Src/main.c    ****   MX_USART2_UART_Init();
 185:Src/main.c    ****   MX_I2C1_Init();
 186:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC,GPIO_PIN_8,GPIO_PIN_SET);
 187:Src/main.c    **** 
 188:Src/main.c    **** 
 189:Src/main.c    ****   result = SD_MPU6050_Init(&hi2c1,&mpu1,SD_MPU6050_Device_0,SD_MPU6050_Accelerometer_16G,SD_MPU6050
 190:Src/main.c    **** 
 191:Src/main.c    ****   if(result == SD_MPU6050_Result_Ok)
 192:Src/main.c    ****   {
 193:Src/main.c    ****     HAL_UART_Transmit(&huart2,mpu_ok,(uint16_t)15, HAL_MAX_DELAY);
 194:Src/main.c    ****   }
 195:Src/main.c    ****   else
 196:Src/main.c    ****   {
 197:Src/main.c    ****     HAL_UART_Transmit(&huart2, mpu_not, (uint16_t)17, HAL_MAX_DELAY);
 198:Src/main.c    ****   }
 199:Src/main.c    **** 
 200:Src/main.c    ****   B3M_RunNormal(huart1, SERVO_ID_1);
 201:Src/main.c    ****   B3M_RunNormal(huart6, SERVO_ID_6);
ARM GAS  /tmp/ccqnDFob.s 			page 5


 202:Src/main.c    **** 
 203:Src/main.c    ****   SD_MPU6050_ReadAccelerometer(&hi2c1,&mpu1);
 204:Src/main.c    ****   SD_MPU6050_ReadGyroscope(&hi2c1,&mpu1);
 205:Src/main.c    **** 
 206:Src/main.c    ****   before = mpu1.Accelerometer_X;
 207:Src/main.c    ****   /* Infinite loop */
 208:Src/main.c    ****   while (1)
 209:Src/main.c    ****   {
 210:Src/main.c    ****     if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13)==GPIO_PIN_RESET){
 211:Src/main.c    ****       B3M_RunNormal(huart1, SERVO_ID_1);
 212:Src/main.c    ****       B3M_RunNormal(huart6, SERVO_ID_6);
 213:Src/main.c    ****       HAL_Delay(100);
 214:Src/main.c    ****     }
 215:Src/main.c    **** 
 216:Src/main.c    ****     //setModeToNormal();
 217:Src/main.c    ****     //HAL_Delay(1000);
 218:Src/main.c    ****     // HAL_Delay(1);
 219:Src/main.c    ****     //B3M_Write_1B(huart1, SERVO_ID_0, OPERATION_MODE_RunNormal, SERVO_TORQUE_ON);
 220:Src/main.c    ****     //HAL_Delay(100);
 221:Src/main.c    **** 
 222:Src/main.c    ****     /*サーボ回転角度指定 */
 223:Src/main.c    **** 
 224:Src/main.c    ****     /*
 225:Src/main.c    ****     B3M_SetDesirePostion(huart1, SERVO_ID_0, 1000);
 226:Src/main.c    ****     B3M_SetDesirePostion(huart6, SERVO_ID_0, 6000);
 227:Src/main.c    ****     HAL_Delay(1000);
 228:Src/main.c    **** 
 229:Src/main.c    ****     B3M_SetDesirePostion(huart1, SERVO_ID_0, -1000);
 230:Src/main.c    ****     B3M_SetDesirePostion(huart6, SERVO_ID_0, -6000);
 231:Src/main.c    ****     HAL_Delay(1000);
 232:Src/main.c    ****     */
 233:Src/main.c    **** 
 234:Src/main.c    ****     char gyro[20], acc[20];
 235:Src/main.c    **** 
 236:Src/main.c    ****     SD_MPU6050_ReadGyroscope(&hi2c1,&mpu1);
 237:Src/main.c    ****     /*
 238:Src/main.c    ****     int16_t g_x = mpu1.Gyroscope_X;
 239:Src/main.c    ****     int16_t g_y = mpu1.Gyroscope_Y;
 240:Src/main.c    ****     int16_t g_z = mpu1.Gyroscope_Z;
 241:Src/main.c    ****     */
 242:Src/main.c    ****     //default int16_t
 243:Src/main.c    ****     //HAL_UART_Transmit(&huart2, (uint16_t*)(&g_x), 16,HAL_MAX_DELAY);
 244:Src/main.c    **** 
 245:Src/main.c    ****     SD_MPU6050_ReadAccelerometer(&hi2c1,&mpu1);
 246:Src/main.c    ****     /*
 247:Src/main.c    ****     int16_t a_x = mpu1.Accelerometer_X / 4095;
 248:Src/main.c    ****     int16_t a_y = mpu1.Accelerometer_Y / 4095;
 249:Src/main.c    ****     int16_t a_z = mpu1.Accelerometer_Z / 4095;
 250:Src/main.c    **** 
 251:Src/main.c    ****     int16_t acc_angle_x = atan2(a_x, a_z) * 360 / 2.0 / 3.1415;
 252:Src/main.c    ****     int16_t acc_angle_y = atan2(a_y, a_z) * 360 / 2.0 / 3.1415;
 253:Src/main.c    ****     int16_t acc_angle_z = atan2(a_x, a_y) * 360 / 2.0 / 3.1415;
 254:Src/main.c    ****     */
 255:Src/main.c    **** 
 256:Src/main.c    ****     //ローパスフィルタ
 257:Src/main.c    ****     //y = exp(-st/tc) * (x-1) + (1-exp(-st/tc)) * val
 258:Src/main.c    ****     lp = 0.549 * mpu1.Accelerometer_X;
ARM GAS  /tmp/ccqnDFob.s 			page 6


 259:Src/main.c    **** 
 260:Src/main.c    ****     //加速度角度表記
 261:Src/main.c    ****     //sprintf(acc, "%i\n\r", lp);
 262:Src/main.c    ****     //sprintf(acc, " acc x: %i y: %i z: %i\n\r\n\r", acc_angle_x, acc_angle_y, acc_angle_z);
 263:Src/main.c    ****     //HAL_UART_Transmit(&huart2, (uint8_t*)acc, strlen(acc), HAL_MAX_DELAY);
 264:Src/main.c    ****     //HAL_Delay(50);
 265:Src/main.c    **** 
 266:Src/main.c    ****     diff   = 0.99 * before + (1 - 0.99) * mpu1.Accelerometer_X ;
 267:Src/main.c    ****     before = diff;
 268:Src/main.c    ****     diff   = diff * 0.549;
 269:Src/main.c    **** 
 270:Src/main.c    ****     sprintf(gyro, "%i\n\r", diff);
 271:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t*)gyro, strlen(gyro), HAL_MAX_DELAY);
 272:Src/main.c    **** 
 273:Src/main.c    ****     if(diff > 9500)
 274:Src/main.c    ****       diff = 9500;
 275:Src/main.c    **** 
 276:Src/main.c    ****     if(diff < -9500)
 277:Src/main.c    ****       diff = -9500;
 278:Src/main.c    **** 
 279:Src/main.c    ****     B3M_SetDesirePostion(huart1, SERVO_ID_1, diff);
 280:Src/main.c    ****    //B3M_SetDesirePostion(huart6, SERVO_ID_6, diff);
 281:Src/main.c    ****   }
 282:Src/main.c    **** 
 283:Src/main.c    **** }
 284:Src/main.c    **** 
 285:Src/main.c    **** /** System Clock Configuration　
 286:Src/main.c    **** */
 287:Src/main.c    **** void SystemClock_Config(void)
 288:Src/main.c    **** {
 289:Src/main.c    **** 
 290:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 291:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 292:Src/main.c    **** 
 293:Src/main.c    ****     /**Configure the main internal regulator output voltage
 294:Src/main.c    ****     */
 295:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 296:Src/main.c    **** 
 297:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);//voltage smooth
 298:Src/main.c    **** 
 299:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 300:Src/main.c    ****     */
 301:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 302:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 303:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 304:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 305:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 306:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 307:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 308:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 309:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 310:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 311:Src/main.c    ****   {
 312:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 313:Src/main.c    ****   }
 314:Src/main.c    **** 
 315:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
ARM GAS  /tmp/ccqnDFob.s 			page 7


 316:Src/main.c    ****     */
 317:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 318:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 319:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 320:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 321:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 322:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 323:Src/main.c    **** 
 324:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 325:Src/main.c    ****   {
 326:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 327:Src/main.c    ****   }
 328:Src/main.c    **** 
 329:Src/main.c    ****     /**Configure the Systick interrupt time
 330:Src/main.c    ****     */
 331:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 332:Src/main.c    **** 
 333:Src/main.c    ****     /**Configure the Systick
 334:Src/main.c    ****     */
 335:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 336:Src/main.c    **** 
 337:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 338:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 339:Src/main.c    **** }
 340:Src/main.c    **** 
 341:Src/main.c    **** /* I2C1 init function */
 342:Src/main.c    **** static void MX_I2C1_Init(void)
 343:Src/main.c    **** {
 344:Src/main.c    **** 
 345:Src/main.c    ****   hi2c1.Instance = I2C1;
 346:Src/main.c    ****   hi2c1.Init.ClockSpeed = 400000;
 347:Src/main.c    ****   //hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 348:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 349:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 350:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 351:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 352:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 353:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 354:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 355:Src/main.c    ****   {
 356:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 357:Src/main.c    ****   }
 358:Src/main.c    **** 
 359:Src/main.c    ****   HAL_I2CEx_AnalogFilter_Config(&hi2c1, I2C_ANALOGFILTER_ENABLED);
 360:Src/main.c    **** 
 361:Src/main.c    **** }
 362:Src/main.c    **** 
 363:Src/main.c    **** /* USART1 init function */
 364:Src/main.c    **** static void MX_USART1_UART_Init(void)
 365:Src/main.c    **** {
 366:Src/main.c    **** 
 367:Src/main.c    ****   huart1.Instance = USART1;
 368:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 369:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 370:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 371:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 372:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /tmp/ccqnDFob.s 			page 8


 373:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 374:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 375:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 376:Src/main.c    ****   {
 377:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 378:Src/main.c    ****   }
 379:Src/main.c    **** 
 380:Src/main.c    **** }
 381:Src/main.c    **** 
 382:Src/main.c    **** /* USART2 init function */
 383:Src/main.c    **** 
 384:Src/main.c    **** static void MX_USART2_UART_Init(void)
 385:Src/main.c    **** {
 386:Src/main.c    **** 
 387:Src/main.c    ****   huart2.Instance = USART2;
 388:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 389:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 390:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 391:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 392:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 393:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 394:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 395:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 396:Src/main.c    ****   {
 397:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 398:Src/main.c    ****   }
 399:Src/main.c    **** 
 400:Src/main.c    **** }
 401:Src/main.c    **** 
 402:Src/main.c    **** 
 403:Src/main.c    **** /* USART6 init function */
 404:Src/main.c    **** static void MX_USART6_UART_Init(void)
 405:Src/main.c    **** {
 406:Src/main.c    **** 
 407:Src/main.c    ****   huart6.Instance = USART6;
 408:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 409:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 410:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 411:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 412:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 413:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 414:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 415:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 416:Src/main.c    ****   {
 417:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 418:Src/main.c    ****   }
 419:Src/main.c    **** 
 420:Src/main.c    **** }
 421:Src/main.c    **** 
 422:Src/main.c    **** /* WWDG init function */
 423:Src/main.c    **** //static void MX_WWDG_Init(void)
 424:Src/main.c    **** //{
 425:Src/main.c    **** //
 426:Src/main.c    **** //  hwwdg.Instance = WWDG;
 427:Src/main.c    **** //  hwwdg.Init.Prescaler = WWDG_PRESCALER_1;
 428:Src/main.c    **** //  hwwdg.Init.Window = 64;
 429:Src/main.c    **** //  hwwdg.Init.Counter = 64;
ARM GAS  /tmp/ccqnDFob.s 			page 9


 430:Src/main.c    **** //  hwwdg.Init.EWIMode = WWDG_EWI_DISABLE;
 431:Src/main.c    **** //  if (HAL_WWDG_Init(&hwwdg) != HAL_OK)
 432:Src/main.c    **** //  {
 433:Src/main.c    **** //    _Error_Handler(__FILE__, __LINE__);
 434:Src/main.c    **** //  }
 435:Src/main.c    **** //
 436:Src/main.c    **** //}
 437:Src/main.c    **** 
 438:Src/main.c    **** /** Configure pins as
 439:Src/main.c    ****         * Analog
 440:Src/main.c    ****         * Input
 441:Src/main.c    ****         * Output
 442:Src/main.c    ****         * EVENT_OUT
 443:Src/main.c    ****         * EXTI
 444:Src/main.c    **** */
 445:Src/main.c    **** static void MX_GPIO_Init(void)
 446:Src/main.c    **** {
  29              		.loc 1 446 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 8BB0     		sub	sp, sp, #44
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 64
  44              	.LBB2:
 447:Src/main.c    **** 
 448:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 449:Src/main.c    **** 
 450:Src/main.c    ****   /* GPIO Ports Clock Enable */
 451:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  45              		.loc 1 451 0
  46 0004 0024     		movs	r4, #0
  47 0006 0194     		str	r4, [sp, #4]
  48 0008 2A4B     		ldr	r3, .L3
  49 000a 1A6B     		ldr	r2, [r3, #48]
  50 000c 42F00402 		orr	r2, r2, #4
  51 0010 1A63     		str	r2, [r3, #48]
  52 0012 1A6B     		ldr	r2, [r3, #48]
  53 0014 02F00402 		and	r2, r2, #4
  54 0018 0192     		str	r2, [sp, #4]
  55 001a 019A     		ldr	r2, [sp, #4]
  56              	.LBE2:
  57              	.LBB3:
 452:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  58              		.loc 1 452 0
  59 001c 0294     		str	r4, [sp, #8]
  60 001e 1A6B     		ldr	r2, [r3, #48]
  61 0020 42F08002 		orr	r2, r2, #128
  62 0024 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccqnDFob.s 			page 10


  63 0026 1A6B     		ldr	r2, [r3, #48]
  64 0028 02F08002 		and	r2, r2, #128
  65 002c 0292     		str	r2, [sp, #8]
  66 002e 029A     		ldr	r2, [sp, #8]
  67              	.LBE3:
  68              	.LBB4:
 453:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  69              		.loc 1 453 0
  70 0030 0394     		str	r4, [sp, #12]
  71 0032 1A6B     		ldr	r2, [r3, #48]
  72 0034 42F00102 		orr	r2, r2, #1
  73 0038 1A63     		str	r2, [r3, #48]
  74 003a 1A6B     		ldr	r2, [r3, #48]
  75 003c 02F00102 		and	r2, r2, #1
  76 0040 0392     		str	r2, [sp, #12]
  77 0042 039A     		ldr	r2, [sp, #12]
  78              	.LBE4:
  79              	.LBB5:
 454:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 454 0
  81 0044 0494     		str	r4, [sp, #16]
  82 0046 1A6B     		ldr	r2, [r3, #48]
  83 0048 42F00202 		orr	r2, r2, #2
  84 004c 1A63     		str	r2, [r3, #48]
  85 004e 1B6B     		ldr	r3, [r3, #48]
  86 0050 03F00203 		and	r3, r3, #2
  87 0054 0493     		str	r3, [sp, #16]
  88 0056 049B     		ldr	r3, [sp, #16]
  89              	.LBE5:
 455:Src/main.c    **** 
 456:Src/main.c    ****   /*Configure GPIO pin Output Level */
 457:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
  90              		.loc 1 457 0
  91 0058 174F     		ldr	r7, .L3+4
  92 005a 2246     		mov	r2, r4
  93 005c 2021     		movs	r1, #32
  94 005e 3846     		mov	r0, r7
  95 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
  96              	.LVL0:
 458:Src/main.c    ****   /*Configure GPIO pin Output Level */
 459:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_RESET);
  97              		.loc 1 459 0
  98 0064 154D     		ldr	r5, .L3+8
  99 0066 2246     		mov	r2, r4
 100 0068 4FF48071 		mov	r1, #256
 101 006c 2846     		mov	r0, r5
 102 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 460:Src/main.c    **** 
 461:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 462:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 104              		.loc 1 462 0
 105 0072 4FF40053 		mov	r3, #8192
 106 0076 0593     		str	r3, [sp, #20]
 463:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 107              		.loc 1 463 0
 108 0078 114B     		ldr	r3, .L3+12
ARM GAS  /tmp/ccqnDFob.s 			page 11


 109 007a 0693     		str	r3, [sp, #24]
 464:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 110              		.loc 1 464 0
 111 007c 0794     		str	r4, [sp, #28]
 465:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 112              		.loc 1 465 0
 113 007e 05A9     		add	r1, sp, #20
 114 0080 2846     		mov	r0, r5
 115 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 116              	.LVL2:
 466:Src/main.c    **** 
 467:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 468:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
 117              		.loc 1 468 0
 118 0086 2023     		movs	r3, #32
 119 0088 0593     		str	r3, [sp, #20]
 469:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 120              		.loc 1 469 0
 121 008a 0126     		movs	r6, #1
 122 008c 0696     		str	r6, [sp, #24]
 470:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 123              		.loc 1 470 0
 124 008e 0794     		str	r4, [sp, #28]
 471:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 125              		.loc 1 471 0
 126 0090 0894     		str	r4, [sp, #32]
 472:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 127              		.loc 1 472 0
 128 0092 05A9     		add	r1, sp, #20
 129 0094 3846     		mov	r0, r7
 130 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 473:Src/main.c    **** 
 474:Src/main.c    ****     /*Configure GPIO pin : PC8 */
 475:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 132              		.loc 1 475 0
 133 009a 4FF48073 		mov	r3, #256
 134 009e 0593     		str	r3, [sp, #20]
 476:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 135              		.loc 1 476 0
 136 00a0 0696     		str	r6, [sp, #24]
 477:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 137              		.loc 1 477 0
 138 00a2 0794     		str	r4, [sp, #28]
 478:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 478 0
 140 00a4 0894     		str	r4, [sp, #32]
 479:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 141              		.loc 1 479 0
 142 00a6 05A9     		add	r1, sp, #20
 143 00a8 2846     		mov	r0, r5
 144 00aa FFF7FEFF 		bl	HAL_GPIO_Init
 145              	.LVL4:
 480:Src/main.c    **** 
 481:Src/main.c    **** }
 146              		.loc 1 481 0
 147 00ae 0BB0     		add	sp, sp, #44
ARM GAS  /tmp/ccqnDFob.s 			page 12


 148              	.LCFI2:
 149              		.cfi_def_cfa_offset 20
 150              		@ sp needed
 151 00b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 152              	.L4:
 153 00b2 00BF     		.align	2
 154              	.L3:
 155 00b4 00380240 		.word	1073887232
 156 00b8 00000240 		.word	1073872896
 157 00bc 00080240 		.word	1073874944
 158 00c0 00002110 		.word	270598144
 159              		.cfi_endproc
 160              	.LFE133:
 162              		.section	.text.setModeToNormal,"ax",%progbits
 163              		.align	2
 164              		.global	setModeToNormal
 165              		.thumb
 166              		.thumb_func
 168              	setModeToNormal:
 169              	.LFB124:
  70:Src/main.c    ****     uint8_t TxData[8];   // TransmitByteData [1 byte]
 170              		.loc 1 70 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 8
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 10B5     		push	{r4, lr}
 175              	.LCFI3:
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 4, -8
 178              		.cfi_offset 14, -4
 179 0002 82B0     		sub	sp, sp, #8
 180              	.LCFI4:
 181              		.cfi_def_cfa_offset 16
  74:Src/main.c    ****     TxData[1] = 0x04;   // Command
 182              		.loc 1 74 0
 183 0004 0822     		movs	r2, #8
 184 0006 8DF80020 		strb	r2, [sp]
  75:Src/main.c    ****     TxData[2] = 0x00;   // Option/Status
 185              		.loc 1 75 0
 186 000a 0423     		movs	r3, #4
 187 000c 8DF80130 		strb	r3, [sp, #1]
  76:Src/main.c    ****     TxData[3] = 0x00;   // ID
 188              		.loc 1 76 0
 189 0010 0023     		movs	r3, #0
 190 0012 8DF80230 		strb	r3, [sp, #2]
  77:Src/main.c    ****     TxData[4] = 0x00;   // mode
 191              		.loc 1 77 0
 192 0016 8DF80330 		strb	r3, [sp, #3]
  78:Src/main.c    ****     TxData[5] = 0x28;   // address
 193              		.loc 1 78 0
 194 001a 8DF80430 		strb	r3, [sp, #4]
  79:Src/main.c    ****     TxData[6] = 0x01; // device number
 195              		.loc 1 79 0
 196 001e 2823     		movs	r3, #40
 197 0020 8DF80530 		strb	r3, [sp, #5]
  80:Src/main.c    ****     TxData[7] = 0x35;   // Sum
 198              		.loc 1 80 0
ARM GAS  /tmp/ccqnDFob.s 			page 13


 199 0024 0124     		movs	r4, #1
 200 0026 8DF80640 		strb	r4, [sp, #6]
  81:Src/main.c    **** 
 201              		.loc 1 81 0
 202 002a 3523     		movs	r3, #53
 203 002c 8DF80730 		strb	r3, [sp, #7]
  83:Src/main.c    ****     HAL_Delay(1);
 204              		.loc 1 83 0
 205 0030 4FF0FF33 		mov	r3, #-1
 206 0034 6946     		mov	r1, sp
 207 0036 0448     		ldr	r0, .L7
 208 0038 FFF7FEFF 		bl	HAL_UART_Transmit
 209              	.LVL5:
  84:Src/main.c    **** 
 210              		.loc 1 84 0
 211 003c 2046     		mov	r0, r4
 212 003e FFF7FEFF 		bl	HAL_Delay
 213              	.LVL6:
  86:Src/main.c    **** 
 214              		.loc 1 86 0
 215 0042 02B0     		add	sp, sp, #8
 216              	.LCFI5:
 217              		.cfi_def_cfa_offset 8
 218              		@ sp needed
 219 0044 10BD     		pop	{r4, pc}
 220              	.L8:
 221 0046 00BF     		.align	2
 222              	.L7:
 223 0048 00000000 		.word	huart1
 224              		.cfi_endproc
 225              	.LFE124:
 227              		.section	.text.setAngle,"ax",%progbits
 228              		.align	2
 229              		.global	setAngle
 230              		.thumb
 231              		.thumb_func
 233              	setAngle:
 234              	.LFB125:
  89:Src/main.c    ****     uint8_t TxData[9];   // TransmitByteData [9 bits]
 235              		.loc 1 89 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 24
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL7:
 240 0000 10B5     		push	{r4, lr}
 241              	.LCFI6:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 4, -8
 244              		.cfi_offset 14, -4
 245 0002 86B0     		sub	sp, sp, #24
 246              	.LCFI7:
 247              		.cfi_def_cfa_offset 32
 248              	.LVL8:
  97:Src/main.c    ****     TxData[1] = 0x04;                       // Command
 249              		.loc 1 97 0
 250 0004 0923     		movs	r3, #9
 251 0006 8DF80C30 		strb	r3, [sp, #12]
ARM GAS  /tmp/ccqnDFob.s 			page 14


  98:Src/main.c    ****     TxData[2] = 0x00;                       // Option/Status
 252              		.loc 1 98 0
 253 000a 0423     		movs	r3, #4
 254 000c 8DF80D30 		strb	r3, [sp, #13]
  99:Src/main.c    ****     TxData[3] = 0x00;                         // ID
 255              		.loc 1 99 0
 256 0010 0022     		movs	r2, #0
 257 0012 8DF80E20 		strb	r2, [sp, #14]
 100:Src/main.c    ****     TxData[4] = (uint8_t)0x00FF & angle;              //  mode
 258              		.loc 1 100 0
 259 0016 8DF80F20 		strb	r2, [sp, #15]
 101:Src/main.c    ****     TxData[5] = (uint8_t)0x00FF & (angle >> 8);       // address
 260              		.loc 1 101 0
 261 001a 8DF81000 		strb	r0, [sp, #16]
 102:Src/main.c    ****     TxData[6] = 0x2A;                         // device number
 262              		.loc 1 102 0
 263 001e C0F30720 		ubfx	r0, r0, #8, #8
 264              	.LVL9:
 265 0022 8DF81100 		strb	r0, [sp, #17]
 103:Src/main.c    ****     TxData[7] = 0x01;                     // Count
 266              		.loc 1 103 0
 267 0026 2A23     		movs	r3, #42
 268 0028 8DF81230 		strb	r3, [sp, #18]
 104:Src/main.c    **** 
 269              		.loc 1 104 0
 270 002c 0123     		movs	r3, #1
 271 002e 8DF81330 		strb	r3, [sp, #19]
 272              	.LVL10:
 273              	.LBB6:
 107:Src/main.c    ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 274              		.loc 1 107 0
 275 0032 1346     		mov	r3, r2
 276 0034 07E0     		b	.L10
 277              	.LVL11:
 278              	.L11:
 108:Src/main.c    ****     }
 279              		.loc 1 108 0 discriminator 3
 280 0036 06A9     		add	r1, sp, #24
 281 0038 1944     		add	r1, r1, r3
 282 003a 11F80C1C 		ldrb	r1, [r1, #-12]	@ zero_extendqisi2
 283 003e 0A44     		add	r2, r2, r1
 284              	.LVL12:
 285 0040 D2B2     		uxtb	r2, r2
 286              	.LVL13:
 107:Src/main.c    ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 287              		.loc 1 107 0 discriminator 3
 288 0042 0133     		adds	r3, r3, #1
 289              	.LVL14:
 290 0044 DBB2     		uxtb	r3, r3
 291              	.LVL15:
 292              	.L10:
 107:Src/main.c    ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 293              		.loc 1 107 0 is_stmt 0 discriminator 1
 294 0046 072B     		cmp	r3, #7
 295 0048 F5D9     		bls	.L11
 296              	.LBE6:
 112:Src/main.c    **** 
ARM GAS  /tmp/ccqnDFob.s 			page 15


 297              		.loc 1 112 0 is_stmt 1
 298 004a 8DF81420 		strb	r2, [sp, #20]
 114:Src/main.c    ****     HAL_Delay(1);
 299              		.loc 1 114 0
 300 004e 164C     		ldr	r4, .L13
 301 0050 4FF0FF33 		mov	r3, #-1
 302              	.LVL16:
 303 0054 0922     		movs	r2, #9
 304              	.LVL17:
 305 0056 03A9     		add	r1, sp, #12
 306 0058 2046     		mov	r0, r4
 307 005a FFF7FEFF 		bl	HAL_UART_Transmit
 308              	.LVL18:
 115:Src/main.c    ****     HAL_UART_Receive(&huart1, (uint8_t*)RxData, 9, HAL_MAX_DELAY);
 309              		.loc 1 115 0
 310 005e 0120     		movs	r0, #1
 311 0060 FFF7FEFF 		bl	HAL_Delay
 312              	.LVL19:
 116:Src/main.c    ****     HAL_Delay(1);
 313              		.loc 1 116 0
 314 0064 4FF0FF33 		mov	r3, #-1
 315 0068 0922     		movs	r2, #9
 316 006a 6946     		mov	r1, sp
 317 006c 2046     		mov	r0, r4
 318 006e FFF7FEFF 		bl	HAL_UART_Receive
 319              	.LVL20:
 117:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t*)RxData, 9, HAL_MAX_DELAY);
 320              		.loc 1 117 0
 321 0072 0120     		movs	r0, #1
 322 0074 FFF7FEFF 		bl	HAL_Delay
 323              	.LVL21:
 118:Src/main.c    ****     HAl_Delay(1);
 324              		.loc 1 118 0
 325 0078 0C4C     		ldr	r4, .L13+4
 326 007a 4FF0FF33 		mov	r3, #-1
 327 007e 0922     		movs	r2, #9
 328 0080 6946     		mov	r1, sp
 329 0082 2046     		mov	r0, r4
 330 0084 FFF7FEFF 		bl	HAL_UART_Transmit
 331              	.LVL22:
 119:Src/main.c    ****     /*追加*/
 332              		.loc 1 119 0
 333 0088 0120     		movs	r0, #1
 334 008a FFF7FEFF 		bl	HAl_Delay
 335              	.LVL23:
 121:Src/main.c    ****     HAL_Delay(1);
 336              		.loc 1 121 0
 337 008e 4FF0FF33 		mov	r3, #-1
 338 0092 0922     		movs	r2, #9
 339 0094 03A9     		add	r1, sp, #12
 340 0096 2046     		mov	r0, r4
 341 0098 FFF7FEFF 		bl	HAL_UART_Transmit
 342              	.LVL24:
 122:Src/main.c    **** }
 343              		.loc 1 122 0
 344 009c 0120     		movs	r0, #1
 345 009e FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/ccqnDFob.s 			page 16


 346              	.LVL25:
 123:Src/main.c    **** 
 347              		.loc 1 123 0
 348 00a2 06B0     		add	sp, sp, #24
 349              	.LCFI8:
 350              		.cfi_def_cfa_offset 8
 351              		@ sp needed
 352 00a4 10BD     		pop	{r4, pc}
 353              	.L14:
 354 00a6 00BF     		.align	2
 355              	.L13:
 356 00a8 00000000 		.word	huart1
 357 00ac 00000000 		.word	huart2
 358              		.cfi_endproc
 359              	.LFE125:
 361              		.section	.text.setFree,"ax",%progbits
 362              		.align	2
 363              		.global	setFree
 364              		.thumb
 365              		.thumb_func
 367              	setFree:
 368              	.LFB126:
 126:Src/main.c    ****     uint8_t TxData[8];   // TransmitByteData [1byte]
 369              		.loc 1 126 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 8
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373 0000 30B5     		push	{r4, r5, lr}
 374              	.LCFI9:
 375              		.cfi_def_cfa_offset 12
 376              		.cfi_offset 4, -12
 377              		.cfi_offset 5, -8
 378              		.cfi_offset 14, -4
 379 0002 83B0     		sub	sp, sp, #12
 380              	.LCFI10:
 381              		.cfi_def_cfa_offset 24
 129:Src/main.c    ****     TxData[1] = 0x04;          // Command
 382              		.loc 1 129 0
 383 0004 0824     		movs	r4, #8
 384 0006 8DF80040 		strb	r4, [sp]
 130:Src/main.c    ****     TxData[2] = 0x00;          // Option/Status
 385              		.loc 1 130 0
 386 000a 0423     		movs	r3, #4
 387 000c 8DF80130 		strb	r3, [sp, #1]
 131:Src/main.c    ****     TxData[3] = 0x00;          // ID
 388              		.loc 1 131 0
 389 0010 0023     		movs	r3, #0
 390 0012 8DF80230 		strb	r3, [sp, #2]
 132:Src/main.c    ****     TxData[4] = 0x02;          //  mode
 391              		.loc 1 132 0
 392 0016 8DF80330 		strb	r3, [sp, #3]
 133:Src/main.c    ****     TxData[5] = 0x28;          // address
 393              		.loc 1 133 0
 394 001a 0223     		movs	r3, #2
 395 001c 8DF80430 		strb	r3, [sp, #4]
 134:Src/main.c    ****     TxData[6] = 0x01;          // device number
 396              		.loc 1 134 0
ARM GAS  /tmp/ccqnDFob.s 			page 17


 397 0020 2823     		movs	r3, #40
 398 0022 8DF80530 		strb	r3, [sp, #5]
 135:Src/main.c    ****     TxData[7] = 0x37;          // Sum
 399              		.loc 1 135 0
 400 0026 0125     		movs	r5, #1
 401 0028 8DF80650 		strb	r5, [sp, #6]
 136:Src/main.c    **** 
 402              		.loc 1 136 0
 403 002c 3723     		movs	r3, #55
 404 002e 8DF80730 		strb	r3, [sp, #7]
 138:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t*)TxData, 8, HAL_MAX_DELAY);
 405              		.loc 1 138 0
 406 0032 4FF0FF33 		mov	r3, #-1
 407 0036 2246     		mov	r2, r4
 408 0038 6946     		mov	r1, sp
 409 003a 0748     		ldr	r0, .L17
 410 003c FFF7FEFF 		bl	HAL_UART_Transmit
 411              	.LVL26:
 139:Src/main.c    ****     HAL_Delay(1);
 412              		.loc 1 139 0
 413 0040 4FF0FF33 		mov	r3, #-1
 414 0044 2246     		mov	r2, r4
 415 0046 6946     		mov	r1, sp
 416 0048 0448     		ldr	r0, .L17+4
 417 004a FFF7FEFF 		bl	HAL_UART_Transmit
 418              	.LVL27:
 140:Src/main.c    **** }
 419              		.loc 1 140 0
 420 004e 2846     		mov	r0, r5
 421 0050 FFF7FEFF 		bl	HAL_Delay
 422              	.LVL28:
 141:Src/main.c    **** 
 423              		.loc 1 141 0
 424 0054 03B0     		add	sp, sp, #12
 425              	.LCFI11:
 426              		.cfi_def_cfa_offset 12
 427              		@ sp needed
 428 0056 30BD     		pop	{r4, r5, pc}
 429              	.L18:
 430              		.align	2
 431              	.L17:
 432 0058 00000000 		.word	huart1
 433 005c 00000000 		.word	huart2
 434              		.cfi_endproc
 435              	.LFE126:
 437              		.section	.text._Error_Handler,"ax",%progbits
 438              		.align	2
 439              		.global	_Error_Handler
 440              		.thumb
 441              		.thumb_func
 443              	_Error_Handler:
 444              	.LFB134:
 482:Src/main.c    **** 
 483:Src/main.c    **** 
 484:Src/main.c    **** /**
 485:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 486:Src/main.c    ****   * @param  None
ARM GAS  /tmp/ccqnDFob.s 			page 18


 487:Src/main.c    ****   * @retval None
 488:Src/main.c    ****   */
 489:Src/main.c    **** void _Error_Handler(char * file, int line)
 490:Src/main.c    **** {
 445              		.loc 1 490 0
 446              		.cfi_startproc
 447              		@ Volatile: function does not return.
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451              	.LVL29:
 452              	.L20:
 453 0000 FEE7     		b	.L20
 454              		.cfi_endproc
 455              	.LFE134:
 457 0002 00BF     		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 458              		.align	2
 459              		.thumb
 460              		.thumb_func
 462              	MX_USART1_UART_Init:
 463              	.LFB130:
 365:Src/main.c    **** 
 464              		.loc 1 365 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 365:Src/main.c    **** 
 468              		.loc 1 365 0
 469 0000 08B5     		push	{r3, lr}
 470              	.LCFI12:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 3, -8
 473              		.cfi_offset 14, -4
 367:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 474              		.loc 1 367 0
 475 0002 0B48     		ldr	r0, .L24
 476 0004 0B4B     		ldr	r3, .L24+4
 477 0006 0360     		str	r3, [r0]
 368:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 478              		.loc 1 368 0
 479 0008 4FF4E133 		mov	r3, #115200
 480 000c 4360     		str	r3, [r0, #4]
 369:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 481              		.loc 1 369 0
 482 000e 0023     		movs	r3, #0
 483 0010 8360     		str	r3, [r0, #8]
 370:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 484              		.loc 1 370 0
 485 0012 C360     		str	r3, [r0, #12]
 371:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 486              		.loc 1 371 0
 487 0014 0361     		str	r3, [r0, #16]
 372:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 488              		.loc 1 372 0
 489 0016 0C22     		movs	r2, #12
 490 0018 4261     		str	r2, [r0, #20]
 373:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/ccqnDFob.s 			page 19


 491              		.loc 1 373 0
 492 001a 8361     		str	r3, [r0, #24]
 374:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 493              		.loc 1 374 0
 494 001c C361     		str	r3, [r0, #28]
 375:Src/main.c    ****   {
 495              		.loc 1 375 0
 496 001e FFF7FEFF 		bl	HAL_UART_Init
 497              	.LVL30:
 498 0022 20B1     		cbz	r0, .L21
 377:Src/main.c    ****   }
 499              		.loc 1 377 0
 500 0024 40F27911 		movw	r1, #377
 501 0028 0348     		ldr	r0, .L24+8
 502 002a FFF7FEFF 		bl	_Error_Handler
 503              	.LVL31:
 504              	.L21:
 505 002e 08BD     		pop	{r3, pc}
 506              	.L25:
 507              		.align	2
 508              	.L24:
 509 0030 00000000 		.word	huart1
 510 0034 00100140 		.word	1073811456
 511 0038 00000000 		.word	.LC0
 512              		.cfi_endproc
 513              	.LFE130:
 515              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 516              		.align	2
 517              		.thumb
 518              		.thumb_func
 520              	MX_USART6_UART_Init:
 521              	.LFB132:
 405:Src/main.c    **** 
 522              		.loc 1 405 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 08B5     		push	{r3, lr}
 527              	.LCFI13:
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 3, -8
 530              		.cfi_offset 14, -4
 407:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 531              		.loc 1 407 0
 532 0002 0B48     		ldr	r0, .L29
 533 0004 0B4B     		ldr	r3, .L29+4
 534 0006 0360     		str	r3, [r0]
 408:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 535              		.loc 1 408 0
 536 0008 4FF4E133 		mov	r3, #115200
 537 000c 4360     		str	r3, [r0, #4]
 409:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 538              		.loc 1 409 0
 539 000e 0023     		movs	r3, #0
 540 0010 8360     		str	r3, [r0, #8]
 410:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 541              		.loc 1 410 0
ARM GAS  /tmp/ccqnDFob.s 			page 20


 542 0012 C360     		str	r3, [r0, #12]
 411:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 543              		.loc 1 411 0
 544 0014 0361     		str	r3, [r0, #16]
 412:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 545              		.loc 1 412 0
 546 0016 0C22     		movs	r2, #12
 547 0018 4261     		str	r2, [r0, #20]
 413:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 548              		.loc 1 413 0
 549 001a 8361     		str	r3, [r0, #24]
 414:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 550              		.loc 1 414 0
 551 001c C361     		str	r3, [r0, #28]
 415:Src/main.c    ****   {
 552              		.loc 1 415 0
 553 001e FFF7FEFF 		bl	HAL_UART_Init
 554              	.LVL32:
 555 0022 20B1     		cbz	r0, .L26
 417:Src/main.c    ****   }
 556              		.loc 1 417 0
 557 0024 40F2A111 		movw	r1, #417
 558 0028 0348     		ldr	r0, .L29+8
 559 002a FFF7FEFF 		bl	_Error_Handler
 560              	.LVL33:
 561              	.L26:
 562 002e 08BD     		pop	{r3, pc}
 563              	.L30:
 564              		.align	2
 565              	.L29:
 566 0030 00000000 		.word	huart6
 567 0034 00140140 		.word	1073812480
 568 0038 00000000 		.word	.LC0
 569              		.cfi_endproc
 570              	.LFE132:
 572              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 573              		.align	2
 574              		.thumb
 575              		.thumb_func
 577              	MX_USART2_UART_Init:
 578              	.LFB131:
 385:Src/main.c    **** 
 579              		.loc 1 385 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583 0000 08B5     		push	{r3, lr}
 584              	.LCFI14:
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 3, -8
 587              		.cfi_offset 14, -4
 387:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 588              		.loc 1 387 0
 589 0002 0B48     		ldr	r0, .L34
 590 0004 0B4B     		ldr	r3, .L34+4
 591 0006 0360     		str	r3, [r0]
 388:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
ARM GAS  /tmp/ccqnDFob.s 			page 21


 592              		.loc 1 388 0
 593 0008 4FF4E133 		mov	r3, #115200
 594 000c 4360     		str	r3, [r0, #4]
 389:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 595              		.loc 1 389 0
 596 000e 0023     		movs	r3, #0
 597 0010 8360     		str	r3, [r0, #8]
 390:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 598              		.loc 1 390 0
 599 0012 C360     		str	r3, [r0, #12]
 391:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 600              		.loc 1 391 0
 601 0014 0361     		str	r3, [r0, #16]
 392:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 602              		.loc 1 392 0
 603 0016 0C22     		movs	r2, #12
 604 0018 4261     		str	r2, [r0, #20]
 393:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 605              		.loc 1 393 0
 606 001a 8361     		str	r3, [r0, #24]
 394:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 607              		.loc 1 394 0
 608 001c C361     		str	r3, [r0, #28]
 395:Src/main.c    ****   {
 609              		.loc 1 395 0
 610 001e FFF7FEFF 		bl	HAL_UART_Init
 611              	.LVL34:
 612 0022 20B1     		cbz	r0, .L31
 397:Src/main.c    ****   }
 613              		.loc 1 397 0
 614 0024 40F28D11 		movw	r1, #397
 615 0028 0348     		ldr	r0, .L34+8
 616 002a FFF7FEFF 		bl	_Error_Handler
 617              	.LVL35:
 618              	.L31:
 619 002e 08BD     		pop	{r3, pc}
 620              	.L35:
 621              		.align	2
 622              	.L34:
 623 0030 00000000 		.word	huart2
 624 0034 00440040 		.word	1073759232
 625 0038 00000000 		.word	.LC0
 626              		.cfi_endproc
 627              	.LFE131:
 629              		.section	.text.MX_I2C1_Init,"ax",%progbits
 630              		.align	2
 631              		.thumb
 632              		.thumb_func
 634              	MX_I2C1_Init:
 635              	.LFB129:
 343:Src/main.c    **** 
 636              		.loc 1 343 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640 0000 08B5     		push	{r3, lr}
 641              	.LCFI15:
ARM GAS  /tmp/ccqnDFob.s 			page 22


 642              		.cfi_def_cfa_offset 8
 643              		.cfi_offset 3, -8
 644              		.cfi_offset 14, -4
 345:Src/main.c    ****   hi2c1.Init.ClockSpeed = 400000;
 645              		.loc 1 345 0
 646 0002 0D48     		ldr	r0, .L39
 647 0004 0D4B     		ldr	r3, .L39+4
 648 0006 0360     		str	r3, [r0]
 346:Src/main.c    ****   //hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 649              		.loc 1 346 0
 650 0008 0D4B     		ldr	r3, .L39+8
 651 000a 4360     		str	r3, [r0, #4]
 348:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 652              		.loc 1 348 0
 653 000c 0023     		movs	r3, #0
 654 000e C360     		str	r3, [r0, #12]
 349:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 655              		.loc 1 349 0
 656 0010 4FF48042 		mov	r2, #16384
 657 0014 0261     		str	r2, [r0, #16]
 350:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 658              		.loc 1 350 0
 659 0016 4361     		str	r3, [r0, #20]
 351:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 660              		.loc 1 351 0
 661 0018 8361     		str	r3, [r0, #24]
 352:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 662              		.loc 1 352 0
 663 001a C361     		str	r3, [r0, #28]
 353:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 664              		.loc 1 353 0
 665 001c 0362     		str	r3, [r0, #32]
 354:Src/main.c    ****   {
 666              		.loc 1 354 0
 667 001e FFF7FEFF 		bl	HAL_I2C_Init
 668              	.LVL36:
 669 0022 20B1     		cbz	r0, .L37
 356:Src/main.c    ****   }
 670              		.loc 1 356 0
 671 0024 4FF4B271 		mov	r1, #356
 672 0028 0648     		ldr	r0, .L39+12
 673 002a FFF7FEFF 		bl	_Error_Handler
 674              	.LVL37:
 675              	.L37:
 359:Src/main.c    **** 
 676              		.loc 1 359 0
 677 002e 0021     		movs	r1, #0
 678 0030 0148     		ldr	r0, .L39
 679 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 680              	.LVL38:
 681 0036 08BD     		pop	{r3, pc}
 682              	.L40:
 683              		.align	2
 684              	.L39:
 685 0038 00000000 		.word	hi2c1
 686 003c 00540040 		.word	1073763328
 687 0040 801A0600 		.word	400000
ARM GAS  /tmp/ccqnDFob.s 			page 23


 688 0044 00000000 		.word	.LC0
 689              		.cfi_endproc
 690              	.LFE129:
 692              		.section	.text.SystemClock_Config,"ax",%progbits
 693              		.align	2
 694              		.global	SystemClock_Config
 695              		.thumb
 696              		.thumb_func
 698              	SystemClock_Config:
 699              	.LFB128:
 288:Src/main.c    **** 
 700              		.loc 1 288 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 80
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704 0000 00B5     		push	{lr}
 705              	.LCFI16:
 706              		.cfi_def_cfa_offset 4
 707              		.cfi_offset 14, -4
 708 0002 95B0     		sub	sp, sp, #84
 709              	.LCFI17:
 710              		.cfi_def_cfa_offset 88
 711              	.LBB7:
 295:Src/main.c    **** 
 712              		.loc 1 295 0
 713 0004 0022     		movs	r2, #0
 714 0006 0192     		str	r2, [sp, #4]
 715 0008 2B4B     		ldr	r3, .L45
 716 000a 196C     		ldr	r1, [r3, #64]
 717 000c 41F08051 		orr	r1, r1, #268435456
 718 0010 1964     		str	r1, [r3, #64]
 719 0012 1B6C     		ldr	r3, [r3, #64]
 720 0014 03F08053 		and	r3, r3, #268435456
 721 0018 0193     		str	r3, [sp, #4]
 722 001a 019B     		ldr	r3, [sp, #4]
 723              	.LBE7:
 724              	.LBB8:
 297:Src/main.c    **** 
 725              		.loc 1 297 0
 726 001c 0292     		str	r2, [sp, #8]
 727 001e 2749     		ldr	r1, .L45+4
 728 0020 0B68     		ldr	r3, [r1]
 729 0022 23F44043 		bic	r3, r3, #49152
 730 0026 43F40043 		orr	r3, r3, #32768
 731 002a 0B60     		str	r3, [r1]
 732 002c 0B68     		ldr	r3, [r1]
 733 002e 03F44043 		and	r3, r3, #49152
 734 0032 0293     		str	r3, [sp, #8]
 735 0034 029B     		ldr	r3, [sp, #8]
 736              	.LBE8:
 301:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 737              		.loc 1 301 0
 738 0036 0221     		movs	r1, #2
 739 0038 0891     		str	r1, [sp, #32]
 302:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 740              		.loc 1 302 0
 741 003a 0123     		movs	r3, #1
ARM GAS  /tmp/ccqnDFob.s 			page 24


 742 003c 0B93     		str	r3, [sp, #44]
 303:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 743              		.loc 1 303 0
 744 003e 1023     		movs	r3, #16
 745 0040 0C93     		str	r3, [sp, #48]
 304:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 746              		.loc 1 304 0
 747 0042 0E91     		str	r1, [sp, #56]
 305:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 748              		.loc 1 305 0
 749 0044 0F92     		str	r2, [sp, #60]
 306:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 750              		.loc 1 306 0
 751 0046 1093     		str	r3, [sp, #64]
 307:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 752              		.loc 1 307 0
 753 0048 4FF4A873 		mov	r3, #336
 754 004c 1193     		str	r3, [sp, #68]
 308:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 755              		.loc 1 308 0
 756 004e 0423     		movs	r3, #4
 757 0050 1293     		str	r3, [sp, #72]
 309:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 758              		.loc 1 309 0
 759 0052 0723     		movs	r3, #7
 760 0054 1393     		str	r3, [sp, #76]
 310:Src/main.c    ****   {
 761              		.loc 1 310 0
 762 0056 08A8     		add	r0, sp, #32
 763 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 764              	.LVL39:
 765 005c 20B1     		cbz	r0, .L42
 312:Src/main.c    ****   }
 766              		.loc 1 312 0
 767 005e 4FF49C71 		mov	r1, #312
 768 0062 1748     		ldr	r0, .L45+8
 769 0064 FFF7FEFF 		bl	_Error_Handler
 770              	.LVL40:
 771              	.L42:
 317:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 772              		.loc 1 317 0
 773 0068 0F23     		movs	r3, #15
 774 006a 0393     		str	r3, [sp, #12]
 319:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 775              		.loc 1 319 0
 776 006c 0221     		movs	r1, #2
 777 006e 0491     		str	r1, [sp, #16]
 320:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 778              		.loc 1 320 0
 779 0070 0023     		movs	r3, #0
 780 0072 0593     		str	r3, [sp, #20]
 321:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 781              		.loc 1 321 0
 782 0074 4FF48052 		mov	r2, #4096
 783 0078 0692     		str	r2, [sp, #24]
 322:Src/main.c    **** 
 784              		.loc 1 322 0
ARM GAS  /tmp/ccqnDFob.s 			page 25


 785 007a 0793     		str	r3, [sp, #28]
 324:Src/main.c    ****   {
 786              		.loc 1 324 0
 787 007c 03A8     		add	r0, sp, #12
 788 007e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 789              	.LVL41:
 790 0082 20B1     		cbz	r0, .L43
 326:Src/main.c    ****   }
 791              		.loc 1 326 0
 792 0084 4FF4A371 		mov	r1, #326
 793 0088 0D48     		ldr	r0, .L45+8
 794 008a FFF7FEFF 		bl	_Error_Handler
 795              	.LVL42:
 796              	.L43:
 331:Src/main.c    **** 
 797              		.loc 1 331 0
 798 008e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 799              	.LVL43:
 800 0092 0C4B     		ldr	r3, .L45+12
 801 0094 A3FB0030 		umull	r3, r0, r3, r0
 802 0098 8009     		lsrs	r0, r0, #6
 803 009a FFF7FEFF 		bl	HAL_SYSTICK_Config
 804              	.LVL44:
 335:Src/main.c    **** 
 805              		.loc 1 335 0
 806 009e 0420     		movs	r0, #4
 807 00a0 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 808              	.LVL45:
 338:Src/main.c    **** }
 809              		.loc 1 338 0
 810 00a4 0022     		movs	r2, #0
 811 00a6 1146     		mov	r1, r2
 812 00a8 4FF0FF30 		mov	r0, #-1
 813 00ac FFF7FEFF 		bl	HAL_NVIC_SetPriority
 814              	.LVL46:
 339:Src/main.c    **** 
 815              		.loc 1 339 0
 816 00b0 15B0     		add	sp, sp, #84
 817              	.LCFI18:
 818              		.cfi_def_cfa_offset 4
 819              		@ sp needed
 820 00b2 5DF804FB 		ldr	pc, [sp], #4
 821              	.L46:
 822 00b6 00BF     		.align	2
 823              	.L45:
 824 00b8 00380240 		.word	1073887232
 825 00bc 00700040 		.word	1073770496
 826 00c0 00000000 		.word	.LC0
 827 00c4 D34D6210 		.word	274877907
 828              		.cfi_endproc
 829              	.LFE128:
 831              		.global	__aeabi_i2d
 832              		.global	__aeabi_dmul
 833              		.global	__aeabi_dadd
 834              		.global	__aeabi_d2iz
 835              		.section	.text.main,"ax",%progbits
 836              		.align	2
ARM GAS  /tmp/ccqnDFob.s 			page 26


 837              		.global	main
 838              		.thumb
 839              		.thumb_func
 841              	main:
 842              	.LFB127:
 162:Src/main.c    ****   SD_MPU6050_Result result ;
 843              		.loc 1 162 0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 56
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 847 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 848              	.LCFI19:
 849              		.cfi_def_cfa_offset 28
 850              		.cfi_offset 4, -28
 851              		.cfi_offset 5, -24
 852              		.cfi_offset 6, -20
 853              		.cfi_offset 7, -16
 854              		.cfi_offset 8, -12
 855              		.cfi_offset 9, -8
 856              		.cfi_offset 14, -4
 857 0004 9DB0     		sub	sp, sp, #116
 858              	.LCFI20:
 859              		.cfi_def_cfa_offset 144
 164:Src/main.c    ****   uint8_t mpu_not[17] = {"MPU NOT WORKING\n"};
 860              		.loc 1 164 0
 861 0006 824B     		ldr	r3, .L57+24
 862 0008 18AC     		add	r4, sp, #96
 863 000a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 864 000c 07C4     		stmia	r4!, {r0, r1, r2}
 865 000e 24F8023B 		strh	r3, [r4], #2	@ movhi
 866 0012 1B0C     		lsrs	r3, r3, #16
 867 0014 2370     		strb	r3, [r4]
 165:Src/main.c    **** 
 868              		.loc 1 165 0
 869 0016 13AC     		add	r4, sp, #76
 870 0018 7E4D     		ldr	r5, .L57+28
 871 001a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 872 001c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 873 001e 2B68     		ldr	r3, [r5]
 874 0020 2370     		strb	r3, [r4]
 875              	.LVL47:
 174:Src/main.c    **** 
 876              		.loc 1 174 0
 877 0022 FFF7FEFF 		bl	HAL_Init
 878              	.LVL48:
 177:Src/main.c    **** 
 879              		.loc 1 177 0
 880 0026 FFF7FEFF 		bl	SystemClock_Config
 881              	.LVL49:
 180:Src/main.c    ****   MX_USART1_UART_Init();
 882              		.loc 1 180 0
 883 002a FFF7FEFF 		bl	MX_GPIO_Init
 884              	.LVL50:
 181:Src/main.c    ****   //MX_WWDG_Init();
 885              		.loc 1 181 0
 886 002e FFF7FEFF 		bl	MX_USART1_UART_Init
 887              	.LVL51:
ARM GAS  /tmp/ccqnDFob.s 			page 27


 183:Src/main.c    ****   MX_USART2_UART_Init();
 888              		.loc 1 183 0
 889 0032 FFF7FEFF 		bl	MX_USART6_UART_Init
 890              	.LVL52:
 184:Src/main.c    ****   MX_I2C1_Init();
 891              		.loc 1 184 0
 892 0036 FFF7FEFF 		bl	MX_USART2_UART_Init
 893              	.LVL53:
 185:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC,GPIO_PIN_8,GPIO_PIN_SET);
 894              		.loc 1 185 0
 895 003a FFF7FEFF 		bl	MX_I2C1_Init
 896              	.LVL54:
 186:Src/main.c    **** 
 897              		.loc 1 186 0
 898 003e 0122     		movs	r2, #1
 899 0040 4FF48071 		mov	r1, #256
 900 0044 7448     		ldr	r0, .L57+32
 901 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 902              	.LVL55:
 189:Src/main.c    **** 
 903              		.loc 1 189 0
 904 004a 0323     		movs	r3, #3
 905 004c 0093     		str	r3, [sp]
 906 004e 0022     		movs	r2, #0
 907 0050 7249     		ldr	r1, .L57+36
 908 0052 7348     		ldr	r0, .L57+40
 909 0054 FFF7FEFF 		bl	SD_MPU6050_Init
 910              	.LVL56:
 191:Src/main.c    ****   {
 911              		.loc 1 191 0
 912 0058 38B9     		cbnz	r0, .L48
 193:Src/main.c    ****   }
 913              		.loc 1 193 0
 914 005a 4FF0FF33 		mov	r3, #-1
 915 005e 0F22     		movs	r2, #15
 916 0060 18A9     		add	r1, sp, #96
 917 0062 7048     		ldr	r0, .L57+44
 918              	.LVL57:
 919 0064 FFF7FEFF 		bl	HAL_UART_Transmit
 920              	.LVL58:
 921 0068 06E0     		b	.L49
 922              	.LVL59:
 923              	.L48:
 197:Src/main.c    ****   }
 924              		.loc 1 197 0
 925 006a 4FF0FF33 		mov	r3, #-1
 926 006e 1122     		movs	r2, #17
 927 0070 13A9     		add	r1, sp, #76
 928 0072 6C48     		ldr	r0, .L57+44
 929              	.LVL60:
 930 0074 FFF7FEFF 		bl	HAL_UART_Transmit
 931              	.LVL61:
 932              	.L49:
 200:Src/main.c    ****   B3M_RunNormal(huart6, SERVO_ID_6);
 933              		.loc 1 200 0
 934 0078 6B4E     		ldr	r6, .L57+48
 935 007a 0123     		movs	r3, #1
ARM GAS  /tmp/ccqnDFob.s 			page 28


 936 007c 0C93     		str	r3, [sp, #48]
 937 007e 6C46     		mov	r4, sp
 938 0080 06F11005 		add	r5, r6, #16
 939 0084 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 940 0086 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 941 0088 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 942 008a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 943 008c 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 944 0090 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 945 0094 96E80F00 		ldmia	r6, {r0, r1, r2, r3}
 946 0098 FFF7FEFF 		bl	B3M_RunNormal
 947              	.LVL62:
 201:Src/main.c    **** 
 948              		.loc 1 201 0
 949 009c 634E     		ldr	r6, .L57+52
 950 009e 0623     		movs	r3, #6
 951 00a0 0C93     		str	r3, [sp, #48]
 952 00a2 6C46     		mov	r4, sp
 953 00a4 06F11005 		add	r5, r6, #16
 954 00a8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 955 00aa 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 956 00ac 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 957 00ae 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 958 00b0 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 959 00b4 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 960 00b8 96E80F00 		ldmia	r6, {r0, r1, r2, r3}
 961 00bc FFF7FEFF 		bl	B3M_RunNormal
 962              	.LVL63:
 203:Src/main.c    ****   SD_MPU6050_ReadGyroscope(&hi2c1,&mpu1);
 963              		.loc 1 203 0
 964 00c0 564C     		ldr	r4, .L57+36
 965 00c2 574D     		ldr	r5, .L57+40
 966 00c4 2146     		mov	r1, r4
 967 00c6 2846     		mov	r0, r5
 968 00c8 FFF7FEFF 		bl	SD_MPU6050_ReadAccelerometer
 969              	.LVL64:
 204:Src/main.c    **** 
 970              		.loc 1 204 0
 971 00cc 2146     		mov	r1, r4
 972 00ce 2846     		mov	r0, r5
 973 00d0 FFF7FEFF 		bl	SD_MPU6050_ReadGyroscope
 974              	.LVL65:
 206:Src/main.c    ****   /* Infinite loop */
 975              		.loc 1 206 0
 976 00d4 B4F90C70 		ldrsh	r7, [r4, #12]
 977              	.LVL66:
 978              	.L53:
 979              	.LBB9:
 210:Src/main.c    ****       B3M_RunNormal(huart1, SERVO_ID_1);
 980              		.loc 1 210 0
 981 00d8 4FF40051 		mov	r1, #8192
 982 00dc 4E48     		ldr	r0, .L57+32
 983 00de FFF7FEFF 		bl	HAL_GPIO_ReadPin
 984              	.LVL67:
 985 00e2 30BB     		cbnz	r0, .L50
 211:Src/main.c    ****       B3M_RunNormal(huart6, SERVO_ID_6);
 986              		.loc 1 211 0
ARM GAS  /tmp/ccqnDFob.s 			page 29


 987 00e4 504E     		ldr	r6, .L57+48
 988 00e6 0123     		movs	r3, #1
 989 00e8 0C93     		str	r3, [sp, #48]
 990 00ea 6C46     		mov	r4, sp
 991 00ec 06F11005 		add	r5, r6, #16
 992 00f0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 993 00f2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 994 00f4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 995 00f6 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 996 00f8 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 997 00fc 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 998 0100 96E80F00 		ldmia	r6, {r0, r1, r2, r3}
 999 0104 FFF7FEFF 		bl	B3M_RunNormal
 1000              	.LVL68:
 212:Src/main.c    ****       HAL_Delay(100);
 1001              		.loc 1 212 0
 1002 0108 484E     		ldr	r6, .L57+52
 1003 010a 0623     		movs	r3, #6
 1004 010c 0C93     		str	r3, [sp, #48]
 1005 010e 6C46     		mov	r4, sp
 1006 0110 06F11005 		add	r5, r6, #16
 1007 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1008 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1009 0118 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1010 011a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1011 011c 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1012 0120 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1013 0124 96E80F00 		ldmia	r6, {r0, r1, r2, r3}
 1014 0128 FFF7FEFF 		bl	B3M_RunNormal
 1015              	.LVL69:
 213:Src/main.c    ****     }
 1016              		.loc 1 213 0
 1017 012c 6420     		movs	r0, #100
 1018 012e FFF7FEFF 		bl	HAL_Delay
 1019              	.LVL70:
 1020              	.L50:
 236:Src/main.c    ****     /*
 1021              		.loc 1 236 0
 1022 0132 3A4C     		ldr	r4, .L57+36
 1023 0134 3A4D     		ldr	r5, .L57+40
 1024 0136 2146     		mov	r1, r4
 1025 0138 2846     		mov	r0, r5
 1026 013a FFF7FEFF 		bl	SD_MPU6050_ReadGyroscope
 1027              	.LVL71:
 245:Src/main.c    ****     /*
 1028              		.loc 1 245 0
 1029 013e 2146     		mov	r1, r4
 1030 0140 2846     		mov	r0, r5
 1031 0142 FFF7FEFF 		bl	SD_MPU6050_ReadAccelerometer
 1032              	.LVL72:
 258:Src/main.c    **** 
 1033              		.loc 1 258 0
 1034 0146 B4F90C00 		ldrsh	r0, [r4, #12]
 1035 014a FFF7FEFF 		bl	__aeabi_i2d
 1036              	.LVL73:
 1037 014e 8046     		mov	r8, r0
 1038 0150 8946     		mov	r9, r1
ARM GAS  /tmp/ccqnDFob.s 			page 30


 1039              	.LVL74:
 266:Src/main.c    ****     before = diff;
 1040              		.loc 1 266 0
 1041 0152 3846     		mov	r0, r7
 1042 0154 FFF7FEFF 		bl	__aeabi_i2d
 1043              	.LVL75:
 1044 0158 27A3     		adr	r3, .L57
 1045 015a D3E90023 		ldrd	r2, [r3]
 1046 015e FFF7FEFF 		bl	__aeabi_dmul
 1047              	.LVL76:
 1048 0162 0446     		mov	r4, r0
 1049 0164 0D46     		mov	r5, r1
 1050 0166 26A3     		adr	r3, .L57+8
 1051 0168 D3E90023 		ldrd	r2, [r3]
 1052 016c 4046     		mov	r0, r8
 1053 016e 4946     		mov	r1, r9
 1054 0170 FFF7FEFF 		bl	__aeabi_dmul
 1055              	.LVL77:
 1056 0174 0246     		mov	r2, r0
 1057 0176 0B46     		mov	r3, r1
 1058 0178 2046     		mov	r0, r4
 1059 017a 2946     		mov	r1, r5
 1060 017c FFF7FEFF 		bl	__aeabi_dadd
 1061              	.LVL78:
 1062 0180 FFF7FEFF 		bl	__aeabi_d2iz
 1063              	.LVL79:
 1064 0184 07B2     		sxth	r7, r0
 1065              	.LVL80:
 268:Src/main.c    **** 
 1066              		.loc 1 268 0
 1067 0186 3846     		mov	r0, r7
 1068 0188 FFF7FEFF 		bl	__aeabi_i2d
 1069              	.LVL81:
 1070 018c 1EA3     		adr	r3, .L57+16
 1071 018e D3E90023 		ldrd	r2, [r3]
 1072 0192 FFF7FEFF 		bl	__aeabi_dmul
 1073              	.LVL82:
 1074 0196 FFF7FEFF 		bl	__aeabi_d2iz
 1075              	.LVL83:
 1076 019a 04B2     		sxth	r4, r0
 1077              	.LVL84:
 270:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t*)gyro, strlen(gyro), HAL_MAX_DELAY);
 1078              		.loc 1 270 0
 1079 019c 2246     		mov	r2, r4
 1080 019e 2449     		ldr	r1, .L57+56
 1081 01a0 0EA8     		add	r0, sp, #56
 1082 01a2 FFF7FEFF 		bl	sprintf
 1083              	.LVL85:
 271:Src/main.c    **** 
 1084              		.loc 1 271 0
 1085 01a6 0EA8     		add	r0, sp, #56
 1086 01a8 FFF7FEFF 		bl	strlen
 1087              	.LVL86:
 1088 01ac 4FF0FF33 		mov	r3, #-1
 1089 01b0 82B2     		uxth	r2, r0
 1090 01b2 0EA9     		add	r1, sp, #56
 1091 01b4 1B48     		ldr	r0, .L57+44
ARM GAS  /tmp/ccqnDFob.s 			page 31


 1092 01b6 FFF7FEFF 		bl	HAL_UART_Transmit
 1093              	.LVL87:
 273:Src/main.c    ****       diff = 9500;
 1094              		.loc 1 273 0
 1095 01ba 42F21C53 		movw	r3, #9500
 1096 01be 9C42     		cmp	r4, r3
 1097 01c0 00DD     		ble	.L51
 274:Src/main.c    **** 
 1098              		.loc 1 274 0
 1099 01c2 1C46     		mov	r4, r3
 1100              	.LVL88:
 1101              	.L51:
 276:Src/main.c    ****       diff = -9500;
 1102              		.loc 1 276 0
 1103 01c4 1B4B     		ldr	r3, .L57+60
 1104 01c6 9C42     		cmp	r4, r3
 1105 01c8 00DA     		bge	.L52
 277:Src/main.c    **** 
 1106              		.loc 1 277 0
 1107 01ca 1C46     		mov	r4, r3
 1108              	.LVL89:
 1109              	.L52:
 279:Src/main.c    ****    //B3M_SetDesirePostion(huart6, SERVO_ID_6, diff);
 1110              		.loc 1 279 0
 1111 01cc 164E     		ldr	r6, .L57+48
 1112 01ce 0D94     		str	r4, [sp, #52]
 1113 01d0 0123     		movs	r3, #1
 1114 01d2 0C93     		str	r3, [sp, #48]
 1115 01d4 6C46     		mov	r4, sp
 1116              	.LVL90:
 1117 01d6 06F11005 		add	r5, r6, #16
 1118 01da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1119 01dc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1120 01de 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1121 01e0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1122 01e2 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1123 01e6 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1124 01ea 96E80F00 		ldmia	r6, {r0, r1, r2, r3}
 1125 01ee FFF7FEFF 		bl	B3M_SetDesirePostion
 1126              	.LVL91:
 1127              	.LBE9:
 281:Src/main.c    **** 
 1128              		.loc 1 281 0
 1129 01f2 71E7     		b	.L53
 1130              	.L58:
 1131 01f4 AFF30080 		.align	3
 1132              	.L57:
 1133 01f8 AE47E17A 		.word	2061584302
 1134 01fc 14AEEF3F 		.word	1072672276
 1135 0200 8014AE47 		.word	1202590848
 1136 0204 E17A843F 		.word	1065646817
 1137 0208 C520B072 		.word	1924145349
 1138 020c 6891E13F 		.word	1071747432
 1139 0210 14000000 		.word	.LC1
 1140 0214 24000000 		.word	.LC2
 1141 0218 00080240 		.word	1073874944
 1142 021c 00000000 		.word	mpu1
ARM GAS  /tmp/ccqnDFob.s 			page 32


 1143 0220 00000000 		.word	hi2c1
 1144 0224 00000000 		.word	huart2
 1145 0228 00000000 		.word	huart1
 1146 022c 00000000 		.word	huart6
 1147 0230 0C000000 		.word	.LC3
 1148 0234 E4DAFFFF 		.word	-9500
 1149              		.cfi_endproc
 1150              	.LFE127:
 1152              		.comm	mpu1,28,4
 1153              		.comm	hi2c1,84,4
 1154              		.comm	huart6,64,4
 1155              		.comm	huart2,64,4
 1156              		.comm	huart1,64,4
 1157              		.section	.rodata.str1.4,"aMS",%progbits,1
 1158              		.align	2
 1159              	.LC0:
 1160 0000 5372632F 		.ascii	"Src/main.c\000"
 1160      6D61696E 
 1160      2E6300
 1161 000b 00       		.space	1
 1162              	.LC3:
 1163 000c 25690A0D 		.ascii	"%i\012\015\000"
 1163      00
 1164 0011 000000   		.space	3
 1165              	.LC1:
 1166 0014 4D505520 		.ascii	"MPU WORK FINE\012\000"
 1166      574F524B 
 1166      2046494E 
 1166      450A00
 1167 0023 00       		.space	1
 1168              	.LC2:
 1169 0024 4D505520 		.ascii	"MPU NOT WORKING\012\000"
 1169      4E4F5420 
 1169      574F524B 
 1169      494E470A 
 1169      00
 1170              		.text
 1171              	.Letext0:
 1172              		.file 2 "/home/ryouya/STM32Toolchain/gcc-arm-none-eabi-5_4-2016q3.2/arm-none-eabi/include/machine/
 1173              		.file 3 "/home/ryouya/STM32Toolchain/gcc-arm-none-eabi-5_4-2016q3.2/arm-none-eabi/include/sys/_std
 1174              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1175              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1176              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1177              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1178              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1179              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1180              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1181              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1182              		.file 12 "Inc/sd_hal_mpu6050.h"
 1183              		.file 13 "Drivers/CMSIS/Include/core_cm4.h"
 1184              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1185              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c_ex.h"
 1186              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1187              		.file 17 "Inc/B3M.h"
 1188              		.file 18 "/home/ryouya/STM32Toolchain/gcc-arm-none-eabi-5_4-2016q3.2/arm-none-eabi/include/stdio.h
 1189              		.file 19 "/home/ryouya/STM32Toolchain/gcc-arm-none-eabi-5_4-2016q3.2/arm-none-eabi/include/string.
ARM GAS  /tmp/ccqnDFob.s 			page 33


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccqnDFob.s:22     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccqnDFob.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccqnDFob.s:155    .text.MX_GPIO_Init:000000b4 $d
     /tmp/ccqnDFob.s:163    .text.setModeToNormal:00000000 $t
     /tmp/ccqnDFob.s:168    .text.setModeToNormal:00000000 setModeToNormal
     /tmp/ccqnDFob.s:223    .text.setModeToNormal:00000048 $d
                            *COM*:00000040 huart1
     /tmp/ccqnDFob.s:228    .text.setAngle:00000000 $t
     /tmp/ccqnDFob.s:233    .text.setAngle:00000000 setAngle
     /tmp/ccqnDFob.s:356    .text.setAngle:000000a8 $d
                            *COM*:00000040 huart2
     /tmp/ccqnDFob.s:362    .text.setFree:00000000 $t
     /tmp/ccqnDFob.s:367    .text.setFree:00000000 setFree
     /tmp/ccqnDFob.s:432    .text.setFree:00000058 $d
     /tmp/ccqnDFob.s:438    .text._Error_Handler:00000000 $t
     /tmp/ccqnDFob.s:443    .text._Error_Handler:00000000 _Error_Handler
     /tmp/ccqnDFob.s:458    .text.MX_USART1_UART_Init:00000000 $t
     /tmp/ccqnDFob.s:462    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/ccqnDFob.s:509    .text.MX_USART1_UART_Init:00000030 $d
     /tmp/ccqnDFob.s:516    .text.MX_USART6_UART_Init:00000000 $t
     /tmp/ccqnDFob.s:520    .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
     /tmp/ccqnDFob.s:566    .text.MX_USART6_UART_Init:00000030 $d
                            *COM*:00000040 huart6
     /tmp/ccqnDFob.s:573    .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccqnDFob.s:577    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccqnDFob.s:623    .text.MX_USART2_UART_Init:00000030 $d
     /tmp/ccqnDFob.s:630    .text.MX_I2C1_Init:00000000 $t
     /tmp/ccqnDFob.s:634    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
     /tmp/ccqnDFob.s:685    .text.MX_I2C1_Init:00000038 $d
                            *COM*:00000054 hi2c1
     /tmp/ccqnDFob.s:693    .text.SystemClock_Config:00000000 $t
     /tmp/ccqnDFob.s:698    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccqnDFob.s:824    .text.SystemClock_Config:000000b8 $d
     /tmp/ccqnDFob.s:836    .text.main:00000000 $t
     /tmp/ccqnDFob.s:841    .text.main:00000000 main
     /tmp/ccqnDFob.s:1133   .text.main:000001f8 $d
                            *COM*:0000001c mpu1
     /tmp/ccqnDFob.s:1158   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Transmit
HAL_Delay
HAL_UART_Receive
HAl_Delay
HAL_UART_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
ARM GAS  /tmp/ccqnDFob.s 			page 34


HAL_NVIC_SetPriority
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2iz
HAL_Init
SD_MPU6050_Init
B3M_RunNormal
SD_MPU6050_ReadAccelerometer
SD_MPU6050_ReadGyroscope
HAL_GPIO_ReadPin
sprintf
strlen
B3M_SetDesirePostion
