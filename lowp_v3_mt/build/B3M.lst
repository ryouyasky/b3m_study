ARM GAS  /tmp/ccugrpsh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"B3M.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.B3M_Load,"ax",%progbits
  22              		.align	2
  23              		.global	B3M_Load
  24              		.thumb
  25              		.thumb_func
  27              	B3M_Load:
  28              	.LFB124:
  29              		.file 1 "Src/B3M.c"
   1:Src/B3M.c     **** #include "B3M.h"
   2:Src/B3M.c     **** #include "stm32f4xx_hal.h"
   3:Src/B3M.c     **** 
   4:Src/B3M.c     **** typedef struct B3M_ReadStruct {
   5:Src/B3M.c     **** 	uint8_t size;
   6:Src/B3M.c     **** 	uint8_t command;
   7:Src/B3M.c     **** 	uint8_t option;
   8:Src/B3M.c     **** 	uint8_t ID;
   9:Src/B3M.c     **** 	uint8_t sum;
  10:Src/B3M.c     **** } B3M_ReadStruct;
  11:Src/B3M.c     **** 
  12:Src/B3M.c     **** //uint8_t B3M_Load(UART_HandleTypeDef huart, uint8_t SERVO_ID)
  13:Src/B3M.c     **** //{
  14:Src/B3M.c     **** //	B3M_ReadStruct readStruct;
  15:Src/B3M.c     **** //
  16:Src/B3M.c     **** //	readStruct.size = SIZE_5b;
  17:Src/B3M.c     **** //	readStruct.command = COMMAND_LOAD;
  18:Src/B3M.c     **** //	readStruct.option = OPTION_DEFAULT;
  19:Src/B3M.c     **** //	readStruct.ID = SERVO_ID;
  20:Src/B3M.c     **** //	readStruct.sum = readStruct.size + readStruct.command + readStruct.option + readStruct.ID;
  21:Src/B3M.c     **** //
  22:Src/B3M.c     **** //	HAL_UART_Transmit(&huart, (uint8_t*)&readStruct, readStruct.size, HAL_MAX_DELAY);
  23:Src/B3M.c     **** ////	HAL_UART_Transmit(&huart, (uint8_t*)TxData, 5, HAL_MAX_DELAY);
  24:Src/B3M.c     **** //	HAL_Delay(1);
  25:Src/B3M.c     **** //    return 0;
  26:Src/B3M.c     **** //}
  27:Src/B3M.c     **** 
  28:Src/B3M.c     **** 
  29:Src/B3M.c     **** /* Single Mode Send Format */
ARM GAS  /tmp/ccugrpsh.s 			page 2


  30:Src/B3M.c     **** uint8_t B3M_Load(UART_HandleTypeDef huart, uint8_t SERVO_ID)
  31:Src/B3M.c     **** {
  30              		.loc 1 31 0
  31              		.cfi_startproc
  32              		@ args = 68, pretend = 16, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 84B0     		sub	sp, sp, #16
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38 0002 00B5     		push	{lr}
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 20
  41              		.cfi_offset 14, -20
  42 0004 83B0     		sub	sp, sp, #12
  43              	.LCFI2:
  44              		.cfi_def_cfa_offset 32
  45 0006 0DF1100E 		add	lr, sp, #16
  46 000a 8EE80F00 		stmia	lr, {r0, r1, r2, r3}
  47              	.LVL1:
  32:Src/B3M.c     **** 	uint8_t TxData[5];
  33:Src/B3M.c     **** 	uint8_t CheckSum = 0;
  34:Src/B3M.c     **** 
  35:Src/B3M.c     **** 	TxData[0] = SIZE_5b;   								// SIZE
  48              		.loc 1 35 0
  49 000e 0523     		movs	r3, #5
  50 0010 8DF80030 		strb	r3, [sp]
  36:Src/B3M.c     **** 	TxData[1] = COMMAND_LOAD;   						// COMMAND
  51              		.loc 1 36 0
  52 0014 0123     		movs	r3, #1
  53 0016 8DF80130 		strb	r3, [sp, #1]
  37:Src/B3M.c     **** 	TxData[2] = OPTION_DEFAULT;   						// OPTION
  54              		.loc 1 37 0
  55 001a 0022     		movs	r2, #0
  56 001c 8DF80220 		strb	r2, [sp, #2]
  38:Src/B3M.c     **** 	TxData[3] = SERVO_ID;   							// ID
  57              		.loc 1 38 0
  58 0020 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
  59 0024 8DF80330 		strb	r3, [sp, #3]
  60              	.LVL2:
  61              	.LBB2:
  39:Src/B3M.c     **** 
  40:Src/B3M.c     ****     /* CheckSum Calculation */
  41:Src/B3M.c     ****     for(uint8_t i=0; i<=4; i++){
  62              		.loc 1 41 0
  63 0028 1346     		mov	r3, r2
  64 002a 07E0     		b	.L2
  65              	.LVL3:
  66              	.L3:
  42:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
  67              		.loc 1 42 0 discriminator 3
  68 002c 02A9     		add	r1, sp, #8
  69 002e 1944     		add	r1, r1, r3
  70 0030 11F8081C 		ldrb	r1, [r1, #-8]	@ zero_extendqisi2
  71 0034 0A44     		add	r2, r2, r1
  72              	.LVL4:
  73 0036 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/ccugrpsh.s 			page 3


  74              	.LVL5:
  41:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
  75              		.loc 1 41 0 discriminator 3
  76 0038 0133     		adds	r3, r3, #1
  77              	.LVL6:
  78 003a DBB2     		uxtb	r3, r3
  79              	.LVL7:
  80              	.L2:
  41:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
  81              		.loc 1 41 0 is_stmt 0 discriminator 1
  82 003c 042B     		cmp	r3, #4
  83 003e F5D9     		bls	.L3
  84              	.LBE2:
  43:Src/B3M.c     ****     }
  44:Src/B3M.c     ****     CheckSum = (uint8_t)0x00FF & CheckSum;              // CHECKSUM
  45:Src/B3M.c     **** 
  46:Src/B3M.c     ****     TxData[4] = CheckSum;
  85              		.loc 1 46 0 is_stmt 1
  86 0040 8DF80420 		strb	r2, [sp, #4]
  47:Src/B3M.c     **** 
  48:Src/B3M.c     **** 	HAL_UART_Transmit(&huart, (uint8_t*)TxData, 5, HAL_MAX_DELAY);
  87              		.loc 1 48 0
  88 0044 4FF0FF33 		mov	r3, #-1
  89              	.LVL8:
  90 0048 0522     		movs	r2, #5
  91              	.LVL9:
  92 004a 6946     		mov	r1, sp
  93 004c 04A8     		add	r0, sp, #16
  94 004e FFF7FEFF 		bl	HAL_UART_Transmit
  95              	.LVL10:
  49:Src/B3M.c     **** 	HAL_Delay(1);
  96              		.loc 1 49 0
  97 0052 0120     		movs	r0, #1
  98 0054 FFF7FEFF 		bl	HAL_Delay
  99              	.LVL11:
  50:Src/B3M.c     ****     return 0;
  51:Src/B3M.c     **** }
 100              		.loc 1 51 0
 101 0058 0020     		movs	r0, #0
 102 005a 03B0     		add	sp, sp, #12
 103              	.LCFI3:
 104              		.cfi_def_cfa_offset 20
 105              		@ sp needed
 106 005c 5DF804EB 		ldr	lr, [sp], #4
 107              	.LCFI4:
 108              		.cfi_restore 14
 109              		.cfi_def_cfa_offset 16
 110 0060 04B0     		add	sp, sp, #16
 111              	.LCFI5:
 112              		.cfi_def_cfa_offset 0
 113 0062 7047     		bx	lr
 114              		.cfi_endproc
 115              	.LFE124:
 117              		.section	.text.B3M_Save,"ax",%progbits
 118              		.align	2
 119              		.global	B3M_Save
 120              		.thumb
ARM GAS  /tmp/ccugrpsh.s 			page 4


 121              		.thumb_func
 123              	B3M_Save:
 124              	.LFB125:
  52:Src/B3M.c     **** 
  53:Src/B3M.c     **** /* Save Command */
  54:Src/B3M.c     **** uint8_t B3M_Save(UART_HandleTypeDef huart, uint8_t SERVO_ID)
  55:Src/B3M.c     **** {
 125              		.loc 1 55 0
 126              		.cfi_startproc
 127              		@ args = 68, pretend = 16, frame = 8
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              	.LVL12:
 130 0000 84B0     		sub	sp, sp, #16
 131              	.LCFI6:
 132              		.cfi_def_cfa_offset 16
 133 0002 00B5     		push	{lr}
 134              	.LCFI7:
 135              		.cfi_def_cfa_offset 20
 136              		.cfi_offset 14, -20
 137 0004 83B0     		sub	sp, sp, #12
 138              	.LCFI8:
 139              		.cfi_def_cfa_offset 32
 140 0006 0DF1100E 		add	lr, sp, #16
 141 000a 8EE80F00 		stmia	lr, {r0, r1, r2, r3}
 142              	.LVL13:
  56:Src/B3M.c     **** 	uint8_t TxData[5];
  57:Src/B3M.c     **** 	uint8_t CheckSum = 0;
  58:Src/B3M.c     **** 
  59:Src/B3M.c     **** 	TxData[0] = SIZE_5b;   								// SIZE
 143              		.loc 1 59 0
 144 000e 0523     		movs	r3, #5
 145 0010 8DF80030 		strb	r3, [sp]
  60:Src/B3M.c     **** 	TxData[1] = COMMAND_SAVE;   						// COMMAND
 146              		.loc 1 60 0
 147 0014 0223     		movs	r3, #2
 148 0016 8DF80130 		strb	r3, [sp, #1]
  61:Src/B3M.c     **** 	TxData[2] = OPTION_DEFAULT;   						// OPTION
 149              		.loc 1 61 0
 150 001a 0022     		movs	r2, #0
 151 001c 8DF80220 		strb	r2, [sp, #2]
  62:Src/B3M.c     **** 	TxData[3] = SERVO_ID;   							// ID
 152              		.loc 1 62 0
 153 0020 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 154 0024 8DF80330 		strb	r3, [sp, #3]
 155              	.LVL14:
 156              	.LBB3:
  63:Src/B3M.c     **** 
  64:Src/B3M.c     ****     /* CheckSum Calculation */
  65:Src/B3M.c     ****     for(uint8_t i=0; i<=4; i++){
 157              		.loc 1 65 0
 158 0028 1346     		mov	r3, r2
 159 002a 07E0     		b	.L6
 160              	.LVL15:
 161              	.L7:
  66:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 162              		.loc 1 66 0 discriminator 3
 163 002c 02A9     		add	r1, sp, #8
ARM GAS  /tmp/ccugrpsh.s 			page 5


 164 002e 1944     		add	r1, r1, r3
 165 0030 11F8081C 		ldrb	r1, [r1, #-8]	@ zero_extendqisi2
 166 0034 0A44     		add	r2, r2, r1
 167              	.LVL16:
 168 0036 D2B2     		uxtb	r2, r2
 169              	.LVL17:
  65:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 170              		.loc 1 65 0 discriminator 3
 171 0038 0133     		adds	r3, r3, #1
 172              	.LVL18:
 173 003a DBB2     		uxtb	r3, r3
 174              	.LVL19:
 175              	.L6:
  65:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 176              		.loc 1 65 0 is_stmt 0 discriminator 1
 177 003c 042B     		cmp	r3, #4
 178 003e F5D9     		bls	.L7
 179              	.LBE3:
  67:Src/B3M.c     ****     }
  68:Src/B3M.c     ****     CheckSum = (uint8_t)0x00FF & CheckSum;              // CHECKSUM
  69:Src/B3M.c     **** 
  70:Src/B3M.c     ****     TxData[4] = CheckSum;
 180              		.loc 1 70 0 is_stmt 1
 181 0040 8DF80420 		strb	r2, [sp, #4]
  71:Src/B3M.c     **** 
  72:Src/B3M.c     **** 	HAL_UART_Transmit(&huart, (uint8_t*)TxData, 5, HAL_MAX_DELAY);
 182              		.loc 1 72 0
 183 0044 4FF0FF33 		mov	r3, #-1
 184              	.LVL20:
 185 0048 0522     		movs	r2, #5
 186              	.LVL21:
 187 004a 6946     		mov	r1, sp
 188 004c 04A8     		add	r0, sp, #16
 189 004e FFF7FEFF 		bl	HAL_UART_Transmit
 190              	.LVL22:
  73:Src/B3M.c     **** 	HAL_Delay(1);
 191              		.loc 1 73 0
 192 0052 0120     		movs	r0, #1
 193 0054 FFF7FEFF 		bl	HAL_Delay
 194              	.LVL23:
  74:Src/B3M.c     ****     return 0;
  75:Src/B3M.c     **** }
 195              		.loc 1 75 0
 196 0058 0020     		movs	r0, #0
 197 005a 03B0     		add	sp, sp, #12
 198              	.LCFI9:
 199              		.cfi_def_cfa_offset 20
 200              		@ sp needed
 201 005c 5DF804EB 		ldr	lr, [sp], #4
 202              	.LCFI10:
 203              		.cfi_restore 14
 204              		.cfi_def_cfa_offset 16
 205 0060 04B0     		add	sp, sp, #16
 206              	.LCFI11:
 207              		.cfi_def_cfa_offset 0
 208 0062 7047     		bx	lr
 209              		.cfi_endproc
ARM GAS  /tmp/ccugrpsh.s 			page 6


 210              	.LFE125:
 212              		.section	.text.B3M_Read,"ax",%progbits
 213              		.align	2
 214              		.global	B3M_Read
 215              		.thumb
 216              		.thumb_func
 218              	B3M_Read:
 219              	.LFB126:
  76:Src/B3M.c     **** 
  77:Src/B3M.c     **** /* Read Command */
  78:Src/B3M.c     **** uint8_t B3M_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t READ_ADR, uint8_t READ_LENGTH)
  79:Src/B3M.c     **** {
 220              		.loc 1 79 0
 221              		.cfi_startproc
 222              		@ args = 76, pretend = 16, frame = 8
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              	.LVL24:
 225 0000 84B0     		sub	sp, sp, #16
 226              	.LCFI12:
 227              		.cfi_def_cfa_offset 16
 228 0002 00B5     		push	{lr}
 229              	.LCFI13:
 230              		.cfi_def_cfa_offset 20
 231              		.cfi_offset 14, -20
 232 0004 83B0     		sub	sp, sp, #12
 233              	.LCFI14:
 234              		.cfi_def_cfa_offset 32
 235 0006 0DF1100E 		add	lr, sp, #16
 236 000a 8EE80F00 		stmia	lr, {r0, r1, r2, r3}
 237              	.LVL25:
  80:Src/B3M.c     **** 	uint8_t TxData[7];
  81:Src/B3M.c     **** 	uint8_t CheckSum = 0;
  82:Src/B3M.c     **** 
  83:Src/B3M.c     **** 	TxData[0] = SIZE_7b;   								// SIZE
 238              		.loc 1 83 0
 239 000e 0723     		movs	r3, #7
 240 0010 8DF80030 		strb	r3, [sp]
  84:Src/B3M.c     **** 	TxData[1] = COMMAND_READ;   						// COMMAND
 241              		.loc 1 84 0
 242 0014 0323     		movs	r3, #3
 243 0016 8DF80130 		strb	r3, [sp, #1]
  85:Src/B3M.c     **** 	TxData[2] = OPTION_DEFAULT;   						// OPTION
 244              		.loc 1 85 0
 245 001a 0022     		movs	r2, #0
 246 001c 8DF80220 		strb	r2, [sp, #2]
  86:Src/B3M.c     **** 	TxData[3] = SERVO_ID;   							// ID
 247              		.loc 1 86 0
 248 0020 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 249 0024 8DF80330 		strb	r3, [sp, #3]
  87:Src/B3M.c     **** 	TxData[4] = READ_ADR;   							// DATA
 250              		.loc 1 87 0
 251 0028 9DF85430 		ldrb	r3, [sp, #84]	@ zero_extendqisi2
 252 002c 8DF80430 		strb	r3, [sp, #4]
  88:Src/B3M.c     **** 	TxData[5] = READ_LENGTH;   							// LENGTH
 253              		.loc 1 88 0
 254 0030 9DF85830 		ldrb	r3, [sp, #88]	@ zero_extendqisi2
 255 0034 8DF80530 		strb	r3, [sp, #5]
ARM GAS  /tmp/ccugrpsh.s 			page 7


 256              	.LVL26:
 257              	.LBB4:
  89:Src/B3M.c     **** 
  90:Src/B3M.c     ****     /* CheckSum Calculation */
  91:Src/B3M.c     ****     for(uint8_t i=0; i<=5; i++){
 258              		.loc 1 91 0
 259 0038 1346     		mov	r3, r2
 260 003a 07E0     		b	.L10
 261              	.LVL27:
 262              	.L11:
  92:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 263              		.loc 1 92 0 discriminator 3
 264 003c 02A9     		add	r1, sp, #8
 265 003e 1944     		add	r1, r1, r3
 266 0040 11F8081C 		ldrb	r1, [r1, #-8]	@ zero_extendqisi2
 267 0044 0A44     		add	r2, r2, r1
 268              	.LVL28:
 269 0046 D2B2     		uxtb	r2, r2
 270              	.LVL29:
  91:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 271              		.loc 1 91 0 discriminator 3
 272 0048 0133     		adds	r3, r3, #1
 273              	.LVL30:
 274 004a DBB2     		uxtb	r3, r3
 275              	.LVL31:
 276              	.L10:
  91:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 277              		.loc 1 91 0 is_stmt 0 discriminator 1
 278 004c 052B     		cmp	r3, #5
 279 004e F5D9     		bls	.L11
 280              	.LBE4:
  93:Src/B3M.c     ****     }
  94:Src/B3M.c     ****     CheckSum = (uint8_t)0x00FF & CheckSum;              // CHECKSUM
  95:Src/B3M.c     **** 
  96:Src/B3M.c     ****     TxData[6] = CheckSum;
 281              		.loc 1 96 0 is_stmt 1
 282 0050 8DF80620 		strb	r2, [sp, #6]
  97:Src/B3M.c     **** 
  98:Src/B3M.c     **** 	HAL_UART_Transmit(&huart, (uint8_t*)TxData, 7, HAL_MAX_DELAY);
 283              		.loc 1 98 0
 284 0054 4FF0FF33 		mov	r3, #-1
 285              	.LVL32:
 286 0058 0722     		movs	r2, #7
 287              	.LVL33:
 288 005a 6946     		mov	r1, sp
 289 005c 04A8     		add	r0, sp, #16
 290 005e FFF7FEFF 		bl	HAL_UART_Transmit
 291              	.LVL34:
  99:Src/B3M.c     **** 	HAL_Delay(1);
 292              		.loc 1 99 0
 293 0062 0120     		movs	r0, #1
 294 0064 FFF7FEFF 		bl	HAL_Delay
 295              	.LVL35:
 100:Src/B3M.c     **** 	return 0;
 101:Src/B3M.c     **** }
 296              		.loc 1 101 0
 297 0068 0020     		movs	r0, #0
ARM GAS  /tmp/ccugrpsh.s 			page 8


 298 006a 03B0     		add	sp, sp, #12
 299              	.LCFI15:
 300              		.cfi_def_cfa_offset 20
 301              		@ sp needed
 302 006c 5DF804EB 		ldr	lr, [sp], #4
 303              	.LCFI16:
 304              		.cfi_restore 14
 305              		.cfi_def_cfa_offset 16
 306 0070 04B0     		add	sp, sp, #16
 307              	.LCFI17:
 308              		.cfi_def_cfa_offset 0
 309 0072 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE126:
 313              		.section	.text.B3M_Write_1B,"ax",%progbits
 314              		.align	2
 315              		.global	B3M_Write_1B
 316              		.thumb
 317              		.thumb_func
 319              	B3M_Write_1B:
 320              	.LFB127:
 102:Src/B3M.c     **** 
 103:Src/B3M.c     **** /* Write Command */
 104:Src/B3M.c     **** uint8_t B3M_Write_1B(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint16_t DATA, uint8_t ADR)
 105:Src/B3M.c     **** {
 321              		.loc 1 105 0
 322              		.cfi_startproc
 323              		@ args = 76, pretend = 16, frame = 8
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              	.LVL36:
 326 0000 84B0     		sub	sp, sp, #16
 327              	.LCFI18:
 328              		.cfi_def_cfa_offset 16
 329 0002 00B5     		push	{lr}
 330              	.LCFI19:
 331              		.cfi_def_cfa_offset 20
 332              		.cfi_offset 14, -20
 333 0004 83B0     		sub	sp, sp, #12
 334              	.LCFI20:
 335              		.cfi_def_cfa_offset 32
 336 0006 0DF1100E 		add	lr, sp, #16
 337 000a 8EE80F00 		stmia	lr, {r0, r1, r2, r3}
 338              	.LVL37:
 106:Src/B3M.c     **** 	uint8_t TxData[8];
 107:Src/B3M.c     **** 	uint8_t CheckSum = 0;
 108:Src/B3M.c     **** 
 109:Src/B3M.c     **** 	TxData[0] = SIZE_8b;   								// SIZE
 339              		.loc 1 109 0
 340 000e 0823     		movs	r3, #8
 341 0010 8DF80030 		strb	r3, [sp]
 110:Src/B3M.c     **** 	TxData[1] = COMMAND_WRITE;   						// COMMAND
 342              		.loc 1 110 0
 343 0014 0423     		movs	r3, #4
 344 0016 8DF80130 		strb	r3, [sp, #1]
 111:Src/B3M.c     **** 	TxData[2] = OPTION_DEFAULT;   						// OPTION
 345              		.loc 1 111 0
 346 001a 0022     		movs	r2, #0
ARM GAS  /tmp/ccugrpsh.s 			page 9


 347 001c 8DF80220 		strb	r2, [sp, #2]
 112:Src/B3M.c     **** 	TxData[3] = SERVO_ID;   							// ID
 348              		.loc 1 112 0
 349 0020 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 350 0024 8DF80330 		strb	r3, [sp, #3]
 113:Src/B3M.c     **** 	TxData[4] = DATA;   								// DATA
 351              		.loc 1 113 0
 352 0028 BDF85430 		ldrh	r3, [sp, #84]
 353 002c 8DF80430 		strb	r3, [sp, #4]
 114:Src/B3M.c     **** 	TxData[5] = ADR;   									// ADR
 354              		.loc 1 114 0
 355 0030 9DF85830 		ldrb	r3, [sp, #88]	@ zero_extendqisi2
 356 0034 8DF80530 		strb	r3, [sp, #5]
 115:Src/B3M.c     **** 	TxData[6] = COUNT;									// CNT
 357              		.loc 1 115 0
 358 0038 0123     		movs	r3, #1
 359 003a 8DF80630 		strb	r3, [sp, #6]
 360              	.LVL38:
 361              	.LBB5:
 116:Src/B3M.c     **** 
 117:Src/B3M.c     ****     /* CheckSum Calculation */
 118:Src/B3M.c     ****     for(uint8_t i=0; i<=6; i++){
 362              		.loc 1 118 0
 363 003e 1346     		mov	r3, r2
 364 0040 07E0     		b	.L14
 365              	.LVL39:
 366              	.L15:
 119:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 367              		.loc 1 119 0 discriminator 3
 368 0042 02A9     		add	r1, sp, #8
 369 0044 1944     		add	r1, r1, r3
 370 0046 11F8081C 		ldrb	r1, [r1, #-8]	@ zero_extendqisi2
 371 004a 0A44     		add	r2, r2, r1
 372              	.LVL40:
 373 004c D2B2     		uxtb	r2, r2
 374              	.LVL41:
 118:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 375              		.loc 1 118 0 discriminator 3
 376 004e 0133     		adds	r3, r3, #1
 377              	.LVL42:
 378 0050 DBB2     		uxtb	r3, r3
 379              	.LVL43:
 380              	.L14:
 118:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 381              		.loc 1 118 0 is_stmt 0 discriminator 1
 382 0052 062B     		cmp	r3, #6
 383 0054 F5D9     		bls	.L15
 384              	.LBE5:
 120:Src/B3M.c     ****     }
 121:Src/B3M.c     ****     CheckSum = (uint8_t)0x00FF & CheckSum;              // CHECKSUM
 122:Src/B3M.c     **** 
 123:Src/B3M.c     ****     TxData[7] = CheckSum;
 385              		.loc 1 123 0 is_stmt 1
 386 0056 8DF80720 		strb	r2, [sp, #7]
 124:Src/B3M.c     **** 
 125:Src/B3M.c     **** 	HAL_UART_Transmit(&huart, (uint8_t*)TxData, 8, HAL_MAX_DELAY);
 387              		.loc 1 125 0
ARM GAS  /tmp/ccugrpsh.s 			page 10


 388 005a 4FF0FF33 		mov	r3, #-1
 389              	.LVL44:
 390 005e 0822     		movs	r2, #8
 391              	.LVL45:
 392 0060 6946     		mov	r1, sp
 393 0062 04A8     		add	r0, sp, #16
 394 0064 FFF7FEFF 		bl	HAL_UART_Transmit
 395              	.LVL46:
 126:Src/B3M.c     **** 	HAL_Delay(1);
 396              		.loc 1 126 0
 397 0068 0120     		movs	r0, #1
 398 006a FFF7FEFF 		bl	HAL_Delay
 399              	.LVL47:
 127:Src/B3M.c     **** 	return 0;
 128:Src/B3M.c     **** }
 400              		.loc 1 128 0
 401 006e 0020     		movs	r0, #0
 402 0070 03B0     		add	sp, sp, #12
 403              	.LCFI21:
 404              		.cfi_def_cfa_offset 20
 405              		@ sp needed
 406 0072 5DF804EB 		ldr	lr, [sp], #4
 407              	.LCFI22:
 408              		.cfi_restore 14
 409              		.cfi_def_cfa_offset 16
 410 0076 04B0     		add	sp, sp, #16
 411              	.LCFI23:
 412              		.cfi_def_cfa_offset 0
 413 0078 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE127:
 417 007a 00BF     		.section	.text.B3M_Write_2B,"ax",%progbits
 418              		.align	2
 419              		.global	B3M_Write_2B
 420              		.thumb
 421              		.thumb_func
 423              	B3M_Write_2B:
 424              	.LFB128:
 129:Src/B3M.c     **** 
 130:Src/B3M.c     **** uint8_t B3M_Write_2B(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint16_t DATA, uint8_t ADR)
 131:Src/B3M.c     **** {
 425              		.loc 1 131 0
 426              		.cfi_startproc
 427              		@ args = 76, pretend = 16, frame = 16
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              	.LVL48:
 430 0000 84B0     		sub	sp, sp, #16
 431              	.LCFI24:
 432              		.cfi_def_cfa_offset 16
 433 0002 00B5     		push	{lr}
 434              	.LCFI25:
 435              		.cfi_def_cfa_offset 20
 436              		.cfi_offset 14, -20
 437 0004 85B0     		sub	sp, sp, #20
 438              	.LCFI26:
 439              		.cfi_def_cfa_offset 40
 440 0006 0DF1180E 		add	lr, sp, #24
ARM GAS  /tmp/ccugrpsh.s 			page 11


 441 000a 8EE80F00 		stmia	lr, {r0, r1, r2, r3}
 442 000e BDF85C30 		ldrh	r3, [sp, #92]
 443              	.LVL49:
 132:Src/B3M.c     **** 	uint8_t TxData[9];
 133:Src/B3M.c     **** 	uint8_t CheckSum = 0;
 134:Src/B3M.c     **** 
 135:Src/B3M.c     **** 	TxData[0] = SIZE_9b;   								// SIZE
 444              		.loc 1 135 0
 445 0012 0922     		movs	r2, #9
 446 0014 8DF80420 		strb	r2, [sp, #4]
 136:Src/B3M.c     **** 	TxData[1] = COMMAND_WRITE;   						// COMMAND
 447              		.loc 1 136 0
 448 0018 0422     		movs	r2, #4
 449 001a 8DF80520 		strb	r2, [sp, #5]
 137:Src/B3M.c     **** 	TxData[2] = OPTION_DEFAULT;   						// OPTION
 450              		.loc 1 137 0
 451 001e 0022     		movs	r2, #0
 452 0020 8DF80620 		strb	r2, [sp, #6]
 138:Src/B3M.c     **** 	TxData[3] = SERVO_ID;   							// ID
 453              		.loc 1 138 0
 454 0024 9DF85810 		ldrb	r1, [sp, #88]	@ zero_extendqisi2
 455 0028 8DF80710 		strb	r1, [sp, #7]
 139:Src/B3M.c     ****     TxData[4] = (uint8_t)0x00FF & DATA;             	// DATA_LSB
 456              		.loc 1 139 0
 457 002c 8DF80830 		strb	r3, [sp, #8]
 140:Src/B3M.c     ****     TxData[5] = (uint8_t)0x00FF & (DATA >> 8);    		// DATA_MSB
 458              		.loc 1 140 0
 459 0030 1B0A     		lsrs	r3, r3, #8
 460 0032 8DF80930 		strb	r3, [sp, #9]
 141:Src/B3M.c     **** 	TxData[6] = ADR;   									// ADR
 461              		.loc 1 141 0
 462 0036 9DF86030 		ldrb	r3, [sp, #96]	@ zero_extendqisi2
 463 003a 8DF80A30 		strb	r3, [sp, #10]
 142:Src/B3M.c     **** 	TxData[7] = COUNT;									// CNT
 464              		.loc 1 142 0
 465 003e 0123     		movs	r3, #1
 466 0040 8DF80B30 		strb	r3, [sp, #11]
 467              	.LVL50:
 468              	.LBB6:
 143:Src/B3M.c     **** 
 144:Src/B3M.c     ****     /* CheckSum Calculation */
 145:Src/B3M.c     ****     for(uint8_t i=0; i<=7; i++){
 469              		.loc 1 145 0
 470 0044 1346     		mov	r3, r2
 471 0046 07E0     		b	.L18
 472              	.LVL51:
 473              	.L19:
 146:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 474              		.loc 1 146 0 discriminator 3
 475 0048 04A9     		add	r1, sp, #16
 476 004a 1944     		add	r1, r1, r3
 477 004c 11F80C1C 		ldrb	r1, [r1, #-12]	@ zero_extendqisi2
 478 0050 0A44     		add	r2, r2, r1
 479              	.LVL52:
 480 0052 D2B2     		uxtb	r2, r2
 481              	.LVL53:
 145:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
ARM GAS  /tmp/ccugrpsh.s 			page 12


 482              		.loc 1 145 0 discriminator 3
 483 0054 0133     		adds	r3, r3, #1
 484              	.LVL54:
 485 0056 DBB2     		uxtb	r3, r3
 486              	.LVL55:
 487              	.L18:
 145:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 488              		.loc 1 145 0 is_stmt 0 discriminator 1
 489 0058 072B     		cmp	r3, #7
 490 005a F5D9     		bls	.L19
 491              	.LBE6:
 147:Src/B3M.c     ****     }
 148:Src/B3M.c     ****     CheckSum = (uint8_t)0x00FF & CheckSum;              // CHECKSUM
 149:Src/B3M.c     **** 
 150:Src/B3M.c     ****     TxData[8] = CheckSum;
 492              		.loc 1 150 0 is_stmt 1
 493 005c 8DF80C20 		strb	r2, [sp, #12]
 151:Src/B3M.c     **** 
 152:Src/B3M.c     **** 	HAL_UART_Transmit(&huart, (uint8_t*)TxData, 9, HAL_MAX_DELAY);
 494              		.loc 1 152 0
 495 0060 4FF0FF33 		mov	r3, #-1
 496              	.LVL56:
 497 0064 0922     		movs	r2, #9
 498              	.LVL57:
 499 0066 01A9     		add	r1, sp, #4
 500 0068 06A8     		add	r0, sp, #24
 501 006a FFF7FEFF 		bl	HAL_UART_Transmit
 502              	.LVL58:
 153:Src/B3M.c     **** 	HAL_Delay(1);
 503              		.loc 1 153 0
 504 006e 0120     		movs	r0, #1
 505 0070 FFF7FEFF 		bl	HAL_Delay
 506              	.LVL59:
 154:Src/B3M.c     **** 	return 0;
 155:Src/B3M.c     **** }
 507              		.loc 1 155 0
 508 0074 0020     		movs	r0, #0
 509 0076 05B0     		add	sp, sp, #20
 510              	.LCFI27:
 511              		.cfi_def_cfa_offset 20
 512              		@ sp needed
 513 0078 5DF804EB 		ldr	lr, [sp], #4
 514              	.LCFI28:
 515              		.cfi_restore 14
 516              		.cfi_def_cfa_offset 16
 517 007c 04B0     		add	sp, sp, #16
 518              	.LCFI29:
 519              		.cfi_def_cfa_offset 0
 520 007e 7047     		bx	lr
 521              		.cfi_endproc
 522              	.LFE128:
 524              		.section	.text.B3M_Write_4B,"ax",%progbits
 525              		.align	2
 526              		.global	B3M_Write_4B
 527              		.thumb
 528              		.thumb_func
 530              	B3M_Write_4B:
ARM GAS  /tmp/ccugrpsh.s 			page 13


 531              	.LFB129:
 156:Src/B3M.c     **** 
 157:Src/B3M.c     **** uint8_t B3M_Write_4B(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint16_t DATA, uint8_t ADDR)
 158:Src/B3M.c     **** {
 532              		.loc 1 158 0
 533              		.cfi_startproc
 534              		@ args = 76, pretend = 16, frame = 16
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              	.LVL60:
 537 0000 84B0     		sub	sp, sp, #16
 538              	.LCFI30:
 539              		.cfi_def_cfa_offset 16
 540 0002 00B5     		push	{lr}
 541              	.LCFI31:
 542              		.cfi_def_cfa_offset 20
 543              		.cfi_offset 14, -20
 544 0004 85B0     		sub	sp, sp, #20
 545              	.LCFI32:
 546              		.cfi_def_cfa_offset 40
 547 0006 0DF1180E 		add	lr, sp, #24
 548 000a 8EE80F00 		stmia	lr, {r0, r1, r2, r3}
 549 000e BDF85C30 		ldrh	r3, [sp, #92]
 550              	.LVL61:
 159:Src/B3M.c     **** 	uint8_t TxData[11];
 160:Src/B3M.c     **** 	uint8_t CheckSum = 0;
 161:Src/B3M.c     **** 
 162:Src/B3M.c     **** 	TxData[0] = SIZE_11b;   							// SIZE
 551              		.loc 1 162 0
 552 0012 0B22     		movs	r2, #11
 553 0014 8DF80420 		strb	r2, [sp, #4]
 163:Src/B3M.c     **** 	TxData[1] = COMMAND_WRITE;   						// COMMAND
 554              		.loc 1 163 0
 555 0018 0422     		movs	r2, #4
 556 001a 8DF80520 		strb	r2, [sp, #5]
 164:Src/B3M.c     **** 	TxData[2] = OPTION_DEFAULT;   						// OPTION
 557              		.loc 1 164 0
 558 001e 0022     		movs	r2, #0
 559 0020 8DF80620 		strb	r2, [sp, #6]
 165:Src/B3M.c     **** 	TxData[3] = SERVO_ID;   							// ID
 560              		.loc 1 165 0
 561 0024 9DF85810 		ldrb	r1, [sp, #88]	@ zero_extendqisi2
 562 0028 8DF80710 		strb	r1, [sp, #7]
 166:Src/B3M.c     ****     TxData[4] = (uint8_t)0x000000FF & DATA;             // DATA_LSB
 563              		.loc 1 166 0
 564 002c 8DF80830 		strb	r3, [sp, #8]
 167:Src/B3M.c     ****     TxData[5] = (uint8_t)0x000000FF & (DATA >> 8);    	// DATA_MIDLE2
 565              		.loc 1 167 0
 566 0030 190A     		lsrs	r1, r3, #8
 567 0032 8DF80910 		strb	r1, [sp, #9]
 168:Src/B3M.c     ****     TxData[6] = (uint8_t)0x000000FF & (DATA >> 12);		// DATA_MIDLE1
 568              		.loc 1 168 0
 569 0036 1B0B     		lsrs	r3, r3, #12
 570 0038 8DF80A30 		strb	r3, [sp, #10]
 169:Src/B3M.c     ****     TxData[7] = (uint8_t)0x000000FF & (DATA >> 16);		// DATA_MSB
 571              		.loc 1 169 0
 572 003c 8DF80B20 		strb	r2, [sp, #11]
 170:Src/B3M.c     **** 	TxData[8] = ADDR;   									// ADR
ARM GAS  /tmp/ccugrpsh.s 			page 14


 573              		.loc 1 170 0
 574 0040 9DF86030 		ldrb	r3, [sp, #96]	@ zero_extendqisi2
 575 0044 8DF80C30 		strb	r3, [sp, #12]
 171:Src/B3M.c     **** 	TxData[9] = COUNT;									// CNT
 576              		.loc 1 171 0
 577 0048 0123     		movs	r3, #1
 578 004a 8DF80D30 		strb	r3, [sp, #13]
 579              	.LVL62:
 580              	.LBB7:
 172:Src/B3M.c     **** 
 173:Src/B3M.c     ****     /* CheckSum Calculation */
 174:Src/B3M.c     ****     for(uint8_t i=0; i<=9; i++){
 581              		.loc 1 174 0
 582 004e 1346     		mov	r3, r2
 583 0050 07E0     		b	.L22
 584              	.LVL63:
 585              	.L23:
 175:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 586              		.loc 1 175 0 discriminator 3
 587 0052 04A9     		add	r1, sp, #16
 588 0054 1944     		add	r1, r1, r3
 589 0056 11F80C1C 		ldrb	r1, [r1, #-12]	@ zero_extendqisi2
 590 005a 0A44     		add	r2, r2, r1
 591              	.LVL64:
 592 005c D2B2     		uxtb	r2, r2
 593              	.LVL65:
 174:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 594              		.loc 1 174 0 discriminator 3
 595 005e 0133     		adds	r3, r3, #1
 596              	.LVL66:
 597 0060 DBB2     		uxtb	r3, r3
 598              	.LVL67:
 599              	.L22:
 174:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 600              		.loc 1 174 0 is_stmt 0 discriminator 1
 601 0062 092B     		cmp	r3, #9
 602 0064 F5D9     		bls	.L23
 603              	.LBE7:
 176:Src/B3M.c     ****     }
 177:Src/B3M.c     ****     CheckSum = (uint8_t)0x00FF & CheckSum;              // CHECKSUM
 178:Src/B3M.c     **** 
 179:Src/B3M.c     ****     TxData[10] = CheckSum;
 604              		.loc 1 179 0 is_stmt 1
 605 0066 8DF80E20 		strb	r2, [sp, #14]
 180:Src/B3M.c     **** 
 181:Src/B3M.c     **** 	HAL_UART_Transmit(&huart, (uint8_t*)TxData, 11, HAL_MAX_DELAY);
 606              		.loc 1 181 0
 607 006a 4FF0FF33 		mov	r3, #-1
 608              	.LVL68:
 609 006e 0B22     		movs	r2, #11
 610              	.LVL69:
 611 0070 01A9     		add	r1, sp, #4
 612 0072 06A8     		add	r0, sp, #24
 613 0074 FFF7FEFF 		bl	HAL_UART_Transmit
 614              	.LVL70:
 182:Src/B3M.c     **** 	HAL_Delay(1);
 615              		.loc 1 182 0
ARM GAS  /tmp/ccugrpsh.s 			page 15


 616 0078 0120     		movs	r0, #1
 617 007a FFF7FEFF 		bl	HAL_Delay
 618              	.LVL71:
 183:Src/B3M.c     **** 	return 0;
 184:Src/B3M.c     **** }
 619              		.loc 1 184 0
 620 007e 0020     		movs	r0, #0
 621 0080 05B0     		add	sp, sp, #20
 622              	.LCFI33:
 623              		.cfi_def_cfa_offset 20
 624              		@ sp needed
 625 0082 5DF804EB 		ldr	lr, [sp], #4
 626              	.LCFI34:
 627              		.cfi_restore 14
 628              		.cfi_def_cfa_offset 16
 629 0086 04B0     		add	sp, sp, #16
 630              	.LCFI35:
 631              		.cfi_def_cfa_offset 0
 632 0088 7047     		bx	lr
 633              		.cfi_endproc
 634              	.LFE129:
 636 008a 00BF     		.section	.text.B3M_Reset,"ax",%progbits
 637              		.align	2
 638              		.global	B3M_Reset
 639              		.thumb
 640              		.thumb_func
 642              	B3M_Reset:
 643              	.LFB130:
 185:Src/B3M.c     **** 
 186:Src/B3M.c     **** /* Reset Command */
 187:Src/B3M.c     **** void B3M_Reset(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t TIME)
 188:Src/B3M.c     **** {
 644              		.loc 1 188 0
 645              		.cfi_startproc
 646              		@ args = 72, pretend = 16, frame = 8
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              	.LVL72:
 649 0000 84B0     		sub	sp, sp, #16
 650              	.LCFI36:
 651              		.cfi_def_cfa_offset 16
 652 0002 00B5     		push	{lr}
 653              	.LCFI37:
 654              		.cfi_def_cfa_offset 20
 655              		.cfi_offset 14, -20
 656 0004 83B0     		sub	sp, sp, #12
 657              	.LCFI38:
 658              		.cfi_def_cfa_offset 32
 659 0006 0DF1100E 		add	lr, sp, #16
 660 000a 8EE80F00 		stmia	lr, {r0, r1, r2, r3}
 661              	.LVL73:
 189:Src/B3M.c     **** 	uint8_t TxData[6];
 190:Src/B3M.c     **** 	uint8_t CheckSum = 0;
 191:Src/B3M.c     **** 
 192:Src/B3M.c     **** 	TxData[0] = SIZE_6b;   								// SIZE
 662              		.loc 1 192 0
 663 000e 0623     		movs	r3, #6
 664 0010 8DF80030 		strb	r3, [sp]
ARM GAS  /tmp/ccugrpsh.s 			page 16


 193:Src/B3M.c     **** 	TxData[1] = COMMAND_RESET;   						// COMMAND
 665              		.loc 1 193 0
 666 0014 0523     		movs	r3, #5
 667 0016 8DF80130 		strb	r3, [sp, #1]
 194:Src/B3M.c     **** 	TxData[2] = OPTION_DEFAULT;   						// OPTION
 668              		.loc 1 194 0
 669 001a 0022     		movs	r2, #0
 670 001c 8DF80220 		strb	r2, [sp, #2]
 195:Src/B3M.c     **** 	TxData[3] = SERVO_ID;   							// ID
 671              		.loc 1 195 0
 672 0020 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 673 0024 8DF80330 		strb	r3, [sp, #3]
 196:Src/B3M.c     **** 	TxData[4] = TIME;   								// TIME
 674              		.loc 1 196 0
 675 0028 9DF85430 		ldrb	r3, [sp, #84]	@ zero_extendqisi2
 676 002c 8DF80430 		strb	r3, [sp, #4]
 677              	.LVL74:
 678              	.LBB8:
 197:Src/B3M.c     **** 
 198:Src/B3M.c     ****     /* CheckSum Calculation */
 199:Src/B3M.c     ****     for(uint8_t i=0; i<=4; i++){
 679              		.loc 1 199 0
 680 0030 1346     		mov	r3, r2
 681 0032 07E0     		b	.L26
 682              	.LVL75:
 683              	.L27:
 200:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 684              		.loc 1 200 0 discriminator 3
 685 0034 02A9     		add	r1, sp, #8
 686 0036 1944     		add	r1, r1, r3
 687 0038 11F8081C 		ldrb	r1, [r1, #-8]	@ zero_extendqisi2
 688 003c 0A44     		add	r2, r2, r1
 689              	.LVL76:
 690 003e D2B2     		uxtb	r2, r2
 691              	.LVL77:
 199:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 692              		.loc 1 199 0 discriminator 3
 693 0040 0133     		adds	r3, r3, #1
 694              	.LVL78:
 695 0042 DBB2     		uxtb	r3, r3
 696              	.LVL79:
 697              	.L26:
 199:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 698              		.loc 1 199 0 is_stmt 0 discriminator 1
 699 0044 042B     		cmp	r3, #4
 700 0046 F5D9     		bls	.L27
 701              	.LBE8:
 201:Src/B3M.c     ****     }
 202:Src/B3M.c     ****     CheckSum = (uint8_t)0x00FF & CheckSum;              // CHECKSUM
 203:Src/B3M.c     **** 
 204:Src/B3M.c     ****     TxData[5] = CheckSum;
 702              		.loc 1 204 0 is_stmt 1
 703 0048 8DF80520 		strb	r2, [sp, #5]
 205:Src/B3M.c     **** 
 206:Src/B3M.c     **** 	HAL_UART_Transmit(&huart, (uint8_t*)TxData, 6, HAL_MAX_DELAY);
 704              		.loc 1 206 0
 705 004c 4FF0FF33 		mov	r3, #-1
ARM GAS  /tmp/ccugrpsh.s 			page 17


 706              	.LVL80:
 707 0050 0622     		movs	r2, #6
 708              	.LVL81:
 709 0052 6946     		mov	r1, sp
 710 0054 04A8     		add	r0, sp, #16
 711 0056 FFF7FEFF 		bl	HAL_UART_Transmit
 712              	.LVL82:
 207:Src/B3M.c     **** 	HAL_Delay(1);
 713              		.loc 1 207 0
 714 005a 0120     		movs	r0, #1
 715 005c FFF7FEFF 		bl	HAL_Delay
 716              	.LVL83:
 208:Src/B3M.c     **** }
 717              		.loc 1 208 0
 718 0060 03B0     		add	sp, sp, #12
 719              	.LCFI39:
 720              		.cfi_def_cfa_offset 20
 721              		@ sp needed
 722 0062 5DF804EB 		ldr	lr, [sp], #4
 723              	.LCFI40:
 724              		.cfi_restore 14
 725              		.cfi_def_cfa_offset 16
 726 0066 04B0     		add	sp, sp, #16
 727              	.LCFI41:
 728              		.cfi_def_cfa_offset 0
 729 0068 7047     		bx	lr
 730              		.cfi_endproc
 731              	.LFE130:
 733 006a 00BF     		.section	.text.B3M_SetDesirePostion,"ax",%progbits
 734              		.align	2
 735              		.global	B3M_SetDesirePostion
 736              		.thumb
 737              		.thumb_func
 739              	B3M_SetDesirePostion:
 740              	.LFB131:
 209:Src/B3M.c     **** 
 210:Src/B3M.c     **** /* Set Position */
 211:Src/B3M.c     **** uint8_t B3M_SetDesirePostion(UART_HandleTypeDef huart, uint8_t SERVO_ID, int16_t POSITION)
 212:Src/B3M.c     **** {
 741              		.loc 1 212 0
 742              		.cfi_startproc
 743              		@ args = 72, pretend = 16, frame = 16
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              	.LVL84:
 746 0000 84B0     		sub	sp, sp, #16
 747              	.LCFI42:
 748              		.cfi_def_cfa_offset 16
 749 0002 00B5     		push	{lr}
 750              	.LCFI43:
 751              		.cfi_def_cfa_offset 20
 752              		.cfi_offset 14, -20
 753 0004 85B0     		sub	sp, sp, #20
 754              	.LCFI44:
 755              		.cfi_def_cfa_offset 40
 756 0006 0DF1180E 		add	lr, sp, #24
 757 000a 8EE80F00 		stmia	lr, {r0, r1, r2, r3}
 758 000e BDF95C30 		ldrsh	r3, [sp, #92]
ARM GAS  /tmp/ccugrpsh.s 			page 18


 759              	.LVL85:
 213:Src/B3M.c     ****     /* Local Variable */
 214:Src/B3M.c     ****     uint8_t TxData[9];
 215:Src/B3M.c     ****     uint8_t CheckSum = 0;
 216:Src/B3M.c     **** 
 217:Src/B3M.c     ****     if(POSITION<0)
 218:Src/B3M.c     ****         POSITION = 65535+POSITION+1;
 219:Src/B3M.c     **** 
 220:Src/B3M.c     ****     TxData[0] = SIZE_9b;                                // SIZE
 760              		.loc 1 220 0
 761 0012 0922     		movs	r2, #9
 762 0014 8DF80420 		strb	r2, [sp, #4]
 221:Src/B3M.c     ****     TxData[1] = COMMAND_WRITE;                          // CMD
 763              		.loc 1 221 0
 764 0018 0422     		movs	r2, #4
 765 001a 8DF80520 		strb	r2, [sp, #5]
 222:Src/B3M.c     ****     TxData[2] = OPTION_DEFAULT;                         // OPTION
 766              		.loc 1 222 0
 767 001e 0022     		movs	r2, #0
 768 0020 8DF80620 		strb	r2, [sp, #6]
 223:Src/B3M.c     ****     TxData[3] = SERVO_ID;                               // ID
 769              		.loc 1 223 0
 770 0024 9DF85810 		ldrb	r1, [sp, #88]	@ zero_extendqisi2
 771 0028 8DF80710 		strb	r1, [sp, #7]
 224:Src/B3M.c     ****     TxData[4] = (uint8_t)0x00FF & POSITION;             // POSITION_LSB
 772              		.loc 1 224 0
 773 002c 8DF80830 		strb	r3, [sp, #8]
 225:Src/B3M.c     ****     TxData[5] = (uint8_t)0x00FF & (POSITION >> 8);      // POSITION_MSB
 774              		.loc 1 225 0
 775 0030 C3F30723 		ubfx	r3, r3, #8, #8
 776              	.LVL86:
 777 0034 8DF80930 		strb	r3, [sp, #9]
 226:Src/B3M.c     ****     TxData[6] =SERVO_DESIRED_POSITION;        			// ADR
 778              		.loc 1 226 0
 779 0038 2A23     		movs	r3, #42
 780 003a 8DF80A30 		strb	r3, [sp, #10]
 227:Src/B3M.c     ****     TxData[7] = COUNT;                                  // COUNT
 781              		.loc 1 227 0
 782 003e 0123     		movs	r3, #1
 783 0040 8DF80B30 		strb	r3, [sp, #11]
 784              	.LVL87:
 785              	.LBB9:
 228:Src/B3M.c     **** 
 229:Src/B3M.c     ****     /* CheckSum Calculation */
 230:Src/B3M.c     ****     for(uint8_t i=0; i<=7; i++){
 786              		.loc 1 230 0
 787 0044 1346     		mov	r3, r2
 788 0046 07E0     		b	.L30
 789              	.LVL88:
 790              	.L31:
 231:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 791              		.loc 1 231 0 discriminator 3
 792 0048 04A9     		add	r1, sp, #16
 793 004a 1944     		add	r1, r1, r3
 794 004c 11F80C1C 		ldrb	r1, [r1, #-12]	@ zero_extendqisi2
 795 0050 0A44     		add	r2, r2, r1
 796              	.LVL89:
ARM GAS  /tmp/ccugrpsh.s 			page 19


 797 0052 D2B2     		uxtb	r2, r2
 798              	.LVL90:
 230:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 799              		.loc 1 230 0 discriminator 3
 800 0054 0133     		adds	r3, r3, #1
 801              	.LVL91:
 802 0056 DBB2     		uxtb	r3, r3
 803              	.LVL92:
 804              	.L30:
 230:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 805              		.loc 1 230 0 is_stmt 0 discriminator 1
 806 0058 072B     		cmp	r3, #7
 807 005a F5D9     		bls	.L31
 808              	.LBE9:
 232:Src/B3M.c     ****     }
 233:Src/B3M.c     ****     CheckSum = (uint8_t)0x00FF & CheckSum;              // CHECKSUM
 234:Src/B3M.c     **** 
 235:Src/B3M.c     ****     TxData[8] = CheckSum;
 809              		.loc 1 235 0 is_stmt 1
 810 005c 8DF80C20 		strb	r2, [sp, #12]
 236:Src/B3M.c     **** 
 237:Src/B3M.c     ****     HAL_UART_Transmit(&huart, (uint8_t*)TxData, 9, HAL_MAX_DELAY);
 811              		.loc 1 237 0
 812 0060 4FF0FF33 		mov	r3, #-1
 813              	.LVL93:
 814 0064 0922     		movs	r2, #9
 815              	.LVL94:
 816 0066 01A9     		add	r1, sp, #4
 817 0068 06A8     		add	r0, sp, #24
 818 006a FFF7FEFF 		bl	HAL_UART_Transmit
 819              	.LVL95:
 238:Src/B3M.c     ****     HAL_Delay(1);
 820              		.loc 1 238 0
 821 006e 0120     		movs	r0, #1
 822 0070 FFF7FEFF 		bl	HAL_Delay
 823              	.LVL96:
 239:Src/B3M.c     ****     return 0;
 240:Src/B3M.c     **** }
 824              		.loc 1 240 0
 825 0074 0020     		movs	r0, #0
 826 0076 05B0     		add	sp, sp, #20
 827              	.LCFI45:
 828              		.cfi_def_cfa_offset 20
 829              		@ sp needed
 830 0078 5DF804EB 		ldr	lr, [sp], #4
 831              	.LCFI46:
 832              		.cfi_restore 14
 833              		.cfi_def_cfa_offset 16
 834 007c 04B0     		add	sp, sp, #16
 835              	.LCFI47:
 836              		.cfi_def_cfa_offset 0
 837 007e 7047     		bx	lr
 838              		.cfi_endproc
 839              	.LFE131:
 841              		.section	.text.B3M_SetPosition,"ax",%progbits
 842              		.align	2
 843              		.global	B3M_SetPosition
ARM GAS  /tmp/ccugrpsh.s 			page 20


 844              		.thumb
 845              		.thumb_func
 847              	B3M_SetPosition:
 848              	.LFB132:
 241:Src/B3M.c     **** 
 242:Src/B3M.c     **** uint8_t B3M_SetPosition(UART_HandleTypeDef huart, uint8_t SERVO_ID, int16_t POSITION, uint16_t TIME
 243:Src/B3M.c     **** {
 849              		.loc 1 243 0
 850              		.cfi_startproc
 851              		@ args = 76, pretend = 16, frame = 16
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853              	.LVL97:
 854 0000 84B0     		sub	sp, sp, #16
 855              	.LCFI48:
 856              		.cfi_def_cfa_offset 16
 857 0002 00B5     		push	{lr}
 858              	.LCFI49:
 859              		.cfi_def_cfa_offset 20
 860              		.cfi_offset 14, -20
 861 0004 85B0     		sub	sp, sp, #20
 862              	.LCFI50:
 863              		.cfi_def_cfa_offset 40
 864 0006 0DF1180E 		add	lr, sp, #24
 865 000a 8EE80F00 		stmia	lr, {r0, r1, r2, r3}
 866 000e BDF95C10 		ldrsh	r1, [sp, #92]
 867 0012 BDF86030 		ldrh	r3, [sp, #96]
 868              	.LVL98:
 244:Src/B3M.c     ****     /* Local Variable */
 245:Src/B3M.c     ****     uint8_t TxData[9];
 246:Src/B3M.c     ****     uint8_t CheckSum = 0;
 247:Src/B3M.c     **** 
 248:Src/B3M.c     ****     if(POSITION<0)
 249:Src/B3M.c     ****         POSITION = 65535+POSITION+1;
 250:Src/B3M.c     **** 
 251:Src/B3M.c     ****     TxData[0] = SIZE_9b;                                // SIZE
 869              		.loc 1 251 0
 870 0016 0922     		movs	r2, #9
 871 0018 8DF80420 		strb	r2, [sp, #4]
 252:Src/B3M.c     ****     TxData[1] = COMMAND_WRITE;                          // CMD
 872              		.loc 1 252 0
 873 001c 0422     		movs	r2, #4
 874 001e 8DF80520 		strb	r2, [sp, #5]
 253:Src/B3M.c     ****     TxData[2] = OPTION_DEFAULT;                         // OPTION
 875              		.loc 1 253 0
 876 0022 0022     		movs	r2, #0
 877 0024 8DF80620 		strb	r2, [sp, #6]
 254:Src/B3M.c     ****     TxData[3] = SERVO_ID;                               // ID
 878              		.loc 1 254 0
 879 0028 9DF85800 		ldrb	r0, [sp, #88]	@ zero_extendqisi2
 880 002c 8DF80700 		strb	r0, [sp, #7]
 255:Src/B3M.c     ****     TxData[4] = (uint8_t)0x00FF & POSITION;             // POSITION_LSB
 881              		.loc 1 255 0
 882 0030 8DF80810 		strb	r1, [sp, #8]
 256:Src/B3M.c     ****     TxData[5] = (uint8_t)0x00FF & (POSITION >> 8);      // POSITION_MSB
 883              		.loc 1 256 0
 884 0034 C1F30721 		ubfx	r1, r1, #8, #8
 885              	.LVL99:
ARM GAS  /tmp/ccugrpsh.s 			page 21


 886 0038 8DF80910 		strb	r1, [sp, #9]
 257:Src/B3M.c     ****     TxData[6] = (uint8_t)0x00FF & TIME;        			// TIME_LSB
 887              		.loc 1 257 0
 888 003c 8DF80A30 		strb	r3, [sp, #10]
 258:Src/B3M.c     ****     TxData[7] = (uint8_t)0x00FF & (TIME >> 8);          // TIME_MSB
 889              		.loc 1 258 0
 890 0040 1B0A     		lsrs	r3, r3, #8
 891 0042 8DF80B30 		strb	r3, [sp, #11]
 892              	.LVL100:
 893              	.LBB10:
 259:Src/B3M.c     **** 
 260:Src/B3M.c     ****     /* CheckSum Calculation */
 261:Src/B3M.c     ****     for(uint8_t i=0; i<=7; i++){
 894              		.loc 1 261 0
 895 0046 1346     		mov	r3, r2
 896 0048 07E0     		b	.L34
 897              	.LVL101:
 898              	.L35:
 262:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 899              		.loc 1 262 0 discriminator 3
 900 004a 04A9     		add	r1, sp, #16
 901 004c 1944     		add	r1, r1, r3
 902 004e 11F80C1C 		ldrb	r1, [r1, #-12]	@ zero_extendqisi2
 903 0052 0A44     		add	r2, r2, r1
 904              	.LVL102:
 905 0054 D2B2     		uxtb	r2, r2
 906              	.LVL103:
 261:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 907              		.loc 1 261 0 discriminator 3
 908 0056 0133     		adds	r3, r3, #1
 909              	.LVL104:
 910 0058 DBB2     		uxtb	r3, r3
 911              	.LVL105:
 912              	.L34:
 261:Src/B3M.c     ****         CheckSum = CheckSum + TxData[i];                // XOR from ID to Data
 913              		.loc 1 261 0 is_stmt 0 discriminator 1
 914 005a 072B     		cmp	r3, #7
 915 005c F5D9     		bls	.L35
 916              	.LBE10:
 263:Src/B3M.c     ****     }
 264:Src/B3M.c     ****     CheckSum = (uint8_t)0x00FF & CheckSum;              // CHECKSUM
 265:Src/B3M.c     **** 
 266:Src/B3M.c     ****     TxData[8] = CheckSum;
 917              		.loc 1 266 0 is_stmt 1
 918 005e 8DF80C20 		strb	r2, [sp, #12]
 267:Src/B3M.c     **** 
 268:Src/B3M.c     ****     HAL_UART_Transmit(&huart, (uint8_t*)TxData, 9, HAL_MAX_DELAY);
 919              		.loc 1 268 0
 920 0062 4FF0FF33 		mov	r3, #-1
 921              	.LVL106:
 922 0066 0922     		movs	r2, #9
 923              	.LVL107:
 924 0068 01A9     		add	r1, sp, #4
 925 006a 06A8     		add	r0, sp, #24
 926 006c FFF7FEFF 		bl	HAL_UART_Transmit
 927              	.LVL108:
 269:Src/B3M.c     ****     HAL_Delay(1);
ARM GAS  /tmp/ccugrpsh.s 			page 22


 928              		.loc 1 269 0
 929 0070 0120     		movs	r0, #1
 930 0072 FFF7FEFF 		bl	HAL_Delay
 931              	.LVL109:
 270:Src/B3M.c     ****     return 0;
 271:Src/B3M.c     **** }
 932              		.loc 1 271 0
 933 0076 0020     		movs	r0, #0
 934 0078 05B0     		add	sp, sp, #20
 935              	.LCFI51:
 936              		.cfi_def_cfa_offset 20
 937              		@ sp needed
 938 007a 5DF804EB 		ldr	lr, [sp], #4
 939              	.LCFI52:
 940              		.cfi_restore 14
 941              		.cfi_def_cfa_offset 16
 942 007e 04B0     		add	sp, sp, #16
 943              	.LCFI53:
 944              		.cfi_def_cfa_offset 0
 945 0080 7047     		bx	lr
 946              		.cfi_endproc
 947              	.LFE132:
 949 0082 00BF     		.section	.text.B3M_RunNormal,"ax",%progbits
 950              		.align	2
 951              		.global	B3M_RunNormal
 952              		.thumb
 953              		.thumb_func
 955              	B3M_RunNormal:
 956              	.LFB133:
 272:Src/B3M.c     **** 
 273:Src/B3M.c     **** /** Servo Operation Modes
 274:Src/B3M.c     **** */
 275:Src/B3M.c     **** uint8_t B3M_RunNormal(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 276:Src/B3M.c     **** {
 957              		.loc 1 276 0
 958              		.cfi_startproc
 959              		@ args = 68, pretend = 16, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              	.LVL110:
 962 0000 84B0     		sub	sp, sp, #16
 963              	.LCFI54:
 964              		.cfi_def_cfa_offset 16
 965 0002 70B5     		push	{r4, r5, r6, lr}
 966              	.LCFI55:
 967              		.cfi_def_cfa_offset 32
 968              		.cfi_offset 4, -32
 969              		.cfi_offset 5, -28
 970              		.cfi_offset 6, -24
 971              		.cfi_offset 14, -20
 972 0004 90B0     		sub	sp, sp, #64
 973              	.LCFI56:
 974              		.cfi_def_cfa_offset 96
 975 0006 14AC     		add	r4, sp, #80
 976 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 277:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, OPERATION_MODE_RunNormal, SERVO_TORQUE_ON);
 977              		.loc 1 277 0
 978 000c 2823     		movs	r3, #40
ARM GAS  /tmp/ccugrpsh.s 			page 23


 979 000e 0E93     		str	r3, [sp, #56]
 980 0010 0026     		movs	r6, #0
 981 0012 0D96     		str	r6, [sp, #52]
 982 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 983 0018 0C93     		str	r3, [sp, #48]
 984 001a 6C46     		mov	r4, sp
 985 001c 18AD     		add	r5, sp, #96
 986 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 987 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 988 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 989 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 990 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 991 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 992 002e 14AB     		add	r3, sp, #80
 993 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 994 0032 FFF7FEFF 		bl	B3M_Write_1B
 995              	.LVL111:
 278:Src/B3M.c     **** 	return 0;
 279:Src/B3M.c     **** }
 996              		.loc 1 279 0
 997 0036 3046     		mov	r0, r6
 998 0038 10B0     		add	sp, sp, #64
 999              	.LCFI57:
 1000              		.cfi_def_cfa_offset 32
 1001              		@ sp needed
 1002 003a BDE87040 		pop	{r4, r5, r6, lr}
 1003              	.LCFI58:
 1004              		.cfi_restore 14
 1005              		.cfi_restore 6
 1006              		.cfi_restore 5
 1007              		.cfi_restore 4
 1008              		.cfi_def_cfa_offset 16
 1009 003e 04B0     		add	sp, sp, #16
 1010              	.LCFI59:
 1011              		.cfi_def_cfa_offset 0
 1012 0040 7047     		bx	lr
 1013              		.cfi_endproc
 1014              	.LFE133:
 1016 0042 00BF     		.section	.text.B3M_RunFree,"ax",%progbits
 1017              		.align	2
 1018              		.global	B3M_RunFree
 1019              		.thumb
 1020              		.thumb_func
 1022              	B3M_RunFree:
 1023              	.LFB134:
 280:Src/B3M.c     **** 
 281:Src/B3M.c     **** uint8_t B3M_RunFree(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 282:Src/B3M.c     **** {
 1024              		.loc 1 282 0
 1025              		.cfi_startproc
 1026              		@ args = 68, pretend = 16, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              	.LVL112:
 1029 0000 84B0     		sub	sp, sp, #16
 1030              	.LCFI60:
 1031              		.cfi_def_cfa_offset 16
 1032 0002 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccugrpsh.s 			page 24


 1033              	.LCFI61:
 1034              		.cfi_def_cfa_offset 28
 1035              		.cfi_offset 4, -28
 1036              		.cfi_offset 5, -24
 1037              		.cfi_offset 14, -20
 1038 0004 91B0     		sub	sp, sp, #68
 1039              	.LCFI62:
 1040              		.cfi_def_cfa_offset 96
 1041 0006 14AC     		add	r4, sp, #80
 1042 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 283:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, OPERATION_MODE_RunFree, SERVO_TORQUE_ON);
 1043              		.loc 1 283 0
 1044 000c 2823     		movs	r3, #40
 1045 000e 0E93     		str	r3, [sp, #56]
 1046 0010 0223     		movs	r3, #2
 1047 0012 0D93     		str	r3, [sp, #52]
 1048 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1049 0018 0C93     		str	r3, [sp, #48]
 1050 001a 6C46     		mov	r4, sp
 1051 001c 18AD     		add	r5, sp, #96
 1052 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1053 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1054 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1055 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1056 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1057 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1058 002e 14AB     		add	r3, sp, #80
 1059 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1060 0032 FFF7FEFF 		bl	B3M_Write_1B
 1061              	.LVL113:
 284:Src/B3M.c     **** 	return 0;
 285:Src/B3M.c     **** }
 1062              		.loc 1 285 0
 1063 0036 0020     		movs	r0, #0
 1064 0038 11B0     		add	sp, sp, #68
 1065              	.LCFI63:
 1066              		.cfi_def_cfa_offset 28
 1067              		@ sp needed
 1068 003a BDE83040 		pop	{r4, r5, lr}
 1069              	.LCFI64:
 1070              		.cfi_restore 14
 1071              		.cfi_restore 5
 1072              		.cfi_restore 4
 1073              		.cfi_def_cfa_offset 16
 1074 003e 04B0     		add	sp, sp, #16
 1075              	.LCFI65:
 1076              		.cfi_def_cfa_offset 0
 1077 0040 7047     		bx	lr
 1078              		.cfi_endproc
 1079              	.LFE134:
 1081 0042 00BF     		.section	.text.B3M_RunHold,"ax",%progbits
 1082              		.align	2
 1083              		.global	B3M_RunHold
 1084              		.thumb
 1085              		.thumb_func
 1087              	B3M_RunHold:
 1088              	.LFB135:
ARM GAS  /tmp/ccugrpsh.s 			page 25


 286:Src/B3M.c     **** 
 287:Src/B3M.c     **** uint8_t B3M_RunHold(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 288:Src/B3M.c     **** {
 1089              		.loc 1 288 0
 1090              		.cfi_startproc
 1091              		@ args = 68, pretend = 16, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093              	.LVL114:
 1094 0000 84B0     		sub	sp, sp, #16
 1095              	.LCFI66:
 1096              		.cfi_def_cfa_offset 16
 1097 0002 30B5     		push	{r4, r5, lr}
 1098              	.LCFI67:
 1099              		.cfi_def_cfa_offset 28
 1100              		.cfi_offset 4, -28
 1101              		.cfi_offset 5, -24
 1102              		.cfi_offset 14, -20
 1103 0004 91B0     		sub	sp, sp, #68
 1104              	.LCFI68:
 1105              		.cfi_def_cfa_offset 96
 1106 0006 14AC     		add	r4, sp, #80
 1107 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 289:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, OPERATION_MODE_RunFree, SERVO_TORQUE_ON);
 1108              		.loc 1 289 0
 1109 000c 2823     		movs	r3, #40
 1110 000e 0E93     		str	r3, [sp, #56]
 1111 0010 0223     		movs	r3, #2
 1112 0012 0D93     		str	r3, [sp, #52]
 1113 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1114 0018 0C93     		str	r3, [sp, #48]
 1115 001a 6C46     		mov	r4, sp
 1116 001c 18AD     		add	r5, sp, #96
 1117 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1118 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1119 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1120 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1121 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1122 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1123 002e 14AB     		add	r3, sp, #80
 1124 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1125 0032 FFF7FEFF 		bl	B3M_Write_1B
 1126              	.LVL115:
 290:Src/B3M.c     **** 	return 0;
 291:Src/B3M.c     **** }
 1127              		.loc 1 291 0
 1128 0036 0020     		movs	r0, #0
 1129 0038 11B0     		add	sp, sp, #68
 1130              	.LCFI69:
 1131              		.cfi_def_cfa_offset 28
 1132              		@ sp needed
 1133 003a BDE83040 		pop	{r4, r5, lr}
 1134              	.LCFI70:
 1135              		.cfi_restore 14
 1136              		.cfi_restore 5
 1137              		.cfi_restore 4
 1138              		.cfi_def_cfa_offset 16
 1139 003e 04B0     		add	sp, sp, #16
ARM GAS  /tmp/ccugrpsh.s 			page 26


 1140              	.LCFI71:
 1141              		.cfi_def_cfa_offset 0
 1142 0040 7047     		bx	lr
 1143              		.cfi_endproc
 1144              	.LFE135:
 1146 0042 00BF     		.section	.text.B3M_ControlPosition,"ax",%progbits
 1147              		.align	2
 1148              		.global	B3M_ControlPosition
 1149              		.thumb
 1150              		.thumb_func
 1152              	B3M_ControlPosition:
 1153              	.LFB136:
 292:Src/B3M.c     **** 
 293:Src/B3M.c     **** uint8_t B3M_ControlPosition(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 294:Src/B3M.c     **** {
 1154              		.loc 1 294 0
 1155              		.cfi_startproc
 1156              		@ args = 68, pretend = 16, frame = 0
 1157              		@ frame_needed = 0, uses_anonymous_args = 0
 1158              	.LVL116:
 1159 0000 84B0     		sub	sp, sp, #16
 1160              	.LCFI72:
 1161              		.cfi_def_cfa_offset 16
 1162 0002 70B5     		push	{r4, r5, r6, lr}
 1163              	.LCFI73:
 1164              		.cfi_def_cfa_offset 32
 1165              		.cfi_offset 4, -32
 1166              		.cfi_offset 5, -28
 1167              		.cfi_offset 6, -24
 1168              		.cfi_offset 14, -20
 1169 0004 90B0     		sub	sp, sp, #64
 1170              	.LCFI74:
 1171              		.cfi_def_cfa_offset 96
 1172 0006 14AC     		add	r4, sp, #80
 1173 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 295:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, OPERATION_MODE_ControlPosition, SERVO_TORQUE_ON);
 1174              		.loc 1 295 0
 1175 000c 2823     		movs	r3, #40
 1176 000e 0E93     		str	r3, [sp, #56]
 1177 0010 0026     		movs	r6, #0
 1178 0012 0D96     		str	r6, [sp, #52]
 1179 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1180 0018 0C93     		str	r3, [sp, #48]
 1181 001a 6C46     		mov	r4, sp
 1182 001c 18AD     		add	r5, sp, #96
 1183 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1184 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1185 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1186 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1187 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1188 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1189 002e 14AB     		add	r3, sp, #80
 1190 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1191 0032 FFF7FEFF 		bl	B3M_Write_1B
 1192              	.LVL117:
 296:Src/B3M.c     **** 	return 0;
 297:Src/B3M.c     **** }
ARM GAS  /tmp/ccugrpsh.s 			page 27


 1193              		.loc 1 297 0
 1194 0036 3046     		mov	r0, r6
 1195 0038 10B0     		add	sp, sp, #64
 1196              	.LCFI75:
 1197              		.cfi_def_cfa_offset 32
 1198              		@ sp needed
 1199 003a BDE87040 		pop	{r4, r5, r6, lr}
 1200              	.LCFI76:
 1201              		.cfi_restore 14
 1202              		.cfi_restore 6
 1203              		.cfi_restore 5
 1204              		.cfi_restore 4
 1205              		.cfi_def_cfa_offset 16
 1206 003e 04B0     		add	sp, sp, #16
 1207              	.LCFI77:
 1208              		.cfi_def_cfa_offset 0
 1209 0040 7047     		bx	lr
 1210              		.cfi_endproc
 1211              	.LFE136:
 1213 0042 00BF     		.section	.text.B3M_ControlVelocity,"ax",%progbits
 1214              		.align	2
 1215              		.global	B3M_ControlVelocity
 1216              		.thumb
 1217              		.thumb_func
 1219              	B3M_ControlVelocity:
 1220              	.LFB137:
 298:Src/B3M.c     **** 
 299:Src/B3M.c     **** /** Servo Control
 300:Src/B3M.c     **** */
 301:Src/B3M.c     **** uint8_t B3M_ControlVelocity(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 302:Src/B3M.c     **** {
 1221              		.loc 1 302 0
 1222              		.cfi_startproc
 1223              		@ args = 68, pretend = 16, frame = 0
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225              	.LVL118:
 1226 0000 84B0     		sub	sp, sp, #16
 1227              	.LCFI78:
 1228              		.cfi_def_cfa_offset 16
 1229 0002 30B5     		push	{r4, r5, lr}
 1230              	.LCFI79:
 1231              		.cfi_def_cfa_offset 28
 1232              		.cfi_offset 4, -28
 1233              		.cfi_offset 5, -24
 1234              		.cfi_offset 14, -20
 1235 0004 91B0     		sub	sp, sp, #68
 1236              	.LCFI80:
 1237              		.cfi_def_cfa_offset 96
 1238 0006 14AC     		add	r4, sp, #80
 1239 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 303:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, OPERATION_MODE_ControlVelocity, SERVO_TORQUE_ON);
 1240              		.loc 1 303 0
 1241 000c 2823     		movs	r3, #40
 1242 000e 0E93     		str	r3, [sp, #56]
 1243 0010 0423     		movs	r3, #4
 1244 0012 0D93     		str	r3, [sp, #52]
 1245 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
ARM GAS  /tmp/ccugrpsh.s 			page 28


 1246 0018 0C93     		str	r3, [sp, #48]
 1247 001a 6C46     		mov	r4, sp
 1248 001c 18AD     		add	r5, sp, #96
 1249 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1250 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1251 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1252 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1253 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1254 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1255 002e 14AB     		add	r3, sp, #80
 1256 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1257 0032 FFF7FEFF 		bl	B3M_Write_1B
 1258              	.LVL119:
 304:Src/B3M.c     **** 	return 0;
 305:Src/B3M.c     **** }
 1259              		.loc 1 305 0
 1260 0036 0020     		movs	r0, #0
 1261 0038 11B0     		add	sp, sp, #68
 1262              	.LCFI81:
 1263              		.cfi_def_cfa_offset 28
 1264              		@ sp needed
 1265 003a BDE83040 		pop	{r4, r5, lr}
 1266              	.LCFI82:
 1267              		.cfi_restore 14
 1268              		.cfi_restore 5
 1269              		.cfi_restore 4
 1270              		.cfi_def_cfa_offset 16
 1271 003e 04B0     		add	sp, sp, #16
 1272              	.LCFI83:
 1273              		.cfi_def_cfa_offset 0
 1274 0040 7047     		bx	lr
 1275              		.cfi_endproc
 1276              	.LFE137:
 1278 0042 00BF     		.section	.text.B3M_ControlTorque,"ax",%progbits
 1279              		.align	2
 1280              		.global	B3M_ControlTorque
 1281              		.thumb
 1282              		.thumb_func
 1284              	B3M_ControlTorque:
 1285              	.LFB138:
 306:Src/B3M.c     **** 
 307:Src/B3M.c     **** uint8_t B3M_ControlTorque(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 308:Src/B3M.c     **** {
 1286              		.loc 1 308 0
 1287              		.cfi_startproc
 1288              		@ args = 68, pretend = 16, frame = 0
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290              	.LVL120:
 1291 0000 84B0     		sub	sp, sp, #16
 1292              	.LCFI84:
 1293              		.cfi_def_cfa_offset 16
 1294 0002 30B5     		push	{r4, r5, lr}
 1295              	.LCFI85:
 1296              		.cfi_def_cfa_offset 28
 1297              		.cfi_offset 4, -28
 1298              		.cfi_offset 5, -24
 1299              		.cfi_offset 14, -20
ARM GAS  /tmp/ccugrpsh.s 			page 29


 1300 0004 91B0     		sub	sp, sp, #68
 1301              	.LCFI86:
 1302              		.cfi_def_cfa_offset 96
 1303 0006 14AC     		add	r4, sp, #80
 1304 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 309:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, OPERATION_MODE_ControlTorque, SERVO_TORQUE_ON);
 1305              		.loc 1 309 0
 1306 000c 2823     		movs	r3, #40
 1307 000e 0E93     		str	r3, [sp, #56]
 1308 0010 0823     		movs	r3, #8
 1309 0012 0D93     		str	r3, [sp, #52]
 1310 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1311 0018 0C93     		str	r3, [sp, #48]
 1312 001a 6C46     		mov	r4, sp
 1313 001c 18AD     		add	r5, sp, #96
 1314 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1315 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1316 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1317 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1318 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1319 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1320 002e 14AB     		add	r3, sp, #80
 1321 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1322 0032 FFF7FEFF 		bl	B3M_Write_1B
 1323              	.LVL121:
 310:Src/B3M.c     **** 	return 0;
 311:Src/B3M.c     **** }
 1324              		.loc 1 311 0
 1325 0036 0020     		movs	r0, #0
 1326 0038 11B0     		add	sp, sp, #68
 1327              	.LCFI87:
 1328              		.cfi_def_cfa_offset 28
 1329              		@ sp needed
 1330 003a BDE83040 		pop	{r4, r5, lr}
 1331              	.LCFI88:
 1332              		.cfi_restore 14
 1333              		.cfi_restore 5
 1334              		.cfi_restore 4
 1335              		.cfi_def_cfa_offset 16
 1336 003e 04B0     		add	sp, sp, #16
 1337              	.LCFI89:
 1338              		.cfi_def_cfa_offset 0
 1339 0040 7047     		bx	lr
 1340              		.cfi_endproc
 1341              	.LFE138:
 1343 0042 00BF     		.section	.text.B3M_ControlFeedForward,"ax",%progbits
 1344              		.align	2
 1345              		.global	B3M_ControlFeedForward
 1346              		.thumb
 1347              		.thumb_func
 1349              	B3M_ControlFeedForward:
 1350              	.LFB139:
 312:Src/B3M.c     **** 
 313:Src/B3M.c     **** uint8_t B3M_ControlFeedForward(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 314:Src/B3M.c     **** {
 1351              		.loc 1 314 0
 1352              		.cfi_startproc
ARM GAS  /tmp/ccugrpsh.s 			page 30


 1353              		@ args = 68, pretend = 16, frame = 0
 1354              		@ frame_needed = 0, uses_anonymous_args = 0
 1355              	.LVL122:
 1356 0000 84B0     		sub	sp, sp, #16
 1357              	.LCFI90:
 1358              		.cfi_def_cfa_offset 16
 1359 0002 30B5     		push	{r4, r5, lr}
 1360              	.LCFI91:
 1361              		.cfi_def_cfa_offset 28
 1362              		.cfi_offset 4, -28
 1363              		.cfi_offset 5, -24
 1364              		.cfi_offset 14, -20
 1365 0004 91B0     		sub	sp, sp, #68
 1366              	.LCFI92:
 1367              		.cfi_def_cfa_offset 96
 1368 0006 14AC     		add	r4, sp, #80
 1369 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 315:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, OPERATION_MODE_ControlFForward, SERVO_TORQUE_ON);
 1370              		.loc 1 315 0
 1371 000c 2823     		movs	r3, #40
 1372 000e 0E93     		str	r3, [sp, #56]
 1373 0010 0C23     		movs	r3, #12
 1374 0012 0D93     		str	r3, [sp, #52]
 1375 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1376 0018 0C93     		str	r3, [sp, #48]
 1377 001a 6C46     		mov	r4, sp
 1378 001c 18AD     		add	r5, sp, #96
 1379 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1380 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1381 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1382 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1383 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1384 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1385 002e 14AB     		add	r3, sp, #80
 1386 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1387 0032 FFF7FEFF 		bl	B3M_Write_1B
 1388              	.LVL123:
 316:Src/B3M.c     **** 	return 0;
 317:Src/B3M.c     **** }
 1389              		.loc 1 317 0
 1390 0036 0020     		movs	r0, #0
 1391 0038 11B0     		add	sp, sp, #68
 1392              	.LCFI93:
 1393              		.cfi_def_cfa_offset 28
 1394              		@ sp needed
 1395 003a BDE83040 		pop	{r4, r5, lr}
 1396              	.LCFI94:
 1397              		.cfi_restore 14
 1398              		.cfi_restore 5
 1399              		.cfi_restore 4
 1400              		.cfi_def_cfa_offset 16
 1401 003e 04B0     		add	sp, sp, #16
 1402              	.LCFI95:
 1403              		.cfi_def_cfa_offset 0
 1404 0040 7047     		bx	lr
 1405              		.cfi_endproc
 1406              	.LFE139:
ARM GAS  /tmp/ccugrpsh.s 			page 31


 1408 0042 00BF     		.section	.text.B3M_ServoNormal,"ax",%progbits
 1409              		.align	2
 1410              		.global	B3M_ServoNormal
 1411              		.thumb
 1412              		.thumb_func
 1414              	B3M_ServoNormal:
 1415              	.LFB140:
 318:Src/B3M.c     **** 
 319:Src/B3M.c     **** /** Servo Options
 320:Src/B3M.c     **** */
 321:Src/B3M.c     **** uint8_t B3M_ServoNormal(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 322:Src/B3M.c     **** {
 1416              		.loc 1 322 0
 1417              		.cfi_startproc
 1418              		@ args = 68, pretend = 16, frame = 0
 1419              		@ frame_needed = 0, uses_anonymous_args = 0
 1420              	.LVL124:
 1421 0000 84B0     		sub	sp, sp, #16
 1422              	.LCFI96:
 1423              		.cfi_def_cfa_offset 16
 1424 0002 70B5     		push	{r4, r5, r6, lr}
 1425              	.LCFI97:
 1426              		.cfi_def_cfa_offset 32
 1427              		.cfi_offset 4, -32
 1428              		.cfi_offset 5, -28
 1429              		.cfi_offset 6, -24
 1430              		.cfi_offset 14, -20
 1431 0004 90B0     		sub	sp, sp, #64
 1432              	.LCFI98:
 1433              		.cfi_def_cfa_offset 96
 1434 0006 14AC     		add	r4, sp, #80
 1435 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 323:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, OPERATION_MODE_ServoNormal, SERVO_TORQUE_ON);
 1436              		.loc 1 323 0
 1437 000c 2823     		movs	r3, #40
 1438 000e 0E93     		str	r3, [sp, #56]
 1439 0010 0026     		movs	r6, #0
 1440 0012 0D96     		str	r6, [sp, #52]
 1441 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1442 0018 0C93     		str	r3, [sp, #48]
 1443 001a 6C46     		mov	r4, sp
 1444 001c 18AD     		add	r5, sp, #96
 1445 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1446 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1447 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1448 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1449 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1450 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1451 002e 14AB     		add	r3, sp, #80
 1452 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1453 0032 FFF7FEFF 		bl	B3M_Write_1B
 1454              	.LVL125:
 324:Src/B3M.c     **** 	return 0;
 325:Src/B3M.c     **** }
 1455              		.loc 1 325 0
 1456 0036 3046     		mov	r0, r6
 1457 0038 10B0     		add	sp, sp, #64
ARM GAS  /tmp/ccugrpsh.s 			page 32


 1458              	.LCFI99:
 1459              		.cfi_def_cfa_offset 32
 1460              		@ sp needed
 1461 003a BDE87040 		pop	{r4, r5, r6, lr}
 1462              	.LCFI100:
 1463              		.cfi_restore 14
 1464              		.cfi_restore 6
 1465              		.cfi_restore 5
 1466              		.cfi_restore 4
 1467              		.cfi_def_cfa_offset 16
 1468 003e 04B0     		add	sp, sp, #16
 1469              	.LCFI101:
 1470              		.cfi_def_cfa_offset 0
 1471 0040 7047     		bx	lr
 1472              		.cfi_endproc
 1473              	.LFE140:
 1475 0042 00BF     		.section	.text.B3M_ServoClone,"ax",%progbits
 1476              		.align	2
 1477              		.global	B3M_ServoClone
 1478              		.thumb
 1479              		.thumb_func
 1481              	B3M_ServoClone:
 1482              	.LFB141:
 326:Src/B3M.c     **** 
 327:Src/B3M.c     **** void B3M_ServoClone(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 328:Src/B3M.c     **** {
 1483              		.loc 1 328 0
 1484              		.cfi_startproc
 1485              		@ args = 68, pretend = 16, frame = 0
 1486              		@ frame_needed = 0, uses_anonymous_args = 0
 1487              	.LVL126:
 1488 0000 84B0     		sub	sp, sp, #16
 1489              	.LCFI102:
 1490              		.cfi_def_cfa_offset 16
 1491 0002 30B5     		push	{r4, r5, lr}
 1492              	.LCFI103:
 1493              		.cfi_def_cfa_offset 28
 1494              		.cfi_offset 4, -28
 1495              		.cfi_offset 5, -24
 1496              		.cfi_offset 14, -20
 1497 0004 91B0     		sub	sp, sp, #68
 1498              	.LCFI104:
 1499              		.cfi_def_cfa_offset 96
 1500 0006 14AC     		add	r4, sp, #80
 1501 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 329:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, OPERATION_MODE_ServoClone, SERVO_TORQUE_ON);
 1502              		.loc 1 329 0
 1503 000c 2823     		movs	r3, #40
 1504 000e 0E93     		str	r3, [sp, #56]
 1505 0010 4023     		movs	r3, #64
 1506 0012 0D93     		str	r3, [sp, #52]
 1507 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1508 0018 0C93     		str	r3, [sp, #48]
 1509 001a 6C46     		mov	r4, sp
 1510 001c 18AD     		add	r5, sp, #96
 1511 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1512 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 33


 1513 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1514 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1515 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1516 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1517 002e 14AB     		add	r3, sp, #80
 1518 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1519 0032 FFF7FEFF 		bl	B3M_Write_1B
 1520              	.LVL127:
 330:Src/B3M.c     **** }
 1521              		.loc 1 330 0
 1522 0036 11B0     		add	sp, sp, #68
 1523              	.LCFI105:
 1524              		.cfi_def_cfa_offset 28
 1525              		@ sp needed
 1526 0038 BDE83040 		pop	{r4, r5, lr}
 1527              	.LCFI106:
 1528              		.cfi_restore 14
 1529              		.cfi_restore 5
 1530              		.cfi_restore 4
 1531              		.cfi_def_cfa_offset 16
 1532 003c 04B0     		add	sp, sp, #16
 1533              	.LCFI107:
 1534              		.cfi_def_cfa_offset 0
 1535 003e 7047     		bx	lr
 1536              		.cfi_endproc
 1537              	.LFE141:
 1539              		.section	.text.B3M_ServoReverse,"ax",%progbits
 1540              		.align	2
 1541              		.global	B3M_ServoReverse
 1542              		.thumb
 1543              		.thumb_func
 1545              	B3M_ServoReverse:
 1546              	.LFB142:
 331:Src/B3M.c     **** 
 332:Src/B3M.c     **** uint8_t B3M_ServoReverse(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 333:Src/B3M.c     **** {
 1547              		.loc 1 333 0
 1548              		.cfi_startproc
 1549              		@ args = 68, pretend = 16, frame = 0
 1550              		@ frame_needed = 0, uses_anonymous_args = 0
 1551              	.LVL128:
 1552 0000 84B0     		sub	sp, sp, #16
 1553              	.LCFI108:
 1554              		.cfi_def_cfa_offset 16
 1555 0002 30B5     		push	{r4, r5, lr}
 1556              	.LCFI109:
 1557              		.cfi_def_cfa_offset 28
 1558              		.cfi_offset 4, -28
 1559              		.cfi_offset 5, -24
 1560              		.cfi_offset 14, -20
 1561 0004 91B0     		sub	sp, sp, #68
 1562              	.LCFI110:
 1563              		.cfi_def_cfa_offset 96
 1564 0006 14AC     		add	r4, sp, #80
 1565 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 334:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, OPERATION_MODE_ServoReverse, SERVO_TORQUE_ON);
 1566              		.loc 1 334 0
ARM GAS  /tmp/ccugrpsh.s 			page 34


 1567 000c 2823     		movs	r3, #40
 1568 000e 0E93     		str	r3, [sp, #56]
 1569 0010 8023     		movs	r3, #128
 1570 0012 0D93     		str	r3, [sp, #52]
 1571 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1572 0018 0C93     		str	r3, [sp, #48]
 1573 001a 6C46     		mov	r4, sp
 1574 001c 18AD     		add	r5, sp, #96
 1575 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1576 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1577 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1578 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1579 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1580 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1581 002e 14AB     		add	r3, sp, #80
 1582 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1583 0032 FFF7FEFF 		bl	B3M_Write_1B
 1584              	.LVL129:
 335:Src/B3M.c     **** 	return 0;
 336:Src/B3M.c     **** }
 1585              		.loc 1 336 0
 1586 0036 0020     		movs	r0, #0
 1587 0038 11B0     		add	sp, sp, #68
 1588              	.LCFI111:
 1589              		.cfi_def_cfa_offset 28
 1590              		@ sp needed
 1591 003a BDE83040 		pop	{r4, r5, lr}
 1592              	.LCFI112:
 1593              		.cfi_restore 14
 1594              		.cfi_restore 5
 1595              		.cfi_restore 4
 1596              		.cfi_def_cfa_offset 16
 1597 003e 04B0     		add	sp, sp, #16
 1598              	.LCFI113:
 1599              		.cfi_def_cfa_offset 0
 1600 0040 7047     		bx	lr
 1601              		.cfi_endproc
 1602              	.LFE142:
 1604 0042 00BF     		.section	.text.B3M_SystemID_Read,"ax",%progbits
 1605              		.align	2
 1606              		.global	B3M_SystemID_Read
 1607              		.thumb
 1608              		.thumb_func
 1610              	B3M_SystemID_Read:
 1611              	.LFB143:
 337:Src/B3M.c     **** 
 338:Src/B3M.c     **** /** System Commands
 339:Src/B3M.c     **** */
 340:Src/B3M.c     **** uint8_t B3M_SystemID_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 341:Src/B3M.c     **** {
 1612              		.loc 1 341 0
 1613              		.cfi_startproc
 1614              		@ args = 68, pretend = 16, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
 1616              	.LVL130:
 1617 0000 84B0     		sub	sp, sp, #16
 1618              	.LCFI114:
ARM GAS  /tmp/ccugrpsh.s 			page 35


 1619              		.cfi_def_cfa_offset 16
 1620 0002 70B5     		push	{r4, r5, r6, lr}
 1621              	.LCFI115:
 1622              		.cfi_def_cfa_offset 32
 1623              		.cfi_offset 4, -32
 1624              		.cfi_offset 5, -28
 1625              		.cfi_offset 6, -24
 1626              		.cfi_offset 14, -20
 1627 0004 90B0     		sub	sp, sp, #64
 1628              	.LCFI116:
 1629              		.cfi_def_cfa_offset 96
 1630 0006 14AC     		add	r4, sp, #80
 1631 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 342:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_ID, READ_LENGTH_1B);
 1632              		.loc 1 342 0
 1633 000c 0123     		movs	r3, #1
 1634 000e 0E93     		str	r3, [sp, #56]
 1635 0010 0026     		movs	r6, #0
 1636 0012 0D96     		str	r6, [sp, #52]
 1637 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1638 0018 0C93     		str	r3, [sp, #48]
 1639 001a 6C46     		mov	r4, sp
 1640 001c 18AD     		add	r5, sp, #96
 1641 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1642 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1643 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1644 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1645 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1646 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1647 002e 14AB     		add	r3, sp, #80
 1648 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1649 0032 FFF7FEFF 		bl	B3M_Read
 1650              	.LVL131:
 343:Src/B3M.c     **** 	return 0;
 344:Src/B3M.c     **** }
 1651              		.loc 1 344 0
 1652 0036 3046     		mov	r0, r6
 1653 0038 10B0     		add	sp, sp, #64
 1654              	.LCFI117:
 1655              		.cfi_def_cfa_offset 32
 1656              		@ sp needed
 1657 003a BDE87040 		pop	{r4, r5, r6, lr}
 1658              	.LCFI118:
 1659              		.cfi_restore 14
 1660              		.cfi_restore 6
 1661              		.cfi_restore 5
 1662              		.cfi_restore 4
 1663              		.cfi_def_cfa_offset 16
 1664 003e 04B0     		add	sp, sp, #16
 1665              	.LCFI119:
 1666              		.cfi_def_cfa_offset 0
 1667 0040 7047     		bx	lr
 1668              		.cfi_endproc
 1669              	.LFE143:
 1671 0042 00BF     		.section	.text.B3M_SystemID_Write,"ax",%progbits
 1672              		.align	2
 1673              		.global	B3M_SystemID_Write
ARM GAS  /tmp/ccugrpsh.s 			page 36


 1674              		.thumb
 1675              		.thumb_func
 1677              	B3M_SystemID_Write:
 1678              	.LFB144:
 345:Src/B3M.c     **** 
 346:Src/B3M.c     **** uint8_t B3M_SystemID_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_SERVO_ID)
 347:Src/B3M.c     **** {
 1679              		.loc 1 347 0
 1680              		.cfi_startproc
 1681              		@ args = 72, pretend = 16, frame = 0
 1682              		@ frame_needed = 0, uses_anonymous_args = 0
 1683              	.LVL132:
 1684 0000 84B0     		sub	sp, sp, #16
 1685              	.LCFI120:
 1686              		.cfi_def_cfa_offset 16
 1687 0002 70B5     		push	{r4, r5, r6, lr}
 1688              	.LCFI121:
 1689              		.cfi_def_cfa_offset 32
 1690              		.cfi_offset 4, -32
 1691              		.cfi_offset 5, -28
 1692              		.cfi_offset 6, -24
 1693              		.cfi_offset 14, -20
 1694 0004 90B0     		sub	sp, sp, #64
 1695              	.LCFI122:
 1696              		.cfi_def_cfa_offset 96
 1697 0006 14AC     		add	r4, sp, #80
 1698 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 348:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, NEW_SERVO_ID, SYSTEM_ID);
 1699              		.loc 1 348 0
 1700 000c 0026     		movs	r6, #0
 1701 000e 0E96     		str	r6, [sp, #56]
 1702 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 1703 0014 0D93     		str	r3, [sp, #52]
 1704 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1705 001a 0C93     		str	r3, [sp, #48]
 1706 001c 6C46     		mov	r4, sp
 1707 001e 18AD     		add	r5, sp, #96
 1708 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1709 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1710 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1711 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1712 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1713 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1714 0030 14AB     		add	r3, sp, #80
 1715 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1716 0034 FFF7FEFF 		bl	B3M_Write_1B
 1717              	.LVL133:
 349:Src/B3M.c     **** 	return 0;
 350:Src/B3M.c     **** }
 1718              		.loc 1 350 0
 1719 0038 3046     		mov	r0, r6
 1720 003a 10B0     		add	sp, sp, #64
 1721              	.LCFI123:
 1722              		.cfi_def_cfa_offset 32
 1723              		@ sp needed
 1724 003c BDE87040 		pop	{r4, r5, r6, lr}
 1725              	.LCFI124:
ARM GAS  /tmp/ccugrpsh.s 			page 37


 1726              		.cfi_restore 14
 1727              		.cfi_restore 6
 1728              		.cfi_restore 5
 1729              		.cfi_restore 4
 1730              		.cfi_def_cfa_offset 16
 1731 0040 04B0     		add	sp, sp, #16
 1732              	.LCFI125:
 1733              		.cfi_def_cfa_offset 0
 1734 0042 7047     		bx	lr
 1735              		.cfi_endproc
 1736              	.LFE144:
 1738              		.section	.text.B3M_SystemBaudrate_Read,"ax",%progbits
 1739              		.align	2
 1740              		.global	B3M_SystemBaudrate_Read
 1741              		.thumb
 1742              		.thumb_func
 1744              	B3M_SystemBaudrate_Read:
 1745              	.LFB145:
 351:Src/B3M.c     **** 
 352:Src/B3M.c     **** uint8_t B3M_SystemBaudrate_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 353:Src/B3M.c     **** {
 1746              		.loc 1 353 0
 1747              		.cfi_startproc
 1748              		@ args = 68, pretend = 16, frame = 0
 1749              		@ frame_needed = 0, uses_anonymous_args = 0
 1750              	.LVL134:
 1751 0000 84B0     		sub	sp, sp, #16
 1752              	.LCFI126:
 1753              		.cfi_def_cfa_offset 16
 1754 0002 30B5     		push	{r4, r5, lr}
 1755              	.LCFI127:
 1756              		.cfi_def_cfa_offset 28
 1757              		.cfi_offset 4, -28
 1758              		.cfi_offset 5, -24
 1759              		.cfi_offset 14, -20
 1760 0004 91B0     		sub	sp, sp, #68
 1761              	.LCFI128:
 1762              		.cfi_def_cfa_offset 96
 1763 0006 14AC     		add	r4, sp, #80
 1764 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 354:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_BAUDRATE, READ_LENGTH_4B);
 1765              		.loc 1 354 0
 1766 000c 0423     		movs	r3, #4
 1767 000e 0E93     		str	r3, [sp, #56]
 1768 0010 0123     		movs	r3, #1
 1769 0012 0D93     		str	r3, [sp, #52]
 1770 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1771 0018 0C93     		str	r3, [sp, #48]
 1772 001a 6C46     		mov	r4, sp
 1773 001c 18AD     		add	r5, sp, #96
 1774 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1775 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1776 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1777 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1778 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1779 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1780 002e 14AB     		add	r3, sp, #80
ARM GAS  /tmp/ccugrpsh.s 			page 38


 1781 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1782 0032 FFF7FEFF 		bl	B3M_Read
 1783              	.LVL135:
 355:Src/B3M.c     **** 	return 0;
 356:Src/B3M.c     **** }
 1784              		.loc 1 356 0
 1785 0036 0020     		movs	r0, #0
 1786 0038 11B0     		add	sp, sp, #68
 1787              	.LCFI129:
 1788              		.cfi_def_cfa_offset 28
 1789              		@ sp needed
 1790 003a BDE83040 		pop	{r4, r5, lr}
 1791              	.LCFI130:
 1792              		.cfi_restore 14
 1793              		.cfi_restore 5
 1794              		.cfi_restore 4
 1795              		.cfi_def_cfa_offset 16
 1796 003e 04B0     		add	sp, sp, #16
 1797              	.LCFI131:
 1798              		.cfi_def_cfa_offset 0
 1799 0040 7047     		bx	lr
 1800              		.cfi_endproc
 1801              	.LFE145:
 1803 0042 00BF     		.section	.text.B3M_SystemBaudrate_Write,"ax",%progbits
 1804              		.align	2
 1805              		.global	B3M_SystemBaudrate_Write
 1806              		.thumb
 1807              		.thumb_func
 1809              	B3M_SystemBaudrate_Write:
 1810              	.LFB146:
 357:Src/B3M.c     **** 
 358:Src/B3M.c     **** uint8_t B3M_SystemBaudrate_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint32_t NEW_BAUDRATE)
 359:Src/B3M.c     **** {
 1811              		.loc 1 359 0
 1812              		.cfi_startproc
 1813              		@ args = 72, pretend = 16, frame = 0
 1814              		@ frame_needed = 0, uses_anonymous_args = 0
 1815              	.LVL136:
 1816 0000 84B0     		sub	sp, sp, #16
 1817              	.LCFI132:
 1818              		.cfi_def_cfa_offset 16
 1819 0002 30B5     		push	{r4, r5, lr}
 1820              	.LCFI133:
 1821              		.cfi_def_cfa_offset 28
 1822              		.cfi_offset 4, -28
 1823              		.cfi_offset 5, -24
 1824              		.cfi_offset 14, -20
 1825 0004 91B0     		sub	sp, sp, #68
 1826              	.LCFI134:
 1827              		.cfi_def_cfa_offset 96
 1828 0006 14AC     		add	r4, sp, #80
 1829 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 360:Src/B3M.c     **** 	B3M_Write_4B(huart, SERVO_ID, NEW_BAUDRATE, SYSTEM_BAUDRATE);
 1830              		.loc 1 360 0
 1831 000c 0123     		movs	r3, #1
 1832 000e 0E93     		str	r3, [sp, #56]
 1833 0010 BDF89430 		ldrh	r3, [sp, #148]
ARM GAS  /tmp/ccugrpsh.s 			page 39


 1834 0014 0D93     		str	r3, [sp, #52]
 1835 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1836 001a 0C93     		str	r3, [sp, #48]
 1837 001c 6C46     		mov	r4, sp
 1838 001e 18AD     		add	r5, sp, #96
 1839 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1840 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1841 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1842 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1843 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1844 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1845 0030 14AB     		add	r3, sp, #80
 1846 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1847 0034 FFF7FEFF 		bl	B3M_Write_4B
 1848              	.LVL137:
 361:Src/B3M.c     **** 	return 0;
 362:Src/B3M.c     **** }
 1849              		.loc 1 362 0
 1850 0038 0020     		movs	r0, #0
 1851 003a 11B0     		add	sp, sp, #68
 1852              	.LCFI135:
 1853              		.cfi_def_cfa_offset 28
 1854              		@ sp needed
 1855 003c BDE83040 		pop	{r4, r5, lr}
 1856              	.LCFI136:
 1857              		.cfi_restore 14
 1858              		.cfi_restore 5
 1859              		.cfi_restore 4
 1860              		.cfi_def_cfa_offset 16
 1861 0040 04B0     		add	sp, sp, #16
 1862              	.LCFI137:
 1863              		.cfi_def_cfa_offset 0
 1864 0042 7047     		bx	lr
 1865              		.cfi_endproc
 1866              	.LFE146:
 1868              		.section	.text.B3M_PositionMin_Read,"ax",%progbits
 1869              		.align	2
 1870              		.global	B3M_PositionMin_Read
 1871              		.thumb
 1872              		.thumb_func
 1874              	B3M_PositionMin_Read:
 1875              	.LFB147:
 363:Src/B3M.c     **** 
 364:Src/B3M.c     **** uint8_t B3M_PositionMin_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 365:Src/B3M.c     **** {
 1876              		.loc 1 365 0
 1877              		.cfi_startproc
 1878              		@ args = 68, pretend = 16, frame = 0
 1879              		@ frame_needed = 0, uses_anonymous_args = 0
 1880              	.LVL138:
 1881 0000 84B0     		sub	sp, sp, #16
 1882              	.LCFI138:
 1883              		.cfi_def_cfa_offset 16
 1884 0002 30B5     		push	{r4, r5, lr}
 1885              	.LCFI139:
 1886              		.cfi_def_cfa_offset 28
 1887              		.cfi_offset 4, -28
ARM GAS  /tmp/ccugrpsh.s 			page 40


 1888              		.cfi_offset 5, -24
 1889              		.cfi_offset 14, -20
 1890 0004 91B0     		sub	sp, sp, #68
 1891              	.LCFI140:
 1892              		.cfi_def_cfa_offset 96
 1893 0006 14AC     		add	r4, sp, #80
 1894 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 366:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_POSITION_MIN, READ_LENGTH_2B);
 1895              		.loc 1 366 0
 1896 000c 0223     		movs	r3, #2
 1897 000e 0E93     		str	r3, [sp, #56]
 1898 0010 0523     		movs	r3, #5
 1899 0012 0D93     		str	r3, [sp, #52]
 1900 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1901 0018 0C93     		str	r3, [sp, #48]
 1902 001a 6C46     		mov	r4, sp
 1903 001c 18AD     		add	r5, sp, #96
 1904 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1905 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1906 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1907 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1908 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1909 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1910 002e 14AB     		add	r3, sp, #80
 1911 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1912 0032 FFF7FEFF 		bl	B3M_Read
 1913              	.LVL139:
 367:Src/B3M.c     **** 	return 0;
 368:Src/B3M.c     **** }
 1914              		.loc 1 368 0
 1915 0036 0020     		movs	r0, #0
 1916 0038 11B0     		add	sp, sp, #68
 1917              	.LCFI141:
 1918              		.cfi_def_cfa_offset 28
 1919              		@ sp needed
 1920 003a BDE83040 		pop	{r4, r5, lr}
 1921              	.LCFI142:
 1922              		.cfi_restore 14
 1923              		.cfi_restore 5
 1924              		.cfi_restore 4
 1925              		.cfi_def_cfa_offset 16
 1926 003e 04B0     		add	sp, sp, #16
 1927              	.LCFI143:
 1928              		.cfi_def_cfa_offset 0
 1929 0040 7047     		bx	lr
 1930              		.cfi_endproc
 1931              	.LFE147:
 1933 0042 00BF     		.section	.text.B3M_PositionMin_Write,"ax",%progbits
 1934              		.align	2
 1935              		.global	B3M_PositionMin_Write
 1936              		.thumb
 1937              		.thumb_func
 1939              	B3M_PositionMin_Write:
 1940              	.LFB148:
 369:Src/B3M.c     **** 
 370:Src/B3M.c     **** uint8_t B3M_PositionMin_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint16_t NEW_POSITION_MIN
 371:Src/B3M.c     **** {
ARM GAS  /tmp/ccugrpsh.s 			page 41


 1941              		.loc 1 371 0
 1942              		.cfi_startproc
 1943              		@ args = 72, pretend = 16, frame = 0
 1944              		@ frame_needed = 0, uses_anonymous_args = 0
 1945              	.LVL140:
 1946 0000 84B0     		sub	sp, sp, #16
 1947              	.LCFI144:
 1948              		.cfi_def_cfa_offset 16
 1949 0002 30B5     		push	{r4, r5, lr}
 1950              	.LCFI145:
 1951              		.cfi_def_cfa_offset 28
 1952              		.cfi_offset 4, -28
 1953              		.cfi_offset 5, -24
 1954              		.cfi_offset 14, -20
 1955 0004 91B0     		sub	sp, sp, #68
 1956              	.LCFI146:
 1957              		.cfi_def_cfa_offset 96
 1958 0006 14AC     		add	r4, sp, #80
 1959 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 372:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_POSITION_MIN, SYSTEM_POSITION_MIN);
 1960              		.loc 1 372 0
 1961 000c 0523     		movs	r3, #5
 1962 000e 0E93     		str	r3, [sp, #56]
 1963 0010 BDF89430 		ldrh	r3, [sp, #148]
 1964 0014 0D93     		str	r3, [sp, #52]
 1965 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 1966 001a 0C93     		str	r3, [sp, #48]
 1967 001c 6C46     		mov	r4, sp
 1968 001e 18AD     		add	r5, sp, #96
 1969 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1970 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1971 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1972 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1973 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1974 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 1975 0030 14AB     		add	r3, sp, #80
 1976 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1977 0034 FFF7FEFF 		bl	B3M_Write_2B
 1978              	.LVL141:
 373:Src/B3M.c     **** 	return 0;
 374:Src/B3M.c     **** }
 1979              		.loc 1 374 0
 1980 0038 0020     		movs	r0, #0
 1981 003a 11B0     		add	sp, sp, #68
 1982              	.LCFI147:
 1983              		.cfi_def_cfa_offset 28
 1984              		@ sp needed
 1985 003c BDE83040 		pop	{r4, r5, lr}
 1986              	.LCFI148:
 1987              		.cfi_restore 14
 1988              		.cfi_restore 5
 1989              		.cfi_restore 4
 1990              		.cfi_def_cfa_offset 16
 1991 0040 04B0     		add	sp, sp, #16
 1992              	.LCFI149:
 1993              		.cfi_def_cfa_offset 0
 1994 0042 7047     		bx	lr
ARM GAS  /tmp/ccugrpsh.s 			page 42


 1995              		.cfi_endproc
 1996              	.LFE148:
 1998              		.section	.text.B3M_PositionMax_Read,"ax",%progbits
 1999              		.align	2
 2000              		.global	B3M_PositionMax_Read
 2001              		.thumb
 2002              		.thumb_func
 2004              	B3M_PositionMax_Read:
 2005              	.LFB149:
 375:Src/B3M.c     **** 
 376:Src/B3M.c     **** uint8_t B3M_PositionMax_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 377:Src/B3M.c     **** {
 2006              		.loc 1 377 0
 2007              		.cfi_startproc
 2008              		@ args = 68, pretend = 16, frame = 0
 2009              		@ frame_needed = 0, uses_anonymous_args = 0
 2010              	.LVL142:
 2011 0000 84B0     		sub	sp, sp, #16
 2012              	.LCFI150:
 2013              		.cfi_def_cfa_offset 16
 2014 0002 30B5     		push	{r4, r5, lr}
 2015              	.LCFI151:
 2016              		.cfi_def_cfa_offset 28
 2017              		.cfi_offset 4, -28
 2018              		.cfi_offset 5, -24
 2019              		.cfi_offset 14, -20
 2020 0004 91B0     		sub	sp, sp, #68
 2021              	.LCFI152:
 2022              		.cfi_def_cfa_offset 96
 2023 0006 14AC     		add	r4, sp, #80
 2024 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 378:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_POSITION_MAX, READ_LENGTH_2B);
 2025              		.loc 1 378 0
 2026 000c 0223     		movs	r3, #2
 2027 000e 0E93     		str	r3, [sp, #56]
 2028 0010 0723     		movs	r3, #7
 2029 0012 0D93     		str	r3, [sp, #52]
 2030 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2031 0018 0C93     		str	r3, [sp, #48]
 2032 001a 6C46     		mov	r4, sp
 2033 001c 18AD     		add	r5, sp, #96
 2034 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2035 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2036 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2037 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2038 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2039 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2040 002e 14AB     		add	r3, sp, #80
 2041 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2042 0032 FFF7FEFF 		bl	B3M_Read
 2043              	.LVL143:
 379:Src/B3M.c     **** 	return 0;
 380:Src/B3M.c     **** }
 2044              		.loc 1 380 0
 2045 0036 0020     		movs	r0, #0
 2046 0038 11B0     		add	sp, sp, #68
 2047              	.LCFI153:
ARM GAS  /tmp/ccugrpsh.s 			page 43


 2048              		.cfi_def_cfa_offset 28
 2049              		@ sp needed
 2050 003a BDE83040 		pop	{r4, r5, lr}
 2051              	.LCFI154:
 2052              		.cfi_restore 14
 2053              		.cfi_restore 5
 2054              		.cfi_restore 4
 2055              		.cfi_def_cfa_offset 16
 2056 003e 04B0     		add	sp, sp, #16
 2057              	.LCFI155:
 2058              		.cfi_def_cfa_offset 0
 2059 0040 7047     		bx	lr
 2060              		.cfi_endproc
 2061              	.LFE149:
 2063 0042 00BF     		.section	.text.B3M_PositionMax_Write,"ax",%progbits
 2064              		.align	2
 2065              		.global	B3M_PositionMax_Write
 2066              		.thumb
 2067              		.thumb_func
 2069              	B3M_PositionMax_Write:
 2070              	.LFB150:
 381:Src/B3M.c     **** 
 382:Src/B3M.c     **** uint8_t B3M_PositionMax_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint16_t NEW_POSITION_MAX
 383:Src/B3M.c     **** {
 2071              		.loc 1 383 0
 2072              		.cfi_startproc
 2073              		@ args = 72, pretend = 16, frame = 0
 2074              		@ frame_needed = 0, uses_anonymous_args = 0
 2075              	.LVL144:
 2076 0000 84B0     		sub	sp, sp, #16
 2077              	.LCFI156:
 2078              		.cfi_def_cfa_offset 16
 2079 0002 30B5     		push	{r4, r5, lr}
 2080              	.LCFI157:
 2081              		.cfi_def_cfa_offset 28
 2082              		.cfi_offset 4, -28
 2083              		.cfi_offset 5, -24
 2084              		.cfi_offset 14, -20
 2085 0004 91B0     		sub	sp, sp, #68
 2086              	.LCFI158:
 2087              		.cfi_def_cfa_offset 96
 2088 0006 14AC     		add	r4, sp, #80
 2089 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 384:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_POSITION_MAX, SYSTEM_POSITION_MAX);
 2090              		.loc 1 384 0
 2091 000c 0723     		movs	r3, #7
 2092 000e 0E93     		str	r3, [sp, #56]
 2093 0010 BDF89430 		ldrh	r3, [sp, #148]
 2094 0014 0D93     		str	r3, [sp, #52]
 2095 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2096 001a 0C93     		str	r3, [sp, #48]
 2097 001c 6C46     		mov	r4, sp
 2098 001e 18AD     		add	r5, sp, #96
 2099 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2100 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2101 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2102 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 44


 2103 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2104 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2105 0030 14AB     		add	r3, sp, #80
 2106 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2107 0034 FFF7FEFF 		bl	B3M_Write_2B
 2108              	.LVL145:
 385:Src/B3M.c     **** 	return 0;
 386:Src/B3M.c     **** }
 2109              		.loc 1 386 0
 2110 0038 0020     		movs	r0, #0
 2111 003a 11B0     		add	sp, sp, #68
 2112              	.LCFI159:
 2113              		.cfi_def_cfa_offset 28
 2114              		@ sp needed
 2115 003c BDE83040 		pop	{r4, r5, lr}
 2116              	.LCFI160:
 2117              		.cfi_restore 14
 2118              		.cfi_restore 5
 2119              		.cfi_restore 4
 2120              		.cfi_def_cfa_offset 16
 2121 0040 04B0     		add	sp, sp, #16
 2122              	.LCFI161:
 2123              		.cfi_def_cfa_offset 0
 2124 0042 7047     		bx	lr
 2125              		.cfi_endproc
 2126              	.LFE150:
 2128              		.section	.text.B3M_PositionCenter_Read,"ax",%progbits
 2129              		.align	2
 2130              		.global	B3M_PositionCenter_Read
 2131              		.thumb
 2132              		.thumb_func
 2134              	B3M_PositionCenter_Read:
 2135              	.LFB151:
 387:Src/B3M.c     **** 
 388:Src/B3M.c     **** uint8_t B3M_PositionCenter_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 389:Src/B3M.c     **** {
 2136              		.loc 1 389 0
 2137              		.cfi_startproc
 2138              		@ args = 68, pretend = 16, frame = 0
 2139              		@ frame_needed = 0, uses_anonymous_args = 0
 2140              	.LVL146:
 2141 0000 84B0     		sub	sp, sp, #16
 2142              	.LCFI162:
 2143              		.cfi_def_cfa_offset 16
 2144 0002 30B5     		push	{r4, r5, lr}
 2145              	.LCFI163:
 2146              		.cfi_def_cfa_offset 28
 2147              		.cfi_offset 4, -28
 2148              		.cfi_offset 5, -24
 2149              		.cfi_offset 14, -20
 2150 0004 91B0     		sub	sp, sp, #68
 2151              	.LCFI164:
 2152              		.cfi_def_cfa_offset 96
 2153 0006 14AC     		add	r4, sp, #80
 2154 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 390:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_POSITION_CENTER, READ_LENGTH_2B);
 2155              		.loc 1 390 0
ARM GAS  /tmp/ccugrpsh.s 			page 45


 2156 000c 0223     		movs	r3, #2
 2157 000e 0E93     		str	r3, [sp, #56]
 2158 0010 0923     		movs	r3, #9
 2159 0012 0D93     		str	r3, [sp, #52]
 2160 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2161 0018 0C93     		str	r3, [sp, #48]
 2162 001a 6C46     		mov	r4, sp
 2163 001c 18AD     		add	r5, sp, #96
 2164 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2165 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2166 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2167 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2168 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2169 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2170 002e 14AB     		add	r3, sp, #80
 2171 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2172 0032 FFF7FEFF 		bl	B3M_Read
 2173              	.LVL147:
 391:Src/B3M.c     **** 	return 0;
 392:Src/B3M.c     **** }
 2174              		.loc 1 392 0
 2175 0036 0020     		movs	r0, #0
 2176 0038 11B0     		add	sp, sp, #68
 2177              	.LCFI165:
 2178              		.cfi_def_cfa_offset 28
 2179              		@ sp needed
 2180 003a BDE83040 		pop	{r4, r5, lr}
 2181              	.LCFI166:
 2182              		.cfi_restore 14
 2183              		.cfi_restore 5
 2184              		.cfi_restore 4
 2185              		.cfi_def_cfa_offset 16
 2186 003e 04B0     		add	sp, sp, #16
 2187              	.LCFI167:
 2188              		.cfi_def_cfa_offset 0
 2189 0040 7047     		bx	lr
 2190              		.cfi_endproc
 2191              	.LFE151:
 2193 0042 00BF     		.section	.text.B3M_PositionCenter_Write,"ax",%progbits
 2194              		.align	2
 2195              		.global	B3M_PositionCenter_Write
 2196              		.thumb
 2197              		.thumb_func
 2199              	B3M_PositionCenter_Write:
 2200              	.LFB152:
 393:Src/B3M.c     **** 
 394:Src/B3M.c     **** uint8_t B3M_PositionCenter_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint16_t NEW_POSITION_
 395:Src/B3M.c     **** {
 2201              		.loc 1 395 0
 2202              		.cfi_startproc
 2203              		@ args = 72, pretend = 16, frame = 0
 2204              		@ frame_needed = 0, uses_anonymous_args = 0
 2205              	.LVL148:
 2206 0000 84B0     		sub	sp, sp, #16
 2207              	.LCFI168:
 2208              		.cfi_def_cfa_offset 16
 2209 0002 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccugrpsh.s 			page 46


 2210              	.LCFI169:
 2211              		.cfi_def_cfa_offset 28
 2212              		.cfi_offset 4, -28
 2213              		.cfi_offset 5, -24
 2214              		.cfi_offset 14, -20
 2215 0004 91B0     		sub	sp, sp, #68
 2216              	.LCFI170:
 2217              		.cfi_def_cfa_offset 96
 2218 0006 14AC     		add	r4, sp, #80
 2219 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 396:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_POSITION_CENTER, SYSTEM_POSITION_CENTER);
 2220              		.loc 1 396 0
 2221 000c 0923     		movs	r3, #9
 2222 000e 0E93     		str	r3, [sp, #56]
 2223 0010 BDF89430 		ldrh	r3, [sp, #148]
 2224 0014 0D93     		str	r3, [sp, #52]
 2225 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2226 001a 0C93     		str	r3, [sp, #48]
 2227 001c 6C46     		mov	r4, sp
 2228 001e 18AD     		add	r5, sp, #96
 2229 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2230 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2231 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2232 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2233 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2234 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2235 0030 14AB     		add	r3, sp, #80
 2236 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2237 0034 FFF7FEFF 		bl	B3M_Write_2B
 2238              	.LVL149:
 397:Src/B3M.c     **** 	return 0;
 398:Src/B3M.c     **** }
 2239              		.loc 1 398 0
 2240 0038 0020     		movs	r0, #0
 2241 003a 11B0     		add	sp, sp, #68
 2242              	.LCFI171:
 2243              		.cfi_def_cfa_offset 28
 2244              		@ sp needed
 2245 003c BDE83040 		pop	{r4, r5, lr}
 2246              	.LCFI172:
 2247              		.cfi_restore 14
 2248              		.cfi_restore 5
 2249              		.cfi_restore 4
 2250              		.cfi_def_cfa_offset 16
 2251 0040 04B0     		add	sp, sp, #16
 2252              	.LCFI173:
 2253              		.cfi_def_cfa_offset 0
 2254 0042 7047     		bx	lr
 2255              		.cfi_endproc
 2256              	.LFE152:
 2258              		.section	.text.B3M_MCUTempLimit_Read,"ax",%progbits
 2259              		.align	2
 2260              		.global	B3M_MCUTempLimit_Read
 2261              		.thumb
 2262              		.thumb_func
 2264              	B3M_MCUTempLimit_Read:
 2265              	.LFB153:
ARM GAS  /tmp/ccugrpsh.s 			page 47


 399:Src/B3M.c     **** 
 400:Src/B3M.c     **** uint8_t B3M_MCUTempLimit_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 401:Src/B3M.c     **** {
 2266              		.loc 1 401 0
 2267              		.cfi_startproc
 2268              		@ args = 68, pretend = 16, frame = 0
 2269              		@ frame_needed = 0, uses_anonymous_args = 0
 2270              	.LVL150:
 2271 0000 84B0     		sub	sp, sp, #16
 2272              	.LCFI174:
 2273              		.cfi_def_cfa_offset 16
 2274 0002 30B5     		push	{r4, r5, lr}
 2275              	.LCFI175:
 2276              		.cfi_def_cfa_offset 28
 2277              		.cfi_offset 4, -28
 2278              		.cfi_offset 5, -24
 2279              		.cfi_offset 14, -20
 2280 0004 91B0     		sub	sp, sp, #68
 2281              	.LCFI176:
 2282              		.cfi_def_cfa_offset 96
 2283 0006 14AC     		add	r4, sp, #80
 2284 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 402:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_MCU_TEMP_LIMIT, READ_LENGTH_2B);
 2285              		.loc 1 402 0
 2286 000c 0223     		movs	r3, #2
 2287 000e 0E93     		str	r3, [sp, #56]
 2288 0010 0B23     		movs	r3, #11
 2289 0012 0D93     		str	r3, [sp, #52]
 2290 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2291 0018 0C93     		str	r3, [sp, #48]
 2292 001a 6C46     		mov	r4, sp
 2293 001c 18AD     		add	r5, sp, #96
 2294 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2295 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2296 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2297 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2298 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2299 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2300 002e 14AB     		add	r3, sp, #80
 2301 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2302 0032 FFF7FEFF 		bl	B3M_Read
 2303              	.LVL151:
 403:Src/B3M.c     **** 	return 0;
 404:Src/B3M.c     **** }
 2304              		.loc 1 404 0
 2305 0036 0020     		movs	r0, #0
 2306 0038 11B0     		add	sp, sp, #68
 2307              	.LCFI177:
 2308              		.cfi_def_cfa_offset 28
 2309              		@ sp needed
 2310 003a BDE83040 		pop	{r4, r5, lr}
 2311              	.LCFI178:
 2312              		.cfi_restore 14
 2313              		.cfi_restore 5
 2314              		.cfi_restore 4
 2315              		.cfi_def_cfa_offset 16
 2316 003e 04B0     		add	sp, sp, #16
ARM GAS  /tmp/ccugrpsh.s 			page 48


 2317              	.LCFI179:
 2318              		.cfi_def_cfa_offset 0
 2319 0040 7047     		bx	lr
 2320              		.cfi_endproc
 2321              	.LFE153:
 2323 0042 00BF     		.section	.text.B3M_MCUTempLimit_Write,"ax",%progbits
 2324              		.align	2
 2325              		.global	B3M_MCUTempLimit_Write
 2326              		.thumb
 2327              		.thumb_func
 2329              	B3M_MCUTempLimit_Write:
 2330              	.LFB154:
 405:Src/B3M.c     **** 
 406:Src/B3M.c     **** uint8_t B3M_MCUTempLimit_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint16_t NEW_MCU_TEMP_LI
 407:Src/B3M.c     **** {
 2331              		.loc 1 407 0
 2332              		.cfi_startproc
 2333              		@ args = 72, pretend = 16, frame = 0
 2334              		@ frame_needed = 0, uses_anonymous_args = 0
 2335              	.LVL152:
 2336 0000 84B0     		sub	sp, sp, #16
 2337              	.LCFI180:
 2338              		.cfi_def_cfa_offset 16
 2339 0002 30B5     		push	{r4, r5, lr}
 2340              	.LCFI181:
 2341              		.cfi_def_cfa_offset 28
 2342              		.cfi_offset 4, -28
 2343              		.cfi_offset 5, -24
 2344              		.cfi_offset 14, -20
 2345 0004 91B0     		sub	sp, sp, #68
 2346              	.LCFI182:
 2347              		.cfi_def_cfa_offset 96
 2348 0006 14AC     		add	r4, sp, #80
 2349 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 408:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_MCU_TEMP_LIMIT, SYSTEM_MCU_TEMP_LIMIT);
 2350              		.loc 1 408 0
 2351 000c 0B23     		movs	r3, #11
 2352 000e 0E93     		str	r3, [sp, #56]
 2353 0010 BDF89430 		ldrh	r3, [sp, #148]
 2354 0014 0D93     		str	r3, [sp, #52]
 2355 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2356 001a 0C93     		str	r3, [sp, #48]
 2357 001c 6C46     		mov	r4, sp
 2358 001e 18AD     		add	r5, sp, #96
 2359 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2360 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2361 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2362 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2363 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2364 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2365 0030 14AB     		add	r3, sp, #80
 2366 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2367 0034 FFF7FEFF 		bl	B3M_Write_2B
 2368              	.LVL153:
 409:Src/B3M.c     **** 	return 0;
 410:Src/B3M.c     **** }
 2369              		.loc 1 410 0
ARM GAS  /tmp/ccugrpsh.s 			page 49


 2370 0038 0020     		movs	r0, #0
 2371 003a 11B0     		add	sp, sp, #68
 2372              	.LCFI183:
 2373              		.cfi_def_cfa_offset 28
 2374              		@ sp needed
 2375 003c BDE83040 		pop	{r4, r5, lr}
 2376              	.LCFI184:
 2377              		.cfi_restore 14
 2378              		.cfi_restore 5
 2379              		.cfi_restore 4
 2380              		.cfi_def_cfa_offset 16
 2381 0040 04B0     		add	sp, sp, #16
 2382              	.LCFI185:
 2383              		.cfi_def_cfa_offset 0
 2384 0042 7047     		bx	lr
 2385              		.cfi_endproc
 2386              	.LFE154:
 2388              		.section	.text.B3M_MCUTempLimitPR_Read,"ax",%progbits
 2389              		.align	2
 2390              		.global	B3M_MCUTempLimitPR_Read
 2391              		.thumb
 2392              		.thumb_func
 2394              	B3M_MCUTempLimitPR_Read:
 2395              	.LFB155:
 411:Src/B3M.c     **** 
 412:Src/B3M.c     **** uint8_t B3M_MCUTempLimitPR_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 413:Src/B3M.c     **** {
 2396              		.loc 1 413 0
 2397              		.cfi_startproc
 2398              		@ args = 68, pretend = 16, frame = 0
 2399              		@ frame_needed = 0, uses_anonymous_args = 0
 2400              	.LVL154:
 2401 0000 84B0     		sub	sp, sp, #16
 2402              	.LCFI186:
 2403              		.cfi_def_cfa_offset 16
 2404 0002 30B5     		push	{r4, r5, lr}
 2405              	.LCFI187:
 2406              		.cfi_def_cfa_offset 28
 2407              		.cfi_offset 4, -28
 2408              		.cfi_offset 5, -24
 2409              		.cfi_offset 14, -20
 2410 0004 91B0     		sub	sp, sp, #68
 2411              	.LCFI188:
 2412              		.cfi_def_cfa_offset 96
 2413 0006 14AC     		add	r4, sp, #80
 2414 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 414:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_MCU_TEMP_LIMIT_PR, READ_LENGTH_1B);
 2415              		.loc 1 414 0
 2416 000c 0123     		movs	r3, #1
 2417 000e 0E93     		str	r3, [sp, #56]
 2418 0010 0D23     		movs	r3, #13
 2419 0012 0D93     		str	r3, [sp, #52]
 2420 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2421 0018 0C93     		str	r3, [sp, #48]
 2422 001a 6C46     		mov	r4, sp
 2423 001c 18AD     		add	r5, sp, #96
 2424 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 50


 2425 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2426 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2427 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2428 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2429 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2430 002e 14AB     		add	r3, sp, #80
 2431 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2432 0032 FFF7FEFF 		bl	B3M_Read
 2433              	.LVL155:
 415:Src/B3M.c     **** 	return 0;
 416:Src/B3M.c     **** }
 2434              		.loc 1 416 0
 2435 0036 0020     		movs	r0, #0
 2436 0038 11B0     		add	sp, sp, #68
 2437              	.LCFI189:
 2438              		.cfi_def_cfa_offset 28
 2439              		@ sp needed
 2440 003a BDE83040 		pop	{r4, r5, lr}
 2441              	.LCFI190:
 2442              		.cfi_restore 14
 2443              		.cfi_restore 5
 2444              		.cfi_restore 4
 2445              		.cfi_def_cfa_offset 16
 2446 003e 04B0     		add	sp, sp, #16
 2447              	.LCFI191:
 2448              		.cfi_def_cfa_offset 0
 2449 0040 7047     		bx	lr
 2450              		.cfi_endproc
 2451              	.LFE155:
 2453 0042 00BF     		.section	.text.B3M_MCUTempLimitPR_Write,"ax",%progbits
 2454              		.align	2
 2455              		.global	B3M_MCUTempLimitPR_Write
 2456              		.thumb
 2457              		.thumb_func
 2459              	B3M_MCUTempLimitPR_Write:
 2460              	.LFB156:
 417:Src/B3M.c     **** 
 418:Src/B3M.c     **** uint8_t B3M_MCUTempLimitPR_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_MCU_TEMP_L
 419:Src/B3M.c     **** {
 2461              		.loc 1 419 0
 2462              		.cfi_startproc
 2463              		@ args = 72, pretend = 16, frame = 0
 2464              		@ frame_needed = 0, uses_anonymous_args = 0
 2465              	.LVL156:
 2466 0000 84B0     		sub	sp, sp, #16
 2467              	.LCFI192:
 2468              		.cfi_def_cfa_offset 16
 2469 0002 30B5     		push	{r4, r5, lr}
 2470              	.LCFI193:
 2471              		.cfi_def_cfa_offset 28
 2472              		.cfi_offset 4, -28
 2473              		.cfi_offset 5, -24
 2474              		.cfi_offset 14, -20
 2475 0004 91B0     		sub	sp, sp, #68
 2476              	.LCFI194:
 2477              		.cfi_def_cfa_offset 96
 2478 0006 14AC     		add	r4, sp, #80
ARM GAS  /tmp/ccugrpsh.s 			page 51


 2479 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 420:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, NEW_MCU_TEMP_LIMIT_PR, SYSTEM_MCU_TEMP_LIMIT_PR);
 2480              		.loc 1 420 0
 2481 000c 0D23     		movs	r3, #13
 2482 000e 0E93     		str	r3, [sp, #56]
 2483 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 2484 0014 0D93     		str	r3, [sp, #52]
 2485 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2486 001a 0C93     		str	r3, [sp, #48]
 2487 001c 6C46     		mov	r4, sp
 2488 001e 18AD     		add	r5, sp, #96
 2489 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2490 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2491 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2492 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2493 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2494 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2495 0030 14AB     		add	r3, sp, #80
 2496 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2497 0034 FFF7FEFF 		bl	B3M_Write_1B
 2498              	.LVL157:
 421:Src/B3M.c     **** 	return 0;
 422:Src/B3M.c     **** }
 2499              		.loc 1 422 0
 2500 0038 0020     		movs	r0, #0
 2501 003a 11B0     		add	sp, sp, #68
 2502              	.LCFI195:
 2503              		.cfi_def_cfa_offset 28
 2504              		@ sp needed
 2505 003c BDE83040 		pop	{r4, r5, lr}
 2506              	.LCFI196:
 2507              		.cfi_restore 14
 2508              		.cfi_restore 5
 2509              		.cfi_restore 4
 2510              		.cfi_def_cfa_offset 16
 2511 0040 04B0     		add	sp, sp, #16
 2512              	.LCFI197:
 2513              		.cfi_def_cfa_offset 0
 2514 0042 7047     		bx	lr
 2515              		.cfi_endproc
 2516              	.LFE156:
 2518              		.section	.text.B3M_MotorTempLimit_Read,"ax",%progbits
 2519              		.align	2
 2520              		.global	B3M_MotorTempLimit_Read
 2521              		.thumb
 2522              		.thumb_func
 2524              	B3M_MotorTempLimit_Read:
 2525              	.LFB157:
 423:Src/B3M.c     **** 
 424:Src/B3M.c     **** uint8_t B3M_MotorTempLimit_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 425:Src/B3M.c     **** {
 2526              		.loc 1 425 0
 2527              		.cfi_startproc
 2528              		@ args = 68, pretend = 16, frame = 0
 2529              		@ frame_needed = 0, uses_anonymous_args = 0
 2530              	.LVL158:
 2531 0000 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/ccugrpsh.s 			page 52


 2532              	.LCFI198:
 2533              		.cfi_def_cfa_offset 16
 2534 0002 30B5     		push	{r4, r5, lr}
 2535              	.LCFI199:
 2536              		.cfi_def_cfa_offset 28
 2537              		.cfi_offset 4, -28
 2538              		.cfi_offset 5, -24
 2539              		.cfi_offset 14, -20
 2540 0004 91B0     		sub	sp, sp, #68
 2541              	.LCFI200:
 2542              		.cfi_def_cfa_offset 96
 2543 0006 14AC     		add	r4, sp, #80
 2544 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 426:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_MOTOR_TEMP_LIMIT, READ_LENGTH_2B);
 2545              		.loc 1 426 0
 2546 000c 0223     		movs	r3, #2
 2547 000e 0E93     		str	r3, [sp, #56]
 2548 0010 0E23     		movs	r3, #14
 2549 0012 0D93     		str	r3, [sp, #52]
 2550 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2551 0018 0C93     		str	r3, [sp, #48]
 2552 001a 6C46     		mov	r4, sp
 2553 001c 18AD     		add	r5, sp, #96
 2554 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2555 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2556 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2557 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2558 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2559 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2560 002e 14AB     		add	r3, sp, #80
 2561 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2562 0032 FFF7FEFF 		bl	B3M_Read
 2563              	.LVL159:
 427:Src/B3M.c     **** 	return 0;
 428:Src/B3M.c     **** }
 2564              		.loc 1 428 0
 2565 0036 0020     		movs	r0, #0
 2566 0038 11B0     		add	sp, sp, #68
 2567              	.LCFI201:
 2568              		.cfi_def_cfa_offset 28
 2569              		@ sp needed
 2570 003a BDE83040 		pop	{r4, r5, lr}
 2571              	.LCFI202:
 2572              		.cfi_restore 14
 2573              		.cfi_restore 5
 2574              		.cfi_restore 4
 2575              		.cfi_def_cfa_offset 16
 2576 003e 04B0     		add	sp, sp, #16
 2577              	.LCFI203:
 2578              		.cfi_def_cfa_offset 0
 2579 0040 7047     		bx	lr
 2580              		.cfi_endproc
 2581              	.LFE157:
 2583 0042 00BF     		.section	.text.B3M_MotorTempLimit_Write,"ax",%progbits
 2584              		.align	2
 2585              		.global	B3M_MotorTempLimit_Write
 2586              		.thumb
ARM GAS  /tmp/ccugrpsh.s 			page 53


 2587              		.thumb_func
 2589              	B3M_MotorTempLimit_Write:
 2590              	.LFB158:
 429:Src/B3M.c     **** 
 430:Src/B3M.c     **** uint8_t B3M_MotorTempLimit_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint16_t NEW_MOTOR_TEM
 431:Src/B3M.c     **** {
 2591              		.loc 1 431 0
 2592              		.cfi_startproc
 2593              		@ args = 72, pretend = 16, frame = 0
 2594              		@ frame_needed = 0, uses_anonymous_args = 0
 2595              	.LVL160:
 2596 0000 84B0     		sub	sp, sp, #16
 2597              	.LCFI204:
 2598              		.cfi_def_cfa_offset 16
 2599 0002 30B5     		push	{r4, r5, lr}
 2600              	.LCFI205:
 2601              		.cfi_def_cfa_offset 28
 2602              		.cfi_offset 4, -28
 2603              		.cfi_offset 5, -24
 2604              		.cfi_offset 14, -20
 2605 0004 91B0     		sub	sp, sp, #68
 2606              	.LCFI206:
 2607              		.cfi_def_cfa_offset 96
 2608 0006 14AC     		add	r4, sp, #80
 2609 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 432:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_MOTOR_TEMP_LIMIT, SYSTEM_MOTOR_TEMP_LIMIT);
 2610              		.loc 1 432 0
 2611 000c 0E23     		movs	r3, #14
 2612 000e 0E93     		str	r3, [sp, #56]
 2613 0010 BDF89430 		ldrh	r3, [sp, #148]
 2614 0014 0D93     		str	r3, [sp, #52]
 2615 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2616 001a 0C93     		str	r3, [sp, #48]
 2617 001c 6C46     		mov	r4, sp
 2618 001e 18AD     		add	r5, sp, #96
 2619 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2620 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2621 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2622 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2623 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2624 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2625 0030 14AB     		add	r3, sp, #80
 2626 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2627 0034 FFF7FEFF 		bl	B3M_Write_2B
 2628              	.LVL161:
 433:Src/B3M.c     **** 	return 0;
 434:Src/B3M.c     **** }
 2629              		.loc 1 434 0
 2630 0038 0020     		movs	r0, #0
 2631 003a 11B0     		add	sp, sp, #68
 2632              	.LCFI207:
 2633              		.cfi_def_cfa_offset 28
 2634              		@ sp needed
 2635 003c BDE83040 		pop	{r4, r5, lr}
 2636              	.LCFI208:
 2637              		.cfi_restore 14
 2638              		.cfi_restore 5
ARM GAS  /tmp/ccugrpsh.s 			page 54


 2639              		.cfi_restore 4
 2640              		.cfi_def_cfa_offset 16
 2641 0040 04B0     		add	sp, sp, #16
 2642              	.LCFI209:
 2643              		.cfi_def_cfa_offset 0
 2644 0042 7047     		bx	lr
 2645              		.cfi_endproc
 2646              	.LFE158:
 2648              		.section	.text.B3M_MotorTempLimitPR_Read,"ax",%progbits
 2649              		.align	2
 2650              		.global	B3M_MotorTempLimitPR_Read
 2651              		.thumb
 2652              		.thumb_func
 2654              	B3M_MotorTempLimitPR_Read:
 2655              	.LFB159:
 435:Src/B3M.c     **** 
 436:Src/B3M.c     **** uint8_t B3M_MotorTempLimitPR_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 437:Src/B3M.c     **** {
 2656              		.loc 1 437 0
 2657              		.cfi_startproc
 2658              		@ args = 68, pretend = 16, frame = 0
 2659              		@ frame_needed = 0, uses_anonymous_args = 0
 2660              	.LVL162:
 2661 0000 84B0     		sub	sp, sp, #16
 2662              	.LCFI210:
 2663              		.cfi_def_cfa_offset 16
 2664 0002 30B5     		push	{r4, r5, lr}
 2665              	.LCFI211:
 2666              		.cfi_def_cfa_offset 28
 2667              		.cfi_offset 4, -28
 2668              		.cfi_offset 5, -24
 2669              		.cfi_offset 14, -20
 2670 0004 91B0     		sub	sp, sp, #68
 2671              	.LCFI212:
 2672              		.cfi_def_cfa_offset 96
 2673 0006 14AC     		add	r4, sp, #80
 2674 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 438:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_MOTOR_TEMP_LIMIT_PR, READ_LENGTH_1B);
 2675              		.loc 1 438 0
 2676 000c 0123     		movs	r3, #1
 2677 000e 0E93     		str	r3, [sp, #56]
 2678 0010 1023     		movs	r3, #16
 2679 0012 0D93     		str	r3, [sp, #52]
 2680 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2681 0018 0C93     		str	r3, [sp, #48]
 2682 001a 6C46     		mov	r4, sp
 2683 001c 18AD     		add	r5, sp, #96
 2684 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2685 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2686 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2687 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2688 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2689 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2690 002e 14AB     		add	r3, sp, #80
 2691 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2692 0032 FFF7FEFF 		bl	B3M_Read
 2693              	.LVL163:
ARM GAS  /tmp/ccugrpsh.s 			page 55


 439:Src/B3M.c     **** 	return 0;
 440:Src/B3M.c     **** }
 2694              		.loc 1 440 0
 2695 0036 0020     		movs	r0, #0
 2696 0038 11B0     		add	sp, sp, #68
 2697              	.LCFI213:
 2698              		.cfi_def_cfa_offset 28
 2699              		@ sp needed
 2700 003a BDE83040 		pop	{r4, r5, lr}
 2701              	.LCFI214:
 2702              		.cfi_restore 14
 2703              		.cfi_restore 5
 2704              		.cfi_restore 4
 2705              		.cfi_def_cfa_offset 16
 2706 003e 04B0     		add	sp, sp, #16
 2707              	.LCFI215:
 2708              		.cfi_def_cfa_offset 0
 2709 0040 7047     		bx	lr
 2710              		.cfi_endproc
 2711              	.LFE159:
 2713 0042 00BF     		.section	.text.B3M_MotorTempLimitPR_Write,"ax",%progbits
 2714              		.align	2
 2715              		.global	B3M_MotorTempLimitPR_Write
 2716              		.thumb
 2717              		.thumb_func
 2719              	B3M_MotorTempLimitPR_Write:
 2720              	.LFB160:
 441:Src/B3M.c     **** 
 442:Src/B3M.c     **** uint8_t B3M_MotorTempLimitPR_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_MOTOR_TE
 443:Src/B3M.c     **** {
 2721              		.loc 1 443 0
 2722              		.cfi_startproc
 2723              		@ args = 72, pretend = 16, frame = 0
 2724              		@ frame_needed = 0, uses_anonymous_args = 0
 2725              	.LVL164:
 2726 0000 84B0     		sub	sp, sp, #16
 2727              	.LCFI216:
 2728              		.cfi_def_cfa_offset 16
 2729 0002 30B5     		push	{r4, r5, lr}
 2730              	.LCFI217:
 2731              		.cfi_def_cfa_offset 28
 2732              		.cfi_offset 4, -28
 2733              		.cfi_offset 5, -24
 2734              		.cfi_offset 14, -20
 2735 0004 91B0     		sub	sp, sp, #68
 2736              	.LCFI218:
 2737              		.cfi_def_cfa_offset 96
 2738 0006 14AC     		add	r4, sp, #80
 2739 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 444:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, NEW_MOTOR_TEMP_LIMIT_PR, SYSTEM_MOTOR_TEMP_LIMIT_PR);
 2740              		.loc 1 444 0
 2741 000c 1023     		movs	r3, #16
 2742 000e 0E93     		str	r3, [sp, #56]
 2743 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 2744 0014 0D93     		str	r3, [sp, #52]
 2745 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2746 001a 0C93     		str	r3, [sp, #48]
ARM GAS  /tmp/ccugrpsh.s 			page 56


 2747 001c 6C46     		mov	r4, sp
 2748 001e 18AD     		add	r5, sp, #96
 2749 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2750 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2751 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2752 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2753 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2754 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2755 0030 14AB     		add	r3, sp, #80
 2756 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2757 0034 FFF7FEFF 		bl	B3M_Write_1B
 2758              	.LVL165:
 445:Src/B3M.c     **** 	return 0;
 446:Src/B3M.c     **** }
 2759              		.loc 1 446 0
 2760 0038 0020     		movs	r0, #0
 2761 003a 11B0     		add	sp, sp, #68
 2762              	.LCFI219:
 2763              		.cfi_def_cfa_offset 28
 2764              		@ sp needed
 2765 003c BDE83040 		pop	{r4, r5, lr}
 2766              	.LCFI220:
 2767              		.cfi_restore 14
 2768              		.cfi_restore 5
 2769              		.cfi_restore 4
 2770              		.cfi_def_cfa_offset 16
 2771 0040 04B0     		add	sp, sp, #16
 2772              	.LCFI221:
 2773              		.cfi_def_cfa_offset 0
 2774 0042 7047     		bx	lr
 2775              		.cfi_endproc
 2776              	.LFE160:
 2778              		.section	.text.B3M_CurrentLimit_Read,"ax",%progbits
 2779              		.align	2
 2780              		.global	B3M_CurrentLimit_Read
 2781              		.thumb
 2782              		.thumb_func
 2784              	B3M_CurrentLimit_Read:
 2785              	.LFB161:
 447:Src/B3M.c     **** 
 448:Src/B3M.c     **** uint8_t B3M_CurrentLimit_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 449:Src/B3M.c     **** {
 2786              		.loc 1 449 0
 2787              		.cfi_startproc
 2788              		@ args = 68, pretend = 16, frame = 0
 2789              		@ frame_needed = 0, uses_anonymous_args = 0
 2790              	.LVL166:
 2791 0000 84B0     		sub	sp, sp, #16
 2792              	.LCFI222:
 2793              		.cfi_def_cfa_offset 16
 2794 0002 30B5     		push	{r4, r5, lr}
 2795              	.LCFI223:
 2796              		.cfi_def_cfa_offset 28
 2797              		.cfi_offset 4, -28
 2798              		.cfi_offset 5, -24
 2799              		.cfi_offset 14, -20
 2800 0004 91B0     		sub	sp, sp, #68
ARM GAS  /tmp/ccugrpsh.s 			page 57


 2801              	.LCFI224:
 2802              		.cfi_def_cfa_offset 96
 2803 0006 14AC     		add	r4, sp, #80
 2804 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 450:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_CURRENT_LIMIT, READ_LENGTH_2B);
 2805              		.loc 1 450 0
 2806 000c 0223     		movs	r3, #2
 2807 000e 0E93     		str	r3, [sp, #56]
 2808 0010 1123     		movs	r3, #17
 2809 0012 0D93     		str	r3, [sp, #52]
 2810 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2811 0018 0C93     		str	r3, [sp, #48]
 2812 001a 6C46     		mov	r4, sp
 2813 001c 18AD     		add	r5, sp, #96
 2814 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2815 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2816 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2817 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2818 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2819 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2820 002e 14AB     		add	r3, sp, #80
 2821 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2822 0032 FFF7FEFF 		bl	B3M_Read
 2823              	.LVL167:
 451:Src/B3M.c     **** 	return 0;
 452:Src/B3M.c     **** }
 2824              		.loc 1 452 0
 2825 0036 0020     		movs	r0, #0
 2826 0038 11B0     		add	sp, sp, #68
 2827              	.LCFI225:
 2828              		.cfi_def_cfa_offset 28
 2829              		@ sp needed
 2830 003a BDE83040 		pop	{r4, r5, lr}
 2831              	.LCFI226:
 2832              		.cfi_restore 14
 2833              		.cfi_restore 5
 2834              		.cfi_restore 4
 2835              		.cfi_def_cfa_offset 16
 2836 003e 04B0     		add	sp, sp, #16
 2837              	.LCFI227:
 2838              		.cfi_def_cfa_offset 0
 2839 0040 7047     		bx	lr
 2840              		.cfi_endproc
 2841              	.LFE161:
 2843 0042 00BF     		.section	.text.B3M_CurrentLimit_Write,"ax",%progbits
 2844              		.align	2
 2845              		.global	B3M_CurrentLimit_Write
 2846              		.thumb
 2847              		.thumb_func
 2849              	B3M_CurrentLimit_Write:
 2850              	.LFB162:
 453:Src/B3M.c     **** 
 454:Src/B3M.c     **** uint8_t B3M_CurrentLimit_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint16_t NEW_CURRENT_LIM
 455:Src/B3M.c     **** {
 2851              		.loc 1 455 0
 2852              		.cfi_startproc
 2853              		@ args = 72, pretend = 16, frame = 0
ARM GAS  /tmp/ccugrpsh.s 			page 58


 2854              		@ frame_needed = 0, uses_anonymous_args = 0
 2855              	.LVL168:
 2856 0000 84B0     		sub	sp, sp, #16
 2857              	.LCFI228:
 2858              		.cfi_def_cfa_offset 16
 2859 0002 30B5     		push	{r4, r5, lr}
 2860              	.LCFI229:
 2861              		.cfi_def_cfa_offset 28
 2862              		.cfi_offset 4, -28
 2863              		.cfi_offset 5, -24
 2864              		.cfi_offset 14, -20
 2865 0004 91B0     		sub	sp, sp, #68
 2866              	.LCFI230:
 2867              		.cfi_def_cfa_offset 96
 2868 0006 14AC     		add	r4, sp, #80
 2869 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 456:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_CURRENT_LIMIT, SYSTEM_CURRENT_LIMIT);
 2870              		.loc 1 456 0
 2871 000c 1123     		movs	r3, #17
 2872 000e 0E93     		str	r3, [sp, #56]
 2873 0010 BDF89430 		ldrh	r3, [sp, #148]
 2874 0014 0D93     		str	r3, [sp, #52]
 2875 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2876 001a 0C93     		str	r3, [sp, #48]
 2877 001c 6C46     		mov	r4, sp
 2878 001e 18AD     		add	r5, sp, #96
 2879 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2880 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2881 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2882 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2883 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2884 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2885 0030 14AB     		add	r3, sp, #80
 2886 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2887 0034 FFF7FEFF 		bl	B3M_Write_2B
 2888              	.LVL169:
 457:Src/B3M.c     **** 	return 0;
 458:Src/B3M.c     **** }
 2889              		.loc 1 458 0
 2890 0038 0020     		movs	r0, #0
 2891 003a 11B0     		add	sp, sp, #68
 2892              	.LCFI231:
 2893              		.cfi_def_cfa_offset 28
 2894              		@ sp needed
 2895 003c BDE83040 		pop	{r4, r5, lr}
 2896              	.LCFI232:
 2897              		.cfi_restore 14
 2898              		.cfi_restore 5
 2899              		.cfi_restore 4
 2900              		.cfi_def_cfa_offset 16
 2901 0040 04B0     		add	sp, sp, #16
 2902              	.LCFI233:
 2903              		.cfi_def_cfa_offset 0
 2904 0042 7047     		bx	lr
 2905              		.cfi_endproc
 2906              	.LFE162:
 2908              		.section	.text.B3M_CurrentLimitPR_Read,"ax",%progbits
ARM GAS  /tmp/ccugrpsh.s 			page 59


 2909              		.align	2
 2910              		.global	B3M_CurrentLimitPR_Read
 2911              		.thumb
 2912              		.thumb_func
 2914              	B3M_CurrentLimitPR_Read:
 2915              	.LFB163:
 459:Src/B3M.c     **** 
 460:Src/B3M.c     **** uint8_t B3M_CurrentLimitPR_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 461:Src/B3M.c     **** {
 2916              		.loc 1 461 0
 2917              		.cfi_startproc
 2918              		@ args = 68, pretend = 16, frame = 0
 2919              		@ frame_needed = 0, uses_anonymous_args = 0
 2920              	.LVL170:
 2921 0000 84B0     		sub	sp, sp, #16
 2922              	.LCFI234:
 2923              		.cfi_def_cfa_offset 16
 2924 0002 30B5     		push	{r4, r5, lr}
 2925              	.LCFI235:
 2926              		.cfi_def_cfa_offset 28
 2927              		.cfi_offset 4, -28
 2928              		.cfi_offset 5, -24
 2929              		.cfi_offset 14, -20
 2930 0004 91B0     		sub	sp, sp, #68
 2931              	.LCFI236:
 2932              		.cfi_def_cfa_offset 96
 2933 0006 14AC     		add	r4, sp, #80
 2934 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 462:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_CURRENT_LIMIT_PR, READ_LENGTH_1B);
 2935              		.loc 1 462 0
 2936 000c 0123     		movs	r3, #1
 2937 000e 0E93     		str	r3, [sp, #56]
 2938 0010 1323     		movs	r3, #19
 2939 0012 0D93     		str	r3, [sp, #52]
 2940 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 2941 0018 0C93     		str	r3, [sp, #48]
 2942 001a 6C46     		mov	r4, sp
 2943 001c 18AD     		add	r5, sp, #96
 2944 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2945 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2946 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2947 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2948 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 2949 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2950 002e 14AB     		add	r3, sp, #80
 2951 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2952 0032 FFF7FEFF 		bl	B3M_Read
 2953              	.LVL171:
 463:Src/B3M.c     **** 	return 0;
 464:Src/B3M.c     **** }
 2954              		.loc 1 464 0
 2955 0036 0020     		movs	r0, #0
 2956 0038 11B0     		add	sp, sp, #68
 2957              	.LCFI237:
 2958              		.cfi_def_cfa_offset 28
 2959              		@ sp needed
 2960 003a BDE83040 		pop	{r4, r5, lr}
ARM GAS  /tmp/ccugrpsh.s 			page 60


 2961              	.LCFI238:
 2962              		.cfi_restore 14
 2963              		.cfi_restore 5
 2964              		.cfi_restore 4
 2965              		.cfi_def_cfa_offset 16
 2966 003e 04B0     		add	sp, sp, #16
 2967              	.LCFI239:
 2968              		.cfi_def_cfa_offset 0
 2969 0040 7047     		bx	lr
 2970              		.cfi_endproc
 2971              	.LFE163:
 2973 0042 00BF     		.section	.text.B3M_CurrentLimitPR_Write,"ax",%progbits
 2974              		.align	2
 2975              		.global	B3M_CurrentLimitPR_Write
 2976              		.thumb
 2977              		.thumb_func
 2979              	B3M_CurrentLimitPR_Write:
 2980              	.LFB164:
 465:Src/B3M.c     **** 
 466:Src/B3M.c     **** uint8_t B3M_CurrentLimitPR_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_CURRENT_LI
 467:Src/B3M.c     **** {
 2981              		.loc 1 467 0
 2982              		.cfi_startproc
 2983              		@ args = 72, pretend = 16, frame = 0
 2984              		@ frame_needed = 0, uses_anonymous_args = 0
 2985              	.LVL172:
 2986 0000 84B0     		sub	sp, sp, #16
 2987              	.LCFI240:
 2988              		.cfi_def_cfa_offset 16
 2989 0002 30B5     		push	{r4, r5, lr}
 2990              	.LCFI241:
 2991              		.cfi_def_cfa_offset 28
 2992              		.cfi_offset 4, -28
 2993              		.cfi_offset 5, -24
 2994              		.cfi_offset 14, -20
 2995 0004 91B0     		sub	sp, sp, #68
 2996              	.LCFI242:
 2997              		.cfi_def_cfa_offset 96
 2998 0006 14AC     		add	r4, sp, #80
 2999 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 468:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, NEW_CURRENT_LIMIT_PR, SYSTEM_CURRENT_LIMIT_PR);
 3000              		.loc 1 468 0
 3001 000c 1323     		movs	r3, #19
 3002 000e 0E93     		str	r3, [sp, #56]
 3003 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 3004 0014 0D93     		str	r3, [sp, #52]
 3005 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3006 001a 0C93     		str	r3, [sp, #48]
 3007 001c 6C46     		mov	r4, sp
 3008 001e 18AD     		add	r5, sp, #96
 3009 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3010 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3011 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3012 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3013 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3014 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3015 0030 14AB     		add	r3, sp, #80
ARM GAS  /tmp/ccugrpsh.s 			page 61


 3016 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3017 0034 FFF7FEFF 		bl	B3M_Write_1B
 3018              	.LVL173:
 469:Src/B3M.c     **** 	return 0;
 470:Src/B3M.c     **** }
 3019              		.loc 1 470 0
 3020 0038 0020     		movs	r0, #0
 3021 003a 11B0     		add	sp, sp, #68
 3022              	.LCFI243:
 3023              		.cfi_def_cfa_offset 28
 3024              		@ sp needed
 3025 003c BDE83040 		pop	{r4, r5, lr}
 3026              	.LCFI244:
 3027              		.cfi_restore 14
 3028              		.cfi_restore 5
 3029              		.cfi_restore 4
 3030              		.cfi_def_cfa_offset 16
 3031 0040 04B0     		add	sp, sp, #16
 3032              	.LCFI245:
 3033              		.cfi_def_cfa_offset 0
 3034 0042 7047     		bx	lr
 3035              		.cfi_endproc
 3036              	.LFE164:
 3038              		.section	.text.B3M_LockDetectTime_Read,"ax",%progbits
 3039              		.align	2
 3040              		.global	B3M_LockDetectTime_Read
 3041              		.thumb
 3042              		.thumb_func
 3044              	B3M_LockDetectTime_Read:
 3045              	.LFB165:
 471:Src/B3M.c     **** 
 472:Src/B3M.c     **** uint8_t B3M_LockDetectTime_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 473:Src/B3M.c     **** {
 3046              		.loc 1 473 0
 3047              		.cfi_startproc
 3048              		@ args = 68, pretend = 16, frame = 0
 3049              		@ frame_needed = 0, uses_anonymous_args = 0
 3050              	.LVL174:
 3051 0000 84B0     		sub	sp, sp, #16
 3052              	.LCFI246:
 3053              		.cfi_def_cfa_offset 16
 3054 0002 30B5     		push	{r4, r5, lr}
 3055              	.LCFI247:
 3056              		.cfi_def_cfa_offset 28
 3057              		.cfi_offset 4, -28
 3058              		.cfi_offset 5, -24
 3059              		.cfi_offset 14, -20
 3060 0004 91B0     		sub	sp, sp, #68
 3061              	.LCFI248:
 3062              		.cfi_def_cfa_offset 96
 3063 0006 14AC     		add	r4, sp, #80
 3064 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 474:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_LOCKDETECT_TIME, READ_LENGTH_1B);
 3065              		.loc 1 474 0
 3066 000c 0123     		movs	r3, #1
 3067 000e 0E93     		str	r3, [sp, #56]
 3068 0010 1423     		movs	r3, #20
ARM GAS  /tmp/ccugrpsh.s 			page 62


 3069 0012 0D93     		str	r3, [sp, #52]
 3070 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3071 0018 0C93     		str	r3, [sp, #48]
 3072 001a 6C46     		mov	r4, sp
 3073 001c 18AD     		add	r5, sp, #96
 3074 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3075 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3076 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3077 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3078 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3079 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3080 002e 14AB     		add	r3, sp, #80
 3081 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3082 0032 FFF7FEFF 		bl	B3M_Read
 3083              	.LVL175:
 475:Src/B3M.c     **** 	return 0;
 476:Src/B3M.c     **** }
 3084              		.loc 1 476 0
 3085 0036 0020     		movs	r0, #0
 3086 0038 11B0     		add	sp, sp, #68
 3087              	.LCFI249:
 3088              		.cfi_def_cfa_offset 28
 3089              		@ sp needed
 3090 003a BDE83040 		pop	{r4, r5, lr}
 3091              	.LCFI250:
 3092              		.cfi_restore 14
 3093              		.cfi_restore 5
 3094              		.cfi_restore 4
 3095              		.cfi_def_cfa_offset 16
 3096 003e 04B0     		add	sp, sp, #16
 3097              	.LCFI251:
 3098              		.cfi_def_cfa_offset 0
 3099 0040 7047     		bx	lr
 3100              		.cfi_endproc
 3101              	.LFE165:
 3103 0042 00BF     		.section	.text.B3M_LockDetectTime_Write,"ax",%progbits
 3104              		.align	2
 3105              		.global	B3M_LockDetectTime_Write
 3106              		.thumb
 3107              		.thumb_func
 3109              	B3M_LockDetectTime_Write:
 3110              	.LFB166:
 477:Src/B3M.c     **** 
 478:Src/B3M.c     **** uint8_t B3M_LockDetectTime_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_LOCKDETECT
 479:Src/B3M.c     **** {
 3111              		.loc 1 479 0
 3112              		.cfi_startproc
 3113              		@ args = 72, pretend = 16, frame = 0
 3114              		@ frame_needed = 0, uses_anonymous_args = 0
 3115              	.LVL176:
 3116 0000 84B0     		sub	sp, sp, #16
 3117              	.LCFI252:
 3118              		.cfi_def_cfa_offset 16
 3119 0002 30B5     		push	{r4, r5, lr}
 3120              	.LCFI253:
 3121              		.cfi_def_cfa_offset 28
 3122              		.cfi_offset 4, -28
ARM GAS  /tmp/ccugrpsh.s 			page 63


 3123              		.cfi_offset 5, -24
 3124              		.cfi_offset 14, -20
 3125 0004 91B0     		sub	sp, sp, #68
 3126              	.LCFI254:
 3127              		.cfi_def_cfa_offset 96
 3128 0006 14AC     		add	r4, sp, #80
 3129 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 480:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, NEW_LOCKDETECT_TIME, SYSTEM_LOCKDETECT_TIME);
 3130              		.loc 1 480 0
 3131 000c 1423     		movs	r3, #20
 3132 000e 0E93     		str	r3, [sp, #56]
 3133 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 3134 0014 0D93     		str	r3, [sp, #52]
 3135 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3136 001a 0C93     		str	r3, [sp, #48]
 3137 001c 6C46     		mov	r4, sp
 3138 001e 18AD     		add	r5, sp, #96
 3139 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3140 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3141 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3142 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3143 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3144 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3145 0030 14AB     		add	r3, sp, #80
 3146 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3147 0034 FFF7FEFF 		bl	B3M_Write_1B
 3148              	.LVL177:
 481:Src/B3M.c     **** 	return 0;
 482:Src/B3M.c     **** }
 3149              		.loc 1 482 0
 3150 0038 0020     		movs	r0, #0
 3151 003a 11B0     		add	sp, sp, #68
 3152              	.LCFI255:
 3153              		.cfi_def_cfa_offset 28
 3154              		@ sp needed
 3155 003c BDE83040 		pop	{r4, r5, lr}
 3156              	.LCFI256:
 3157              		.cfi_restore 14
 3158              		.cfi_restore 5
 3159              		.cfi_restore 4
 3160              		.cfi_def_cfa_offset 16
 3161 0040 04B0     		add	sp, sp, #16
 3162              	.LCFI257:
 3163              		.cfi_def_cfa_offset 0
 3164 0042 7047     		bx	lr
 3165              		.cfi_endproc
 3166              	.LFE166:
 3168              		.section	.text.B3M_LockDetectOutrate_Read,"ax",%progbits
 3169              		.align	2
 3170              		.global	B3M_LockDetectOutrate_Read
 3171              		.thumb
 3172              		.thumb_func
 3174              	B3M_LockDetectOutrate_Read:
 3175              	.LFB167:
 483:Src/B3M.c     **** //
 484:Src/B3M.c     **** uint8_t B3M_LockDetectOutrate_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 485:Src/B3M.c     **** {
ARM GAS  /tmp/ccugrpsh.s 			page 64


 3176              		.loc 1 485 0
 3177              		.cfi_startproc
 3178              		@ args = 68, pretend = 16, frame = 0
 3179              		@ frame_needed = 0, uses_anonymous_args = 0
 3180              	.LVL178:
 3181 0000 84B0     		sub	sp, sp, #16
 3182              	.LCFI258:
 3183              		.cfi_def_cfa_offset 16
 3184 0002 30B5     		push	{r4, r5, lr}
 3185              	.LCFI259:
 3186              		.cfi_def_cfa_offset 28
 3187              		.cfi_offset 4, -28
 3188              		.cfi_offset 5, -24
 3189              		.cfi_offset 14, -20
 3190 0004 91B0     		sub	sp, sp, #68
 3191              	.LCFI260:
 3192              		.cfi_def_cfa_offset 96
 3193 0006 14AC     		add	r4, sp, #80
 3194 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 486:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_LOCKDETECT_OUTRATE, READ_LENGTH_1B);
 3195              		.loc 1 486 0
 3196 000c 0123     		movs	r3, #1
 3197 000e 0E93     		str	r3, [sp, #56]
 3198 0010 1523     		movs	r3, #21
 3199 0012 0D93     		str	r3, [sp, #52]
 3200 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3201 0018 0C93     		str	r3, [sp, #48]
 3202 001a 6C46     		mov	r4, sp
 3203 001c 18AD     		add	r5, sp, #96
 3204 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3205 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3206 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3207 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3208 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3209 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3210 002e 14AB     		add	r3, sp, #80
 3211 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3212 0032 FFF7FEFF 		bl	B3M_Read
 3213              	.LVL179:
 487:Src/B3M.c     **** 	return 0;
 488:Src/B3M.c     **** }
 3214              		.loc 1 488 0
 3215 0036 0020     		movs	r0, #0
 3216 0038 11B0     		add	sp, sp, #68
 3217              	.LCFI261:
 3218              		.cfi_def_cfa_offset 28
 3219              		@ sp needed
 3220 003a BDE83040 		pop	{r4, r5, lr}
 3221              	.LCFI262:
 3222              		.cfi_restore 14
 3223              		.cfi_restore 5
 3224              		.cfi_restore 4
 3225              		.cfi_def_cfa_offset 16
 3226 003e 04B0     		add	sp, sp, #16
 3227              	.LCFI263:
 3228              		.cfi_def_cfa_offset 0
 3229 0040 7047     		bx	lr
ARM GAS  /tmp/ccugrpsh.s 			page 65


 3230              		.cfi_endproc
 3231              	.LFE167:
 3233 0042 00BF     		.section	.text.B3M_LockDetectOutrate_Write,"ax",%progbits
 3234              		.align	2
 3235              		.global	B3M_LockDetectOutrate_Write
 3236              		.thumb
 3237              		.thumb_func
 3239              	B3M_LockDetectOutrate_Write:
 3240              	.LFB168:
 489:Src/B3M.c     **** 
 490:Src/B3M.c     **** uint8_t B3M_LockDetectOutrate_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_LOCKDET
 491:Src/B3M.c     **** {
 3241              		.loc 1 491 0
 3242              		.cfi_startproc
 3243              		@ args = 72, pretend = 16, frame = 0
 3244              		@ frame_needed = 0, uses_anonymous_args = 0
 3245              	.LVL180:
 3246 0000 84B0     		sub	sp, sp, #16
 3247              	.LCFI264:
 3248              		.cfi_def_cfa_offset 16
 3249 0002 30B5     		push	{r4, r5, lr}
 3250              	.LCFI265:
 3251              		.cfi_def_cfa_offset 28
 3252              		.cfi_offset 4, -28
 3253              		.cfi_offset 5, -24
 3254              		.cfi_offset 14, -20
 3255 0004 91B0     		sub	sp, sp, #68
 3256              	.LCFI266:
 3257              		.cfi_def_cfa_offset 96
 3258 0006 14AC     		add	r4, sp, #80
 3259 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 492:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, NEW_LOCKDETECT_OUTRATE, SYSTEM_LOCKDETECT_OUTRATE);
 3260              		.loc 1 492 0
 3261 000c 1523     		movs	r3, #21
 3262 000e 0E93     		str	r3, [sp, #56]
 3263 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 3264 0014 0D93     		str	r3, [sp, #52]
 3265 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3266 001a 0C93     		str	r3, [sp, #48]
 3267 001c 6C46     		mov	r4, sp
 3268 001e 18AD     		add	r5, sp, #96
 3269 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3270 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3271 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3272 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3273 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3274 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3275 0030 14AB     		add	r3, sp, #80
 3276 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3277 0034 FFF7FEFF 		bl	B3M_Write_1B
 3278              	.LVL181:
 493:Src/B3M.c     **** 	return 0;
 494:Src/B3M.c     **** }
 3279              		.loc 1 494 0
 3280 0038 0020     		movs	r0, #0
 3281 003a 11B0     		add	sp, sp, #68
 3282              	.LCFI267:
ARM GAS  /tmp/ccugrpsh.s 			page 66


 3283              		.cfi_def_cfa_offset 28
 3284              		@ sp needed
 3285 003c BDE83040 		pop	{r4, r5, lr}
 3286              	.LCFI268:
 3287              		.cfi_restore 14
 3288              		.cfi_restore 5
 3289              		.cfi_restore 4
 3290              		.cfi_def_cfa_offset 16
 3291 0040 04B0     		add	sp, sp, #16
 3292              	.LCFI269:
 3293              		.cfi_def_cfa_offset 0
 3294 0042 7047     		bx	lr
 3295              		.cfi_endproc
 3296              	.LFE168:
 3298              		.section	.text.B3M_LockDetectTimePR_Read,"ax",%progbits
 3299              		.align	2
 3300              		.global	B3M_LockDetectTimePR_Read
 3301              		.thumb
 3302              		.thumb_func
 3304              	B3M_LockDetectTimePR_Read:
 3305              	.LFB169:
 495:Src/B3M.c     **** 
 496:Src/B3M.c     **** uint8_t B3M_LockDetectTimePR_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 497:Src/B3M.c     **** {
 3306              		.loc 1 497 0
 3307              		.cfi_startproc
 3308              		@ args = 68, pretend = 16, frame = 0
 3309              		@ frame_needed = 0, uses_anonymous_args = 0
 3310              	.LVL182:
 3311 0000 84B0     		sub	sp, sp, #16
 3312              	.LCFI270:
 3313              		.cfi_def_cfa_offset 16
 3314 0002 30B5     		push	{r4, r5, lr}
 3315              	.LCFI271:
 3316              		.cfi_def_cfa_offset 28
 3317              		.cfi_offset 4, -28
 3318              		.cfi_offset 5, -24
 3319              		.cfi_offset 14, -20
 3320 0004 91B0     		sub	sp, sp, #68
 3321              	.LCFI272:
 3322              		.cfi_def_cfa_offset 96
 3323 0006 14AC     		add	r4, sp, #80
 3324 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 498:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_LOCKDETECT_TIME_PR, READ_LENGTH_1B);
 3325              		.loc 1 498 0
 3326 000c 0123     		movs	r3, #1
 3327 000e 0E93     		str	r3, [sp, #56]
 3328 0010 1623     		movs	r3, #22
 3329 0012 0D93     		str	r3, [sp, #52]
 3330 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3331 0018 0C93     		str	r3, [sp, #48]
 3332 001a 6C46     		mov	r4, sp
 3333 001c 18AD     		add	r5, sp, #96
 3334 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3335 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3336 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3337 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 67


 3338 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3339 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3340 002e 14AB     		add	r3, sp, #80
 3341 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3342 0032 FFF7FEFF 		bl	B3M_Read
 3343              	.LVL183:
 499:Src/B3M.c     **** 	return 0;
 500:Src/B3M.c     **** }
 3344              		.loc 1 500 0
 3345 0036 0020     		movs	r0, #0
 3346 0038 11B0     		add	sp, sp, #68
 3347              	.LCFI273:
 3348              		.cfi_def_cfa_offset 28
 3349              		@ sp needed
 3350 003a BDE83040 		pop	{r4, r5, lr}
 3351              	.LCFI274:
 3352              		.cfi_restore 14
 3353              		.cfi_restore 5
 3354              		.cfi_restore 4
 3355              		.cfi_def_cfa_offset 16
 3356 003e 04B0     		add	sp, sp, #16
 3357              	.LCFI275:
 3358              		.cfi_def_cfa_offset 0
 3359 0040 7047     		bx	lr
 3360              		.cfi_endproc
 3361              	.LFE169:
 3363 0042 00BF     		.section	.text.B3M_LockDetectTimePR_Write,"ax",%progbits
 3364              		.align	2
 3365              		.global	B3M_LockDetectTimePR_Write
 3366              		.thumb
 3367              		.thumb_func
 3369              	B3M_LockDetectTimePR_Write:
 3370              	.LFB170:
 501:Src/B3M.c     **** 
 502:Src/B3M.c     **** uint8_t B3M_LockDetectTimePR_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_LOCKDETE
 503:Src/B3M.c     **** {
 3371              		.loc 1 503 0
 3372              		.cfi_startproc
 3373              		@ args = 72, pretend = 16, frame = 0
 3374              		@ frame_needed = 0, uses_anonymous_args = 0
 3375              	.LVL184:
 3376 0000 84B0     		sub	sp, sp, #16
 3377              	.LCFI276:
 3378              		.cfi_def_cfa_offset 16
 3379 0002 30B5     		push	{r4, r5, lr}
 3380              	.LCFI277:
 3381              		.cfi_def_cfa_offset 28
 3382              		.cfi_offset 4, -28
 3383              		.cfi_offset 5, -24
 3384              		.cfi_offset 14, -20
 3385 0004 91B0     		sub	sp, sp, #68
 3386              	.LCFI278:
 3387              		.cfi_def_cfa_offset 96
 3388 0006 14AC     		add	r4, sp, #80
 3389 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 504:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, NEW_LOCKDETECT_TIME_PR, SYSTEM_LOCKDETECT_TIME_PR);
 3390              		.loc 1 504 0
ARM GAS  /tmp/ccugrpsh.s 			page 68


 3391 000c 1623     		movs	r3, #22
 3392 000e 0E93     		str	r3, [sp, #56]
 3393 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 3394 0014 0D93     		str	r3, [sp, #52]
 3395 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3396 001a 0C93     		str	r3, [sp, #48]
 3397 001c 6C46     		mov	r4, sp
 3398 001e 18AD     		add	r5, sp, #96
 3399 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3400 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3401 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3402 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3403 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3404 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3405 0030 14AB     		add	r3, sp, #80
 3406 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3407 0034 FFF7FEFF 		bl	B3M_Write_1B
 3408              	.LVL185:
 505:Src/B3M.c     **** 	return 0;
 506:Src/B3M.c     **** }
 3409              		.loc 1 506 0
 3410 0038 0020     		movs	r0, #0
 3411 003a 11B0     		add	sp, sp, #68
 3412              	.LCFI279:
 3413              		.cfi_def_cfa_offset 28
 3414              		@ sp needed
 3415 003c BDE83040 		pop	{r4, r5, lr}
 3416              	.LCFI280:
 3417              		.cfi_restore 14
 3418              		.cfi_restore 5
 3419              		.cfi_restore 4
 3420              		.cfi_def_cfa_offset 16
 3421 0040 04B0     		add	sp, sp, #16
 3422              	.LCFI281:
 3423              		.cfi_def_cfa_offset 0
 3424 0042 7047     		bx	lr
 3425              		.cfi_endproc
 3426              	.LFE170:
 3428              		.section	.text.B3M_InputVoltageMin_Read,"ax",%progbits
 3429              		.align	2
 3430              		.global	B3M_InputVoltageMin_Read
 3431              		.thumb
 3432              		.thumb_func
 3434              	B3M_InputVoltageMin_Read:
 3435              	.LFB171:
 507:Src/B3M.c     **** 
 508:Src/B3M.c     **** uint8_t B3M_InputVoltageMin_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 509:Src/B3M.c     **** {
 3436              		.loc 1 509 0
 3437              		.cfi_startproc
 3438              		@ args = 68, pretend = 16, frame = 0
 3439              		@ frame_needed = 0, uses_anonymous_args = 0
 3440              	.LVL186:
 3441 0000 84B0     		sub	sp, sp, #16
 3442              	.LCFI282:
 3443              		.cfi_def_cfa_offset 16
 3444 0002 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccugrpsh.s 			page 69


 3445              	.LCFI283:
 3446              		.cfi_def_cfa_offset 28
 3447              		.cfi_offset 4, -28
 3448              		.cfi_offset 5, -24
 3449              		.cfi_offset 14, -20
 3450 0004 91B0     		sub	sp, sp, #68
 3451              	.LCFI284:
 3452              		.cfi_def_cfa_offset 96
 3453 0006 14AC     		add	r4, sp, #80
 3454 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 510:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_INPUT_VOLTAGE_MIN, READ_LENGTH_2B);
 3455              		.loc 1 510 0
 3456 000c 0223     		movs	r3, #2
 3457 000e 0E93     		str	r3, [sp, #56]
 3458 0010 1723     		movs	r3, #23
 3459 0012 0D93     		str	r3, [sp, #52]
 3460 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3461 0018 0C93     		str	r3, [sp, #48]
 3462 001a 6C46     		mov	r4, sp
 3463 001c 18AD     		add	r5, sp, #96
 3464 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3465 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3466 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3467 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3468 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3469 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3470 002e 14AB     		add	r3, sp, #80
 3471 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3472 0032 FFF7FEFF 		bl	B3M_Read
 3473              	.LVL187:
 511:Src/B3M.c     **** 	return 0;
 512:Src/B3M.c     **** }
 3474              		.loc 1 512 0
 3475 0036 0020     		movs	r0, #0
 3476 0038 11B0     		add	sp, sp, #68
 3477              	.LCFI285:
 3478              		.cfi_def_cfa_offset 28
 3479              		@ sp needed
 3480 003a BDE83040 		pop	{r4, r5, lr}
 3481              	.LCFI286:
 3482              		.cfi_restore 14
 3483              		.cfi_restore 5
 3484              		.cfi_restore 4
 3485              		.cfi_def_cfa_offset 16
 3486 003e 04B0     		add	sp, sp, #16
 3487              	.LCFI287:
 3488              		.cfi_def_cfa_offset 0
 3489 0040 7047     		bx	lr
 3490              		.cfi_endproc
 3491              	.LFE171:
 3493 0042 00BF     		.section	.text.B3M_InputVoltageMin_Write,"ax",%progbits
 3494              		.align	2
 3495              		.global	B3M_InputVoltageMin_Write
 3496              		.thumb
 3497              		.thumb_func
 3499              	B3M_InputVoltageMin_Write:
 3500              	.LFB172:
ARM GAS  /tmp/ccugrpsh.s 			page 70


 513:Src/B3M.c     **** 
 514:Src/B3M.c     **** uint8_t B3M_InputVoltageMin_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint16_t NEW_INPUT_VO
 515:Src/B3M.c     **** {
 3501              		.loc 1 515 0
 3502              		.cfi_startproc
 3503              		@ args = 72, pretend = 16, frame = 0
 3504              		@ frame_needed = 0, uses_anonymous_args = 0
 3505              	.LVL188:
 3506 0000 84B0     		sub	sp, sp, #16
 3507              	.LCFI288:
 3508              		.cfi_def_cfa_offset 16
 3509 0002 30B5     		push	{r4, r5, lr}
 3510              	.LCFI289:
 3511              		.cfi_def_cfa_offset 28
 3512              		.cfi_offset 4, -28
 3513              		.cfi_offset 5, -24
 3514              		.cfi_offset 14, -20
 3515 0004 91B0     		sub	sp, sp, #68
 3516              	.LCFI290:
 3517              		.cfi_def_cfa_offset 96
 3518 0006 14AC     		add	r4, sp, #80
 3519 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 516:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_INPUT_VOLTAGE_MIN, SYSTEM_INPUT_VOLTAGE_MIN);
 3520              		.loc 1 516 0
 3521 000c 1723     		movs	r3, #23
 3522 000e 0E93     		str	r3, [sp, #56]
 3523 0010 BDF89430 		ldrh	r3, [sp, #148]
 3524 0014 0D93     		str	r3, [sp, #52]
 3525 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3526 001a 0C93     		str	r3, [sp, #48]
 3527 001c 6C46     		mov	r4, sp
 3528 001e 18AD     		add	r5, sp, #96
 3529 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3530 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3531 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3532 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3533 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3534 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3535 0030 14AB     		add	r3, sp, #80
 3536 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3537 0034 FFF7FEFF 		bl	B3M_Write_2B
 3538              	.LVL189:
 517:Src/B3M.c     **** 	return 0;
 518:Src/B3M.c     **** }
 3539              		.loc 1 518 0
 3540 0038 0020     		movs	r0, #0
 3541 003a 11B0     		add	sp, sp, #68
 3542              	.LCFI291:
 3543              		.cfi_def_cfa_offset 28
 3544              		@ sp needed
 3545 003c BDE83040 		pop	{r4, r5, lr}
 3546              	.LCFI292:
 3547              		.cfi_restore 14
 3548              		.cfi_restore 5
 3549              		.cfi_restore 4
 3550              		.cfi_def_cfa_offset 16
 3551 0040 04B0     		add	sp, sp, #16
ARM GAS  /tmp/ccugrpsh.s 			page 71


 3552              	.LCFI293:
 3553              		.cfi_def_cfa_offset 0
 3554 0042 7047     		bx	lr
 3555              		.cfi_endproc
 3556              	.LFE172:
 3558              		.section	.text.B3M_InputVoltageMax_Read,"ax",%progbits
 3559              		.align	2
 3560              		.global	B3M_InputVoltageMax_Read
 3561              		.thumb
 3562              		.thumb_func
 3564              	B3M_InputVoltageMax_Read:
 3565              	.LFB173:
 519:Src/B3M.c     **** 
 520:Src/B3M.c     **** uint8_t B3M_InputVoltageMax_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 521:Src/B3M.c     **** {
 3566              		.loc 1 521 0
 3567              		.cfi_startproc
 3568              		@ args = 68, pretend = 16, frame = 0
 3569              		@ frame_needed = 0, uses_anonymous_args = 0
 3570              	.LVL190:
 3571 0000 84B0     		sub	sp, sp, #16
 3572              	.LCFI294:
 3573              		.cfi_def_cfa_offset 16
 3574 0002 30B5     		push	{r4, r5, lr}
 3575              	.LCFI295:
 3576              		.cfi_def_cfa_offset 28
 3577              		.cfi_offset 4, -28
 3578              		.cfi_offset 5, -24
 3579              		.cfi_offset 14, -20
 3580 0004 91B0     		sub	sp, sp, #68
 3581              	.LCFI296:
 3582              		.cfi_def_cfa_offset 96
 3583 0006 14AC     		add	r4, sp, #80
 3584 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 522:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_INPUT_VOLTAGE_MAX, READ_LENGTH_2B);
 3585              		.loc 1 522 0
 3586 000c 0223     		movs	r3, #2
 3587 000e 0E93     		str	r3, [sp, #56]
 3588 0010 1923     		movs	r3, #25
 3589 0012 0D93     		str	r3, [sp, #52]
 3590 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3591 0018 0C93     		str	r3, [sp, #48]
 3592 001a 6C46     		mov	r4, sp
 3593 001c 18AD     		add	r5, sp, #96
 3594 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3595 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3596 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3597 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3598 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3599 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3600 002e 14AB     		add	r3, sp, #80
 3601 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3602 0032 FFF7FEFF 		bl	B3M_Read
 3603              	.LVL191:
 523:Src/B3M.c     **** 	return 0;
 524:Src/B3M.c     **** }
 3604              		.loc 1 524 0
ARM GAS  /tmp/ccugrpsh.s 			page 72


 3605 0036 0020     		movs	r0, #0
 3606 0038 11B0     		add	sp, sp, #68
 3607              	.LCFI297:
 3608              		.cfi_def_cfa_offset 28
 3609              		@ sp needed
 3610 003a BDE83040 		pop	{r4, r5, lr}
 3611              	.LCFI298:
 3612              		.cfi_restore 14
 3613              		.cfi_restore 5
 3614              		.cfi_restore 4
 3615              		.cfi_def_cfa_offset 16
 3616 003e 04B0     		add	sp, sp, #16
 3617              	.LCFI299:
 3618              		.cfi_def_cfa_offset 0
 3619 0040 7047     		bx	lr
 3620              		.cfi_endproc
 3621              	.LFE173:
 3623 0042 00BF     		.section	.text.B3M_InputVoltageMax_Write,"ax",%progbits
 3624              		.align	2
 3625              		.global	B3M_InputVoltageMax_Write
 3626              		.thumb
 3627              		.thumb_func
 3629              	B3M_InputVoltageMax_Write:
 3630              	.LFB174:
 525:Src/B3M.c     **** 
 526:Src/B3M.c     **** uint8_t B3M_InputVoltageMax_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint16_t NEW_INPUT_VO
 527:Src/B3M.c     **** {
 3631              		.loc 1 527 0
 3632              		.cfi_startproc
 3633              		@ args = 72, pretend = 16, frame = 0
 3634              		@ frame_needed = 0, uses_anonymous_args = 0
 3635              	.LVL192:
 3636 0000 84B0     		sub	sp, sp, #16
 3637              	.LCFI300:
 3638              		.cfi_def_cfa_offset 16
 3639 0002 30B5     		push	{r4, r5, lr}
 3640              	.LCFI301:
 3641              		.cfi_def_cfa_offset 28
 3642              		.cfi_offset 4, -28
 3643              		.cfi_offset 5, -24
 3644              		.cfi_offset 14, -20
 3645 0004 91B0     		sub	sp, sp, #68
 3646              	.LCFI302:
 3647              		.cfi_def_cfa_offset 96
 3648 0006 14AC     		add	r4, sp, #80
 3649 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 528:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_INPUT_VOLTAGE_MAX, SYSTEM_INPUT_VOLTAGE_MAX);
 3650              		.loc 1 528 0
 3651 000c 1923     		movs	r3, #25
 3652 000e 0E93     		str	r3, [sp, #56]
 3653 0010 BDF89430 		ldrh	r3, [sp, #148]
 3654 0014 0D93     		str	r3, [sp, #52]
 3655 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3656 001a 0C93     		str	r3, [sp, #48]
 3657 001c 6C46     		mov	r4, sp
 3658 001e 18AD     		add	r5, sp, #96
 3659 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 73


 3660 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3661 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3662 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3663 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3664 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3665 0030 14AB     		add	r3, sp, #80
 3666 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3667 0034 FFF7FEFF 		bl	B3M_Write_2B
 3668              	.LVL193:
 529:Src/B3M.c     **** 	return 0;
 530:Src/B3M.c     **** }
 3669              		.loc 1 530 0
 3670 0038 0020     		movs	r0, #0
 3671 003a 11B0     		add	sp, sp, #68
 3672              	.LCFI303:
 3673              		.cfi_def_cfa_offset 28
 3674              		@ sp needed
 3675 003c BDE83040 		pop	{r4, r5, lr}
 3676              	.LCFI304:
 3677              		.cfi_restore 14
 3678              		.cfi_restore 5
 3679              		.cfi_restore 4
 3680              		.cfi_def_cfa_offset 16
 3681 0040 04B0     		add	sp, sp, #16
 3682              	.LCFI305:
 3683              		.cfi_def_cfa_offset 0
 3684 0042 7047     		bx	lr
 3685              		.cfi_endproc
 3686              	.LFE174:
 3688              		.section	.text.B3M_TorqueLimit_Read,"ax",%progbits
 3689              		.align	2
 3690              		.global	B3M_TorqueLimit_Read
 3691              		.thumb
 3692              		.thumb_func
 3694              	B3M_TorqueLimit_Read:
 3695              	.LFB175:
 531:Src/B3M.c     **** 
 532:Src/B3M.c     **** uint8_t B3M_TorqueLimit_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 533:Src/B3M.c     **** {
 3696              		.loc 1 533 0
 3697              		.cfi_startproc
 3698              		@ args = 68, pretend = 16, frame = 0
 3699              		@ frame_needed = 0, uses_anonymous_args = 0
 3700              	.LVL194:
 3701 0000 84B0     		sub	sp, sp, #16
 3702              	.LCFI306:
 3703              		.cfi_def_cfa_offset 16
 3704 0002 30B5     		push	{r4, r5, lr}
 3705              	.LCFI307:
 3706              		.cfi_def_cfa_offset 28
 3707              		.cfi_offset 4, -28
 3708              		.cfi_offset 5, -24
 3709              		.cfi_offset 14, -20
 3710 0004 91B0     		sub	sp, sp, #68
 3711              	.LCFI308:
 3712              		.cfi_def_cfa_offset 96
 3713 0006 14AC     		add	r4, sp, #80
ARM GAS  /tmp/ccugrpsh.s 			page 74


 3714 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 534:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_TORQUE_LIMIT, READ_LENGTH_1B);
 3715              		.loc 1 534 0
 3716 000c 0123     		movs	r3, #1
 3717 000e 0E93     		str	r3, [sp, #56]
 3718 0010 1B23     		movs	r3, #27
 3719 0012 0D93     		str	r3, [sp, #52]
 3720 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3721 0018 0C93     		str	r3, [sp, #48]
 3722 001a 6C46     		mov	r4, sp
 3723 001c 18AD     		add	r5, sp, #96
 3724 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3725 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3726 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3727 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3728 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3729 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3730 002e 14AB     		add	r3, sp, #80
 3731 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3732 0032 FFF7FEFF 		bl	B3M_Read
 3733              	.LVL195:
 535:Src/B3M.c     **** 	return 0;
 536:Src/B3M.c     **** }
 3734              		.loc 1 536 0
 3735 0036 0020     		movs	r0, #0
 3736 0038 11B0     		add	sp, sp, #68
 3737              	.LCFI309:
 3738              		.cfi_def_cfa_offset 28
 3739              		@ sp needed
 3740 003a BDE83040 		pop	{r4, r5, lr}
 3741              	.LCFI310:
 3742              		.cfi_restore 14
 3743              		.cfi_restore 5
 3744              		.cfi_restore 4
 3745              		.cfi_def_cfa_offset 16
 3746 003e 04B0     		add	sp, sp, #16
 3747              	.LCFI311:
 3748              		.cfi_def_cfa_offset 0
 3749 0040 7047     		bx	lr
 3750              		.cfi_endproc
 3751              	.LFE175:
 3753 0042 00BF     		.section	.text.B3M_TorqueLimit_Write,"ax",%progbits
 3754              		.align	2
 3755              		.global	B3M_TorqueLimit_Write
 3756              		.thumb
 3757              		.thumb_func
 3759              	B3M_TorqueLimit_Write:
 3760              	.LFB176:
 537:Src/B3M.c     **** 
 538:Src/B3M.c     **** uint8_t B3M_TorqueLimit_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_TORQUE_LIMIT)
 539:Src/B3M.c     **** {
 3761              		.loc 1 539 0
 3762              		.cfi_startproc
 3763              		@ args = 72, pretend = 16, frame = 0
 3764              		@ frame_needed = 0, uses_anonymous_args = 0
 3765              	.LVL196:
 3766 0000 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/ccugrpsh.s 			page 75


 3767              	.LCFI312:
 3768              		.cfi_def_cfa_offset 16
 3769 0002 30B5     		push	{r4, r5, lr}
 3770              	.LCFI313:
 3771              		.cfi_def_cfa_offset 28
 3772              		.cfi_offset 4, -28
 3773              		.cfi_offset 5, -24
 3774              		.cfi_offset 14, -20
 3775 0004 91B0     		sub	sp, sp, #68
 3776              	.LCFI314:
 3777              		.cfi_def_cfa_offset 96
 3778 0006 14AC     		add	r4, sp, #80
 3779 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 540:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, NEW_TORQUE_LIMIT, SYSTEM_TORQUE_LIMIT);
 3780              		.loc 1 540 0
 3781 000c 1B23     		movs	r3, #27
 3782 000e 0E93     		str	r3, [sp, #56]
 3783 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 3784 0014 0D93     		str	r3, [sp, #52]
 3785 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3786 001a 0C93     		str	r3, [sp, #48]
 3787 001c 6C46     		mov	r4, sp
 3788 001e 18AD     		add	r5, sp, #96
 3789 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3790 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3791 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3792 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3793 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3794 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3795 0030 14AB     		add	r3, sp, #80
 3796 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3797 0034 FFF7FEFF 		bl	B3M_Write_1B
 3798              	.LVL197:
 541:Src/B3M.c     **** 	return 0;
 542:Src/B3M.c     **** }
 3799              		.loc 1 542 0
 3800 0038 0020     		movs	r0, #0
 3801 003a 11B0     		add	sp, sp, #68
 3802              	.LCFI315:
 3803              		.cfi_def_cfa_offset 28
 3804              		@ sp needed
 3805 003c BDE83040 		pop	{r4, r5, lr}
 3806              	.LCFI316:
 3807              		.cfi_restore 14
 3808              		.cfi_restore 5
 3809              		.cfi_restore 4
 3810              		.cfi_def_cfa_offset 16
 3811 0040 04B0     		add	sp, sp, #16
 3812              	.LCFI317:
 3813              		.cfi_def_cfa_offset 0
 3814 0042 7047     		bx	lr
 3815              		.cfi_endproc
 3816              	.LFE176:
 3818              		.section	.text.B3M_DeadBandWidth_Read,"ax",%progbits
 3819              		.align	2
 3820              		.global	B3M_DeadBandWidth_Read
 3821              		.thumb
ARM GAS  /tmp/ccugrpsh.s 			page 76


 3822              		.thumb_func
 3824              	B3M_DeadBandWidth_Read:
 3825              	.LFB177:
 543:Src/B3M.c     **** 
 544:Src/B3M.c     **** uint8_t B3M_DeadBandWidth_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 545:Src/B3M.c     **** {
 3826              		.loc 1 545 0
 3827              		.cfi_startproc
 3828              		@ args = 68, pretend = 16, frame = 0
 3829              		@ frame_needed = 0, uses_anonymous_args = 0
 3830              	.LVL198:
 3831 0000 84B0     		sub	sp, sp, #16
 3832              	.LCFI318:
 3833              		.cfi_def_cfa_offset 16
 3834 0002 30B5     		push	{r4, r5, lr}
 3835              	.LCFI319:
 3836              		.cfi_def_cfa_offset 28
 3837              		.cfi_offset 4, -28
 3838              		.cfi_offset 5, -24
 3839              		.cfi_offset 14, -20
 3840 0004 91B0     		sub	sp, sp, #68
 3841              	.LCFI320:
 3842              		.cfi_def_cfa_offset 96
 3843 0006 14AC     		add	r4, sp, #80
 3844 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 546:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_DEADBAND_WIDTH, READ_LENGTH_2B);
 3845              		.loc 1 546 0
 3846 000c 0223     		movs	r3, #2
 3847 000e 0E93     		str	r3, [sp, #56]
 3848 0010 1C23     		movs	r3, #28
 3849 0012 0D93     		str	r3, [sp, #52]
 3850 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3851 0018 0C93     		str	r3, [sp, #48]
 3852 001a 6C46     		mov	r4, sp
 3853 001c 18AD     		add	r5, sp, #96
 3854 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3855 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3856 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3857 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3858 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3859 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3860 002e 14AB     		add	r3, sp, #80
 3861 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3862 0032 FFF7FEFF 		bl	B3M_Read
 3863              	.LVL199:
 547:Src/B3M.c     **** 	return 0;
 548:Src/B3M.c     **** }
 3864              		.loc 1 548 0
 3865 0036 0020     		movs	r0, #0
 3866 0038 11B0     		add	sp, sp, #68
 3867              	.LCFI321:
 3868              		.cfi_def_cfa_offset 28
 3869              		@ sp needed
 3870 003a BDE83040 		pop	{r4, r5, lr}
 3871              	.LCFI322:
 3872              		.cfi_restore 14
 3873              		.cfi_restore 5
ARM GAS  /tmp/ccugrpsh.s 			page 77


 3874              		.cfi_restore 4
 3875              		.cfi_def_cfa_offset 16
 3876 003e 04B0     		add	sp, sp, #16
 3877              	.LCFI323:
 3878              		.cfi_def_cfa_offset 0
 3879 0040 7047     		bx	lr
 3880              		.cfi_endproc
 3881              	.LFE177:
 3883 0042 00BF     		.section	.text.B3M_DeadBandWidth_Write,"ax",%progbits
 3884              		.align	2
 3885              		.global	B3M_DeadBandWidth_Write
 3886              		.thumb
 3887              		.thumb_func
 3889              	B3M_DeadBandWidth_Write:
 3890              	.LFB178:
 549:Src/B3M.c     **** 
 550:Src/B3M.c     **** uint8_t B3M_DeadBandWidth_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint16_t NEW_DEADBAND_W
 551:Src/B3M.c     **** {
 3891              		.loc 1 551 0
 3892              		.cfi_startproc
 3893              		@ args = 72, pretend = 16, frame = 0
 3894              		@ frame_needed = 0, uses_anonymous_args = 0
 3895              	.LVL200:
 3896 0000 84B0     		sub	sp, sp, #16
 3897              	.LCFI324:
 3898              		.cfi_def_cfa_offset 16
 3899 0002 30B5     		push	{r4, r5, lr}
 3900              	.LCFI325:
 3901              		.cfi_def_cfa_offset 28
 3902              		.cfi_offset 4, -28
 3903              		.cfi_offset 5, -24
 3904              		.cfi_offset 14, -20
 3905 0004 91B0     		sub	sp, sp, #68
 3906              	.LCFI326:
 3907              		.cfi_def_cfa_offset 96
 3908 0006 14AC     		add	r4, sp, #80
 3909 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 552:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_DEADBAND_WIDTH, SYSTEM_DEADBAND_WIDTH);
 3910              		.loc 1 552 0
 3911 000c 1C23     		movs	r3, #28
 3912 000e 0E93     		str	r3, [sp, #56]
 3913 0010 BDF89430 		ldrh	r3, [sp, #148]
 3914 0014 0D93     		str	r3, [sp, #52]
 3915 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3916 001a 0C93     		str	r3, [sp, #48]
 3917 001c 6C46     		mov	r4, sp
 3918 001e 18AD     		add	r5, sp, #96
 3919 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3920 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3921 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3922 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3923 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3924 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3925 0030 14AB     		add	r3, sp, #80
 3926 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3927 0034 FFF7FEFF 		bl	B3M_Write_2B
 3928              	.LVL201:
ARM GAS  /tmp/ccugrpsh.s 			page 78


 553:Src/B3M.c     **** 	return 0;
 554:Src/B3M.c     **** }
 3929              		.loc 1 554 0
 3930 0038 0020     		movs	r0, #0
 3931 003a 11B0     		add	sp, sp, #68
 3932              	.LCFI327:
 3933              		.cfi_def_cfa_offset 28
 3934              		@ sp needed
 3935 003c BDE83040 		pop	{r4, r5, lr}
 3936              	.LCFI328:
 3937              		.cfi_restore 14
 3938              		.cfi_restore 5
 3939              		.cfi_restore 4
 3940              		.cfi_def_cfa_offset 16
 3941 0040 04B0     		add	sp, sp, #16
 3942              	.LCFI329:
 3943              		.cfi_def_cfa_offset 0
 3944 0042 7047     		bx	lr
 3945              		.cfi_endproc
 3946              	.LFE178:
 3948              		.section	.text.B3M_MotorCWRatio_Read,"ax",%progbits
 3949              		.align	2
 3950              		.global	B3M_MotorCWRatio_Read
 3951              		.thumb
 3952              		.thumb_func
 3954              	B3M_MotorCWRatio_Read:
 3955              	.LFB179:
 555:Src/B3M.c     **** 
 556:Src/B3M.c     **** uint8_t B3M_MotorCWRatio_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 557:Src/B3M.c     **** {
 3956              		.loc 1 557 0
 3957              		.cfi_startproc
 3958              		@ args = 68, pretend = 16, frame = 0
 3959              		@ frame_needed = 0, uses_anonymous_args = 0
 3960              	.LVL202:
 3961 0000 84B0     		sub	sp, sp, #16
 3962              	.LCFI330:
 3963              		.cfi_def_cfa_offset 16
 3964 0002 30B5     		push	{r4, r5, lr}
 3965              	.LCFI331:
 3966              		.cfi_def_cfa_offset 28
 3967              		.cfi_offset 4, -28
 3968              		.cfi_offset 5, -24
 3969              		.cfi_offset 14, -20
 3970 0004 91B0     		sub	sp, sp, #68
 3971              	.LCFI332:
 3972              		.cfi_def_cfa_offset 96
 3973 0006 14AC     		add	r4, sp, #80
 3974 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 558:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_MOTOR_CW_RATIO, READ_LENGTH_1B);
 3975              		.loc 1 558 0
 3976 000c 0123     		movs	r3, #1
 3977 000e 0E93     		str	r3, [sp, #56]
 3978 0010 2223     		movs	r3, #34
 3979 0012 0D93     		str	r3, [sp, #52]
 3980 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 3981 0018 0C93     		str	r3, [sp, #48]
ARM GAS  /tmp/ccugrpsh.s 			page 79


 3982 001a 6C46     		mov	r4, sp
 3983 001c 18AD     		add	r5, sp, #96
 3984 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3985 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3986 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3987 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3988 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3989 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3990 002e 14AB     		add	r3, sp, #80
 3991 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3992 0032 FFF7FEFF 		bl	B3M_Read
 3993              	.LVL203:
 559:Src/B3M.c     **** 	return 0;
 560:Src/B3M.c     **** }
 3994              		.loc 1 560 0
 3995 0036 0020     		movs	r0, #0
 3996 0038 11B0     		add	sp, sp, #68
 3997              	.LCFI333:
 3998              		.cfi_def_cfa_offset 28
 3999              		@ sp needed
 4000 003a BDE83040 		pop	{r4, r5, lr}
 4001              	.LCFI334:
 4002              		.cfi_restore 14
 4003              		.cfi_restore 5
 4004              		.cfi_restore 4
 4005              		.cfi_def_cfa_offset 16
 4006 003e 04B0     		add	sp, sp, #16
 4007              	.LCFI335:
 4008              		.cfi_def_cfa_offset 0
 4009 0040 7047     		bx	lr
 4010              		.cfi_endproc
 4011              	.LFE179:
 4013 0042 00BF     		.section	.text.B3M_MotorCWRatio_Write,"ax",%progbits
 4014              		.align	2
 4015              		.global	B3M_MotorCWRatio_Write
 4016              		.thumb
 4017              		.thumb_func
 4019              	B3M_MotorCWRatio_Write:
 4020              	.LFB180:
 561:Src/B3M.c     **** 
 562:Src/B3M.c     **** uint8_t B3M_MotorCWRatio_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_MOTOR_CW_RAT
 563:Src/B3M.c     **** {
 4021              		.loc 1 563 0
 4022              		.cfi_startproc
 4023              		@ args = 72, pretend = 16, frame = 0
 4024              		@ frame_needed = 0, uses_anonymous_args = 0
 4025              	.LVL204:
 4026 0000 84B0     		sub	sp, sp, #16
 4027              	.LCFI336:
 4028              		.cfi_def_cfa_offset 16
 4029 0002 30B5     		push	{r4, r5, lr}
 4030              	.LCFI337:
 4031              		.cfi_def_cfa_offset 28
 4032              		.cfi_offset 4, -28
 4033              		.cfi_offset 5, -24
 4034              		.cfi_offset 14, -20
 4035 0004 91B0     		sub	sp, sp, #68
ARM GAS  /tmp/ccugrpsh.s 			page 80


 4036              	.LCFI338:
 4037              		.cfi_def_cfa_offset 96
 4038 0006 14AC     		add	r4, sp, #80
 4039 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 564:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, NEW_MOTOR_CW_RATIO, SYSTEM_MOTOR_CW_RATIO);
 4040              		.loc 1 564 0
 4041 000c 2223     		movs	r3, #34
 4042 000e 0E93     		str	r3, [sp, #56]
 4043 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 4044 0014 0D93     		str	r3, [sp, #52]
 4045 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4046 001a 0C93     		str	r3, [sp, #48]
 4047 001c 6C46     		mov	r4, sp
 4048 001e 18AD     		add	r5, sp, #96
 4049 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4050 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4051 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4052 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4053 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4054 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4055 0030 14AB     		add	r3, sp, #80
 4056 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4057 0034 FFF7FEFF 		bl	B3M_Write_1B
 4058              	.LVL205:
 565:Src/B3M.c     **** 	return 0;
 566:Src/B3M.c     **** }
 4059              		.loc 1 566 0
 4060 0038 0020     		movs	r0, #0
 4061 003a 11B0     		add	sp, sp, #68
 4062              	.LCFI339:
 4063              		.cfi_def_cfa_offset 28
 4064              		@ sp needed
 4065 003c BDE83040 		pop	{r4, r5, lr}
 4066              	.LCFI340:
 4067              		.cfi_restore 14
 4068              		.cfi_restore 5
 4069              		.cfi_restore 4
 4070              		.cfi_def_cfa_offset 16
 4071 0040 04B0     		add	sp, sp, #16
 4072              	.LCFI341:
 4073              		.cfi_def_cfa_offset 0
 4074 0042 7047     		bx	lr
 4075              		.cfi_endproc
 4076              	.LFE180:
 4078              		.section	.text.B3M_MotorCCWRatio_Read,"ax",%progbits
 4079              		.align	2
 4080              		.global	B3M_MotorCCWRatio_Read
 4081              		.thumb
 4082              		.thumb_func
 4084              	B3M_MotorCCWRatio_Read:
 4085              	.LFB181:
 567:Src/B3M.c     **** 
 568:Src/B3M.c     **** uint8_t B3M_MotorCCWRatio_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 569:Src/B3M.c     **** {
 4086              		.loc 1 569 0
 4087              		.cfi_startproc
 4088              		@ args = 68, pretend = 16, frame = 0
ARM GAS  /tmp/ccugrpsh.s 			page 81


 4089              		@ frame_needed = 0, uses_anonymous_args = 0
 4090              	.LVL206:
 4091 0000 84B0     		sub	sp, sp, #16
 4092              	.LCFI342:
 4093              		.cfi_def_cfa_offset 16
 4094 0002 30B5     		push	{r4, r5, lr}
 4095              	.LCFI343:
 4096              		.cfi_def_cfa_offset 28
 4097              		.cfi_offset 4, -28
 4098              		.cfi_offset 5, -24
 4099              		.cfi_offset 14, -20
 4100 0004 91B0     		sub	sp, sp, #68
 4101              	.LCFI344:
 4102              		.cfi_def_cfa_offset 96
 4103 0006 14AC     		add	r4, sp, #80
 4104 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 570:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SYSTEM_MOTOR_CCW_RATIO, READ_LENGTH_1B);
 4105              		.loc 1 570 0
 4106 000c 0123     		movs	r3, #1
 4107 000e 0E93     		str	r3, [sp, #56]
 4108 0010 2323     		movs	r3, #35
 4109 0012 0D93     		str	r3, [sp, #52]
 4110 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4111 0018 0C93     		str	r3, [sp, #48]
 4112 001a 6C46     		mov	r4, sp
 4113 001c 18AD     		add	r5, sp, #96
 4114 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4115 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4116 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4117 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4118 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4119 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4120 002e 14AB     		add	r3, sp, #80
 4121 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4122 0032 FFF7FEFF 		bl	B3M_Read
 4123              	.LVL207:
 571:Src/B3M.c     **** 	return 0;
 572:Src/B3M.c     **** }
 4124              		.loc 1 572 0
 4125 0036 0020     		movs	r0, #0
 4126 0038 11B0     		add	sp, sp, #68
 4127              	.LCFI345:
 4128              		.cfi_def_cfa_offset 28
 4129              		@ sp needed
 4130 003a BDE83040 		pop	{r4, r5, lr}
 4131              	.LCFI346:
 4132              		.cfi_restore 14
 4133              		.cfi_restore 5
 4134              		.cfi_restore 4
 4135              		.cfi_def_cfa_offset 16
 4136 003e 04B0     		add	sp, sp, #16
 4137              	.LCFI347:
 4138              		.cfi_def_cfa_offset 0
 4139 0040 7047     		bx	lr
 4140              		.cfi_endproc
 4141              	.LFE181:
 4143 0042 00BF     		.section	.text.B3M_MotorCCWRatio_Write,"ax",%progbits
ARM GAS  /tmp/ccugrpsh.s 			page 82


 4144              		.align	2
 4145              		.global	B3M_MotorCCWRatio_Write
 4146              		.thumb
 4147              		.thumb_func
 4149              	B3M_MotorCCWRatio_Write:
 4150              	.LFB182:
 573:Src/B3M.c     **** 
 574:Src/B3M.c     **** uint8_t B3M_MotorCCWRatio_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_MOTOR_CCW_R
 575:Src/B3M.c     **** {
 4151              		.loc 1 575 0
 4152              		.cfi_startproc
 4153              		@ args = 72, pretend = 16, frame = 0
 4154              		@ frame_needed = 0, uses_anonymous_args = 0
 4155              	.LVL208:
 4156 0000 84B0     		sub	sp, sp, #16
 4157              	.LCFI348:
 4158              		.cfi_def_cfa_offset 16
 4159 0002 30B5     		push	{r4, r5, lr}
 4160              	.LCFI349:
 4161              		.cfi_def_cfa_offset 28
 4162              		.cfi_offset 4, -28
 4163              		.cfi_offset 5, -24
 4164              		.cfi_offset 14, -20
 4165 0004 91B0     		sub	sp, sp, #68
 4166              	.LCFI350:
 4167              		.cfi_def_cfa_offset 96
 4168 0006 14AC     		add	r4, sp, #80
 4169 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 576:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, NEW_MOTOR_CCW_RATIO, SYSTEM_MOTOR_CCW_RATIO);
 4170              		.loc 1 576 0
 4171 000c 2323     		movs	r3, #35
 4172 000e 0E93     		str	r3, [sp, #56]
 4173 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 4174 0014 0D93     		str	r3, [sp, #52]
 4175 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4176 001a 0C93     		str	r3, [sp, #48]
 4177 001c 6C46     		mov	r4, sp
 4178 001e 18AD     		add	r5, sp, #96
 4179 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4180 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4181 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4182 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4183 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4184 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4185 0030 14AB     		add	r3, sp, #80
 4186 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4187 0034 FFF7FEFF 		bl	B3M_Write_1B
 4188              	.LVL209:
 577:Src/B3M.c     **** 	return 0;
 578:Src/B3M.c     **** }
 4189              		.loc 1 578 0
 4190 0038 0020     		movs	r0, #0
 4191 003a 11B0     		add	sp, sp, #68
 4192              	.LCFI351:
 4193              		.cfi_def_cfa_offset 28
 4194              		@ sp needed
 4195 003c BDE83040 		pop	{r4, r5, lr}
ARM GAS  /tmp/ccugrpsh.s 			page 83


 4196              	.LCFI352:
 4197              		.cfi_restore 14
 4198              		.cfi_restore 5
 4199              		.cfi_restore 4
 4200              		.cfi_def_cfa_offset 16
 4201 0040 04B0     		add	sp, sp, #16
 4202              	.LCFI353:
 4203              		.cfi_def_cfa_offset 0
 4204 0042 7047     		bx	lr
 4205              		.cfi_endproc
 4206              	.LFE182:
 4208              		.section	.text.B3M_ServoOption_Read,"ax",%progbits
 4209              		.align	2
 4210              		.global	B3M_ServoOption_Read
 4211              		.thumb
 4212              		.thumb_func
 4214              	B3M_ServoOption_Read:
 4215              	.LFB183:
 579:Src/B3M.c     **** 
 580:Src/B3M.c     **** 
 581:Src/B3M.c     **** /** Servo Parameter Area Address'
 582:Src/B3M.c     **** */
 583:Src/B3M.c     **** uint8_t B3M_ServoOption_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 584:Src/B3M.c     **** {
 4216              		.loc 1 584 0
 4217              		.cfi_startproc
 4218              		@ args = 68, pretend = 16, frame = 0
 4219              		@ frame_needed = 0, uses_anonymous_args = 0
 4220              	.LVL210:
 4221 0000 84B0     		sub	sp, sp, #16
 4222              	.LCFI354:
 4223              		.cfi_def_cfa_offset 16
 4224 0002 30B5     		push	{r4, r5, lr}
 4225              	.LCFI355:
 4226              		.cfi_def_cfa_offset 28
 4227              		.cfi_offset 4, -28
 4228              		.cfi_offset 5, -24
 4229              		.cfi_offset 14, -20
 4230 0004 91B0     		sub	sp, sp, #68
 4231              	.LCFI356:
 4232              		.cfi_def_cfa_offset 96
 4233 0006 14AC     		add	r4, sp, #80
 4234 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 585:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, SERVO_SERVO_OPTION, READ_LENGTH_2B);
 4235              		.loc 1 585 0
 4236 000c 0223     		movs	r3, #2
 4237 000e 0E93     		str	r3, [sp, #56]
 4238 0010 2723     		movs	r3, #39
 4239 0012 0D93     		str	r3, [sp, #52]
 4240 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4241 0018 0C93     		str	r3, [sp, #48]
 4242 001a 6C46     		mov	r4, sp
 4243 001c 18AD     		add	r5, sp, #96
 4244 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4245 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4246 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4247 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 84


 4248 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4249 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4250 002e 14AB     		add	r3, sp, #80
 4251 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4252 0032 FFF7FEFF 		bl	B3M_Read
 4253              	.LVL211:
 586:Src/B3M.c     **** 	return 0;
 587:Src/B3M.c     **** }
 4254              		.loc 1 587 0
 4255 0036 0020     		movs	r0, #0
 4256 0038 11B0     		add	sp, sp, #68
 4257              	.LCFI357:
 4258              		.cfi_def_cfa_offset 28
 4259              		@ sp needed
 4260 003a BDE83040 		pop	{r4, r5, lr}
 4261              	.LCFI358:
 4262              		.cfi_restore 14
 4263              		.cfi_restore 5
 4264              		.cfi_restore 4
 4265              		.cfi_def_cfa_offset 16
 4266 003e 04B0     		add	sp, sp, #16
 4267              	.LCFI359:
 4268              		.cfi_def_cfa_offset 0
 4269 0040 7047     		bx	lr
 4270              		.cfi_endproc
 4271              	.LFE183:
 4273 0042 00BF     		.section	.text.B3M_ControlLow_Read,"ax",%progbits
 4274              		.align	2
 4275              		.global	B3M_ControlLow_Read
 4276              		.thumb
 4277              		.thumb_func
 4279              	B3M_ControlLow_Read:
 4280              	.LFB184:
 588:Src/B3M.c     **** 
 589:Src/B3M.c     **** //uint8_t B3M_ServoOption_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID,  uint8_t NEW_SERVO_OPTI
 590:Src/B3M.c     **** //{
 591:Src/B3M.c     **** //	B3M_Write_2B(huart, SERVO_ID, NEW_SERVO_OPTION, SERVO_SERVO_OPTION);
 592:Src/B3M.c     **** //}
 593:Src/B3M.c     **** //
 594:Src/B3M.c     **** //uint8_t B3M_ServoMode_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 595:Src/B3M.c     **** //uint8_t B3M_ServoMode_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID,  uint8_t NEW_SERVO_MODE);
 596:Src/B3M.c     **** //uint8_t B3M_TorqueOn_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 597:Src/B3M.c     **** //uint8_t B3M_TorqueOn_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID,  uint8_t NEW_TORQUE_ON);
 598:Src/B3M.c     **** //uint8_t B3M_RunMode_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 599:Src/B3M.c     **** //uint8_t B3M_RunMode_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID,  uint8_t NEW_RUN_MODE);
 600:Src/B3M.c     **** //uint8_t B3M_DesiredPosition_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 601:Src/B3M.c     **** //uint8_t B3M_DesiredPosition_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID,  uint8_t NEW_DESIRE
 602:Src/B3M.c     **** //uint8_t B3M_CurrentPosition_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 603:Src/B3M.c     **** //uint8_t B3M_PreviousPosition_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 604:Src/B3M.c     **** //uint8_t B3M_DisiredVelocity_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 605:Src/B3M.c     **** //uint8_t B3M_DisiredVelocity_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID,  uint8_t NEW_DESIRE
 606:Src/B3M.c     **** //uint8_t B3M_CurrentVelocity_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 607:Src/B3M.c     **** //uint8_t B3M_PreviousVelocity_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 608:Src/B3M.c     **** //uint8_t B3M_DesiredTime_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 609:Src/B3M.c     **** //uint8_t B3M_DesiredTime_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID,  uint8_t NEW_DESIRED_TI
 610:Src/B3M.c     **** //uint8_t B3M_RunningTime_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 611:Src/B3M.c     **** //uint8_t B3M_WorkingTime_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID);
ARM GAS  /tmp/ccugrpsh.s 			page 85


 612:Src/B3M.c     **** //uint8_t B3M_DesiredTorque_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 613:Src/B3M.c     **** //uint8_t B3M_DesiredTorque_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID,  uint8_t NEW_DESIRED_
 614:Src/B3M.c     **** //uint8_t B3M_SystemClock_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 615:Src/B3M.c     **** //uint8_t B3M_SamplingTime_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 616:Src/B3M.c     **** //uint8_t B3M_MCUTemp_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 617:Src/B3M.c     **** //uint8_t B3M_MotorTemp_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 618:Src/B3M.c     **** //uint8_t B3M_InputVoltage_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 619:Src/B3M.c     **** //uint8_t B3M_PWMDuty_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 620:Src/B3M.c     **** //uint8_t B3M_PWMDuty_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID,  uint8_t NEW_PWM_DUTY);
 621:Src/B3M.c     **** //uint8_t B3M_PWMFrequency_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 622:Src/B3M.c     **** //uint8_t B3M_PWMFrequency_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID,  uint8_t NEW_PWM_FREQU
 623:Src/B3M.c     **** //uint8_t B3M_EncoderValue_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 624:Src/B3M.c     **** //uint8_t B3M_EncoderCount_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 625:Src/B3M.c     **** //uint8_t B3M_EncoderCount_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID,  uint8_t NEW_ENCODER_C
 626:Src/B3M.c     **** //uint8_t B3M_HallICState_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID);
 627:Src/B3M.c     **** 
 628:Src/B3M.c     **** /** Control Parameter Area Address'
 629:Src/B3M.c     **** */
 630:Src/B3M.c     **** uint8_t B3M_ControlLow_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 631:Src/B3M.c     **** {
 4281              		.loc 1 631 0
 4282              		.cfi_startproc
 4283              		@ args = 68, pretend = 16, frame = 0
 4284              		@ frame_needed = 0, uses_anonymous_args = 0
 4285              	.LVL212:
 4286 0000 84B0     		sub	sp, sp, #16
 4287              	.LCFI360:
 4288              		.cfi_def_cfa_offset 16
 4289 0002 30B5     		push	{r4, r5, lr}
 4290              	.LCFI361:
 4291              		.cfi_def_cfa_offset 28
 4292              		.cfi_offset 4, -28
 4293              		.cfi_offset 5, -24
 4294              		.cfi_offset 14, -20
 4295 0004 91B0     		sub	sp, sp, #68
 4296              	.LCFI362:
 4297              		.cfi_def_cfa_offset 96
 4298 0006 14AC     		add	r4, sp, #80
 4299 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 632:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_CONTROL_LOW, READ_LENGTH_2B);
 4300              		.loc 1 632 0
 4301 000c 0223     		movs	r3, #2
 4302 000e 0E93     		str	r3, [sp, #56]
 4303 0010 5C23     		movs	r3, #92
 4304 0012 0D93     		str	r3, [sp, #52]
 4305 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4306 0018 0C93     		str	r3, [sp, #48]
 4307 001a 6C46     		mov	r4, sp
 4308 001c 18AD     		add	r5, sp, #96
 4309 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4310 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4311 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4312 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4313 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4314 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4315 002e 14AB     		add	r3, sp, #80
 4316 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 86


 4317 0032 FFF7FEFF 		bl	B3M_Read
 4318              	.LVL213:
 633:Src/B3M.c     **** 	return 0;
 634:Src/B3M.c     **** }
 4319              		.loc 1 634 0
 4320 0036 0020     		movs	r0, #0
 4321 0038 11B0     		add	sp, sp, #68
 4322              	.LCFI363:
 4323              		.cfi_def_cfa_offset 28
 4324              		@ sp needed
 4325 003a BDE83040 		pop	{r4, r5, lr}
 4326              	.LCFI364:
 4327              		.cfi_restore 14
 4328              		.cfi_restore 5
 4329              		.cfi_restore 4
 4330              		.cfi_def_cfa_offset 16
 4331 003e 04B0     		add	sp, sp, #16
 4332              	.LCFI365:
 4333              		.cfi_def_cfa_offset 0
 4334 0040 7047     		bx	lr
 4335              		.cfi_endproc
 4336              	.LFE184:
 4338 0042 00BF     		.section	.text.B3M_ControlLow_Write,"ax",%progbits
 4339              		.align	2
 4340              		.global	B3M_ControlLow_Write
 4341              		.thumb
 4342              		.thumb_func
 4344              	B3M_ControlLow_Write:
 4345              	.LFB185:
 635:Src/B3M.c     **** 
 636:Src/B3M.c     **** uint8_t B3M_ControlLow_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_CONTROL_LOW)
 637:Src/B3M.c     **** {
 4346              		.loc 1 637 0
 4347              		.cfi_startproc
 4348              		@ args = 72, pretend = 16, frame = 0
 4349              		@ frame_needed = 0, uses_anonymous_args = 0
 4350              	.LVL214:
 4351 0000 84B0     		sub	sp, sp, #16
 4352              	.LCFI366:
 4353              		.cfi_def_cfa_offset 16
 4354 0002 30B5     		push	{r4, r5, lr}
 4355              	.LCFI367:
 4356              		.cfi_def_cfa_offset 28
 4357              		.cfi_offset 4, -28
 4358              		.cfi_offset 5, -24
 4359              		.cfi_offset 14, -20
 4360 0004 91B0     		sub	sp, sp, #68
 4361              	.LCFI368:
 4362              		.cfi_def_cfa_offset 96
 4363 0006 14AC     		add	r4, sp, #80
 4364 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 638:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_CONTROL_LOW, CONTROL_CONTROL_LOW);
 4365              		.loc 1 638 0
 4366 000c 5C23     		movs	r3, #92
 4367 000e 0E93     		str	r3, [sp, #56]
 4368 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 4369 0014 0D93     		str	r3, [sp, #52]
ARM GAS  /tmp/ccugrpsh.s 			page 87


 4370 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4371 001a 0C93     		str	r3, [sp, #48]
 4372 001c 6C46     		mov	r4, sp
 4373 001e 18AD     		add	r5, sp, #96
 4374 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4375 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4376 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4377 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4378 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4379 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4380 0030 14AB     		add	r3, sp, #80
 4381 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4382 0034 FFF7FEFF 		bl	B3M_Write_2B
 4383              	.LVL215:
 639:Src/B3M.c     **** 	return 0;
 640:Src/B3M.c     **** }
 4384              		.loc 1 640 0
 4385 0038 0020     		movs	r0, #0
 4386 003a 11B0     		add	sp, sp, #68
 4387              	.LCFI369:
 4388              		.cfi_def_cfa_offset 28
 4389              		@ sp needed
 4390 003c BDE83040 		pop	{r4, r5, lr}
 4391              	.LCFI370:
 4392              		.cfi_restore 14
 4393              		.cfi_restore 5
 4394              		.cfi_restore 4
 4395              		.cfi_def_cfa_offset 16
 4396 0040 04B0     		add	sp, sp, #16
 4397              	.LCFI371:
 4398              		.cfi_def_cfa_offset 0
 4399 0042 7047     		bx	lr
 4400              		.cfi_endproc
 4401              	.LFE185:
 4403              		.section	.text.B3M_GainPresetNO_Read,"ax",%progbits
 4404              		.align	2
 4405              		.global	B3M_GainPresetNO_Read
 4406              		.thumb
 4407              		.thumb_func
 4409              	B3M_GainPresetNO_Read:
 4410              	.LFB186:
 641:Src/B3M.c     **** 
 642:Src/B3M.c     **** uint8_t B3M_GainPresetNO_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 643:Src/B3M.c     **** {
 4411              		.loc 1 643 0
 4412              		.cfi_startproc
 4413              		@ args = 68, pretend = 16, frame = 0
 4414              		@ frame_needed = 0, uses_anonymous_args = 0
 4415              	.LVL216:
 4416 0000 84B0     		sub	sp, sp, #16
 4417              	.LCFI372:
 4418              		.cfi_def_cfa_offset 16
 4419 0002 30B5     		push	{r4, r5, lr}
 4420              	.LCFI373:
 4421              		.cfi_def_cfa_offset 28
 4422              		.cfi_offset 4, -28
 4423              		.cfi_offset 5, -24
ARM GAS  /tmp/ccugrpsh.s 			page 88


 4424              		.cfi_offset 14, -20
 4425 0004 91B0     		sub	sp, sp, #68
 4426              	.LCFI374:
 4427              		.cfi_def_cfa_offset 96
 4428 0006 14AC     		add	r4, sp, #80
 4429 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 644:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_GAIN_PRESETNO, READ_LENGTH_1B);
 4430              		.loc 1 644 0
 4431 000c 0123     		movs	r3, #1
 4432 000e 0E93     		str	r3, [sp, #56]
 4433 0010 5C23     		movs	r3, #92
 4434 0012 0D93     		str	r3, [sp, #52]
 4435 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4436 0018 0C93     		str	r3, [sp, #48]
 4437 001a 6C46     		mov	r4, sp
 4438 001c 18AD     		add	r5, sp, #96
 4439 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4440 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4441 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4442 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4443 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4444 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4445 002e 14AB     		add	r3, sp, #80
 4446 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4447 0032 FFF7FEFF 		bl	B3M_Read
 4448              	.LVL217:
 645:Src/B3M.c     **** 	return 0;
 646:Src/B3M.c     **** }
 4449              		.loc 1 646 0
 4450 0036 0020     		movs	r0, #0
 4451 0038 11B0     		add	sp, sp, #68
 4452              	.LCFI375:
 4453              		.cfi_def_cfa_offset 28
 4454              		@ sp needed
 4455 003a BDE83040 		pop	{r4, r5, lr}
 4456              	.LCFI376:
 4457              		.cfi_restore 14
 4458              		.cfi_restore 5
 4459              		.cfi_restore 4
 4460              		.cfi_def_cfa_offset 16
 4461 003e 04B0     		add	sp, sp, #16
 4462              	.LCFI377:
 4463              		.cfi_def_cfa_offset 0
 4464 0040 7047     		bx	lr
 4465              		.cfi_endproc
 4466              	.LFE186:
 4468 0042 00BF     		.section	.text.B3M_GainPresetNO_Write,"ax",%progbits
 4469              		.align	2
 4470              		.global	B3M_GainPresetNO_Write
 4471              		.thumb
 4472              		.thumb_func
 4474              	B3M_GainPresetNO_Write:
 4475              	.LFB187:
 647:Src/B3M.c     **** 
 648:Src/B3M.c     **** uint8_t B3M_GainPresetNO_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_GAIN_PRESETN
 649:Src/B3M.c     **** {
 4476              		.loc 1 649 0
ARM GAS  /tmp/ccugrpsh.s 			page 89


 4477              		.cfi_startproc
 4478              		@ args = 72, pretend = 16, frame = 0
 4479              		@ frame_needed = 0, uses_anonymous_args = 0
 4480              	.LVL218:
 4481 0000 84B0     		sub	sp, sp, #16
 4482              	.LCFI378:
 4483              		.cfi_def_cfa_offset 16
 4484 0002 30B5     		push	{r4, r5, lr}
 4485              	.LCFI379:
 4486              		.cfi_def_cfa_offset 28
 4487              		.cfi_offset 4, -28
 4488              		.cfi_offset 5, -24
 4489              		.cfi_offset 14, -20
 4490 0004 91B0     		sub	sp, sp, #68
 4491              	.LCFI380:
 4492              		.cfi_def_cfa_offset 96
 4493 0006 14AC     		add	r4, sp, #80
 4494 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 650:Src/B3M.c     **** 	B3M_Write_1B(huart, SERVO_ID, NEW_GAIN_PRESETNO, CONTROL_GAIN_PRESETNO);
 4495              		.loc 1 650 0
 4496 000c 5C23     		movs	r3, #92
 4497 000e 0E93     		str	r3, [sp, #56]
 4498 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 4499 0014 0D93     		str	r3, [sp, #52]
 4500 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4501 001a 0C93     		str	r3, [sp, #48]
 4502 001c 6C46     		mov	r4, sp
 4503 001e 18AD     		add	r5, sp, #96
 4504 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4505 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4506 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4507 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4508 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4509 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4510 0030 14AB     		add	r3, sp, #80
 4511 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4512 0034 FFF7FEFF 		bl	B3M_Write_1B
 4513              	.LVL219:
 651:Src/B3M.c     **** 	return 0;
 652:Src/B3M.c     **** }
 4514              		.loc 1 652 0
 4515 0038 0020     		movs	r0, #0
 4516 003a 11B0     		add	sp, sp, #68
 4517              	.LCFI381:
 4518              		.cfi_def_cfa_offset 28
 4519              		@ sp needed
 4520 003c BDE83040 		pop	{r4, r5, lr}
 4521              	.LCFI382:
 4522              		.cfi_restore 14
 4523              		.cfi_restore 5
 4524              		.cfi_restore 4
 4525              		.cfi_def_cfa_offset 16
 4526 0040 04B0     		add	sp, sp, #16
 4527              	.LCFI383:
 4528              		.cfi_def_cfa_offset 0
 4529 0042 7047     		bx	lr
 4530              		.cfi_endproc
ARM GAS  /tmp/ccugrpsh.s 			page 90


 4531              	.LFE187:
 4533              		.section	.text.B3M_Type_ReadOnly,"ax",%progbits
 4534              		.align	2
 4535              		.global	B3M_Type_ReadOnly
 4536              		.thumb
 4537              		.thumb_func
 4539              	B3M_Type_ReadOnly:
 4540              	.LFB188:
 653:Src/B3M.c     **** 
 654:Src/B3M.c     **** uint8_t B3M_Type_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 655:Src/B3M.c     **** {
 4541              		.loc 1 655 0
 4542              		.cfi_startproc
 4543              		@ args = 68, pretend = 16, frame = 0
 4544              		@ frame_needed = 0, uses_anonymous_args = 0
 4545              	.LVL220:
 4546 0000 84B0     		sub	sp, sp, #16
 4547              	.LCFI384:
 4548              		.cfi_def_cfa_offset 16
 4549 0002 30B5     		push	{r4, r5, lr}
 4550              	.LCFI385:
 4551              		.cfi_def_cfa_offset 28
 4552              		.cfi_offset 4, -28
 4553              		.cfi_offset 5, -24
 4554              		.cfi_offset 14, -20
 4555 0004 91B0     		sub	sp, sp, #68
 4556              	.LCFI386:
 4557              		.cfi_def_cfa_offset 96
 4558 0006 14AC     		add	r4, sp, #80
 4559 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 656:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_TYPE, READ_LENGTH_1B);
 4560              		.loc 1 656 0
 4561 000c 0123     		movs	r3, #1
 4562 000e 0E93     		str	r3, [sp, #56]
 4563 0010 5D23     		movs	r3, #93
 4564 0012 0D93     		str	r3, [sp, #52]
 4565 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4566 0018 0C93     		str	r3, [sp, #48]
 4567 001a 6C46     		mov	r4, sp
 4568 001c 18AD     		add	r5, sp, #96
 4569 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4570 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4571 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4572 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4573 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4574 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4575 002e 14AB     		add	r3, sp, #80
 4576 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4577 0032 FFF7FEFF 		bl	B3M_Read
 4578              	.LVL221:
 657:Src/B3M.c     **** 	return 0;
 658:Src/B3M.c     **** }
 4579              		.loc 1 658 0
 4580 0036 0020     		movs	r0, #0
 4581 0038 11B0     		add	sp, sp, #68
 4582              	.LCFI387:
 4583              		.cfi_def_cfa_offset 28
ARM GAS  /tmp/ccugrpsh.s 			page 91


 4584              		@ sp needed
 4585 003a BDE83040 		pop	{r4, r5, lr}
 4586              	.LCFI388:
 4587              		.cfi_restore 14
 4588              		.cfi_restore 5
 4589              		.cfi_restore 4
 4590              		.cfi_def_cfa_offset 16
 4591 003e 04B0     		add	sp, sp, #16
 4592              	.LCFI389:
 4593              		.cfi_def_cfa_offset 0
 4594 0040 7047     		bx	lr
 4595              		.cfi_endproc
 4596              	.LFE188:
 4598 0042 00BF     		.section	.text.B3M_KP0_Read,"ax",%progbits
 4599              		.align	2
 4600              		.global	B3M_KP0_Read
 4601              		.thumb
 4602              		.thumb_func
 4604              	B3M_KP0_Read:
 4605              	.LFB189:
 659:Src/B3M.c     **** 
 660:Src/B3M.c     **** uint8_t B3M_KP0_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 661:Src/B3M.c     **** {
 4606              		.loc 1 661 0
 4607              		.cfi_startproc
 4608              		@ args = 68, pretend = 16, frame = 0
 4609              		@ frame_needed = 0, uses_anonymous_args = 0
 4610              	.LVL222:
 4611 0000 84B0     		sub	sp, sp, #16
 4612              	.LCFI390:
 4613              		.cfi_def_cfa_offset 16
 4614 0002 30B5     		push	{r4, r5, lr}
 4615              	.LCFI391:
 4616              		.cfi_def_cfa_offset 28
 4617              		.cfi_offset 4, -28
 4618              		.cfi_offset 5, -24
 4619              		.cfi_offset 14, -20
 4620 0004 91B0     		sub	sp, sp, #68
 4621              	.LCFI392:
 4622              		.cfi_def_cfa_offset 96
 4623 0006 14AC     		add	r4, sp, #80
 4624 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 662:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_KP0, READ_LENGTH_4B);
 4625              		.loc 1 662 0
 4626 000c 0423     		movs	r3, #4
 4627 000e 0E93     		str	r3, [sp, #56]
 4628 0010 5E23     		movs	r3, #94
 4629 0012 0D93     		str	r3, [sp, #52]
 4630 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4631 0018 0C93     		str	r3, [sp, #48]
 4632 001a 6C46     		mov	r4, sp
 4633 001c 18AD     		add	r5, sp, #96
 4634 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4635 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4636 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4637 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4638 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 92


 4639 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4640 002e 14AB     		add	r3, sp, #80
 4641 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4642 0032 FFF7FEFF 		bl	B3M_Read
 4643              	.LVL223:
 663:Src/B3M.c     **** 	return 0;
 664:Src/B3M.c     **** }
 4644              		.loc 1 664 0
 4645 0036 0020     		movs	r0, #0
 4646 0038 11B0     		add	sp, sp, #68
 4647              	.LCFI393:
 4648              		.cfi_def_cfa_offset 28
 4649              		@ sp needed
 4650 003a BDE83040 		pop	{r4, r5, lr}
 4651              	.LCFI394:
 4652              		.cfi_restore 14
 4653              		.cfi_restore 5
 4654              		.cfi_restore 4
 4655              		.cfi_def_cfa_offset 16
 4656 003e 04B0     		add	sp, sp, #16
 4657              	.LCFI395:
 4658              		.cfi_def_cfa_offset 0
 4659 0040 7047     		bx	lr
 4660              		.cfi_endproc
 4661              	.LFE189:
 4663 0042 00BF     		.section	.text.B3M_KP0_Write,"ax",%progbits
 4664              		.align	2
 4665              		.global	B3M_KP0_Write
 4666              		.thumb
 4667              		.thumb_func
 4669              	B3M_KP0_Write:
 4670              	.LFB190:
 665:Src/B3M.c     **** 
 666:Src/B3M.c     **** uint8_t B3M_KP0_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_KP0)
 667:Src/B3M.c     **** {
 4671              		.loc 1 667 0
 4672              		.cfi_startproc
 4673              		@ args = 72, pretend = 16, frame = 0
 4674              		@ frame_needed = 0, uses_anonymous_args = 0
 4675              	.LVL224:
 4676 0000 84B0     		sub	sp, sp, #16
 4677              	.LCFI396:
 4678              		.cfi_def_cfa_offset 16
 4679 0002 30B5     		push	{r4, r5, lr}
 4680              	.LCFI397:
 4681              		.cfi_def_cfa_offset 28
 4682              		.cfi_offset 4, -28
 4683              		.cfi_offset 5, -24
 4684              		.cfi_offset 14, -20
 4685 0004 91B0     		sub	sp, sp, #68
 4686              	.LCFI398:
 4687              		.cfi_def_cfa_offset 96
 4688 0006 14AC     		add	r4, sp, #80
 4689 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 668:Src/B3M.c     **** 	B3M_Write_4B(huart, SERVO_ID, NEW_KP0, CONTROL_KP0);
 4690              		.loc 1 668 0
 4691 000c 5E23     		movs	r3, #94
ARM GAS  /tmp/ccugrpsh.s 			page 93


 4692 000e 0E93     		str	r3, [sp, #56]
 4693 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 4694 0014 0D93     		str	r3, [sp, #52]
 4695 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4696 001a 0C93     		str	r3, [sp, #48]
 4697 001c 6C46     		mov	r4, sp
 4698 001e 18AD     		add	r5, sp, #96
 4699 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4700 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4701 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4702 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4703 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4704 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4705 0030 14AB     		add	r3, sp, #80
 4706 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4707 0034 FFF7FEFF 		bl	B3M_Write_4B
 4708              	.LVL225:
 669:Src/B3M.c     **** 	return 0;
 670:Src/B3M.c     **** }
 4709              		.loc 1 670 0
 4710 0038 0020     		movs	r0, #0
 4711 003a 11B0     		add	sp, sp, #68
 4712              	.LCFI399:
 4713              		.cfi_def_cfa_offset 28
 4714              		@ sp needed
 4715 003c BDE83040 		pop	{r4, r5, lr}
 4716              	.LCFI400:
 4717              		.cfi_restore 14
 4718              		.cfi_restore 5
 4719              		.cfi_restore 4
 4720              		.cfi_def_cfa_offset 16
 4721 0040 04B0     		add	sp, sp, #16
 4722              	.LCFI401:
 4723              		.cfi_def_cfa_offset 0
 4724 0042 7047     		bx	lr
 4725              		.cfi_endproc
 4726              	.LFE190:
 4728              		.section	.text.B3M_KD0_Read,"ax",%progbits
 4729              		.align	2
 4730              		.global	B3M_KD0_Read
 4731              		.thumb
 4732              		.thumb_func
 4734              	B3M_KD0_Read:
 4735              	.LFB191:
 671:Src/B3M.c     **** 
 672:Src/B3M.c     **** uint8_t B3M_KD0_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 673:Src/B3M.c     **** {
 4736              		.loc 1 673 0
 4737              		.cfi_startproc
 4738              		@ args = 68, pretend = 16, frame = 0
 4739              		@ frame_needed = 0, uses_anonymous_args = 0
 4740              	.LVL226:
 4741 0000 84B0     		sub	sp, sp, #16
 4742              	.LCFI402:
 4743              		.cfi_def_cfa_offset 16
 4744 0002 30B5     		push	{r4, r5, lr}
 4745              	.LCFI403:
ARM GAS  /tmp/ccugrpsh.s 			page 94


 4746              		.cfi_def_cfa_offset 28
 4747              		.cfi_offset 4, -28
 4748              		.cfi_offset 5, -24
 4749              		.cfi_offset 14, -20
 4750 0004 91B0     		sub	sp, sp, #68
 4751              	.LCFI404:
 4752              		.cfi_def_cfa_offset 96
 4753 0006 14AC     		add	r4, sp, #80
 4754 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 674:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_KD0, READ_LENGTH_4B);
 4755              		.loc 1 674 0
 4756 000c 0423     		movs	r3, #4
 4757 000e 0E93     		str	r3, [sp, #56]
 4758 0010 6223     		movs	r3, #98
 4759 0012 0D93     		str	r3, [sp, #52]
 4760 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4761 0018 0C93     		str	r3, [sp, #48]
 4762 001a 6C46     		mov	r4, sp
 4763 001c 18AD     		add	r5, sp, #96
 4764 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4765 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4766 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4767 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4768 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4769 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4770 002e 14AB     		add	r3, sp, #80
 4771 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4772 0032 FFF7FEFF 		bl	B3M_Read
 4773              	.LVL227:
 675:Src/B3M.c     **** 	return 0;
 676:Src/B3M.c     **** }
 4774              		.loc 1 676 0
 4775 0036 0020     		movs	r0, #0
 4776 0038 11B0     		add	sp, sp, #68
 4777              	.LCFI405:
 4778              		.cfi_def_cfa_offset 28
 4779              		@ sp needed
 4780 003a BDE83040 		pop	{r4, r5, lr}
 4781              	.LCFI406:
 4782              		.cfi_restore 14
 4783              		.cfi_restore 5
 4784              		.cfi_restore 4
 4785              		.cfi_def_cfa_offset 16
 4786 003e 04B0     		add	sp, sp, #16
 4787              	.LCFI407:
 4788              		.cfi_def_cfa_offset 0
 4789 0040 7047     		bx	lr
 4790              		.cfi_endproc
 4791              	.LFE191:
 4793 0042 00BF     		.section	.text.B3M_KD0_Write,"ax",%progbits
 4794              		.align	2
 4795              		.global	B3M_KD0_Write
 4796              		.thumb
 4797              		.thumb_func
 4799              	B3M_KD0_Write:
 4800              	.LFB192:
 677:Src/B3M.c     **** 
ARM GAS  /tmp/ccugrpsh.s 			page 95


 678:Src/B3M.c     **** uint8_t B3M_KD0_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_KD0)
 679:Src/B3M.c     **** {
 4801              		.loc 1 679 0
 4802              		.cfi_startproc
 4803              		@ args = 72, pretend = 16, frame = 0
 4804              		@ frame_needed = 0, uses_anonymous_args = 0
 4805              	.LVL228:
 4806 0000 84B0     		sub	sp, sp, #16
 4807              	.LCFI408:
 4808              		.cfi_def_cfa_offset 16
 4809 0002 30B5     		push	{r4, r5, lr}
 4810              	.LCFI409:
 4811              		.cfi_def_cfa_offset 28
 4812              		.cfi_offset 4, -28
 4813              		.cfi_offset 5, -24
 4814              		.cfi_offset 14, -20
 4815 0004 91B0     		sub	sp, sp, #68
 4816              	.LCFI410:
 4817              		.cfi_def_cfa_offset 96
 4818 0006 14AC     		add	r4, sp, #80
 4819 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 680:Src/B3M.c     **** 	B3M_Write_4B(huart, SERVO_ID, NEW_KD0, CONTROL_KD0);
 4820              		.loc 1 680 0
 4821 000c 6223     		movs	r3, #98
 4822 000e 0E93     		str	r3, [sp, #56]
 4823 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 4824 0014 0D93     		str	r3, [sp, #52]
 4825 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4826 001a 0C93     		str	r3, [sp, #48]
 4827 001c 6C46     		mov	r4, sp
 4828 001e 18AD     		add	r5, sp, #96
 4829 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4830 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4831 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4832 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4833 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4834 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4835 0030 14AB     		add	r3, sp, #80
 4836 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4837 0034 FFF7FEFF 		bl	B3M_Write_4B
 4838              	.LVL229:
 681:Src/B3M.c     **** 	return 0;
 682:Src/B3M.c     **** }
 4839              		.loc 1 682 0
 4840 0038 0020     		movs	r0, #0
 4841 003a 11B0     		add	sp, sp, #68
 4842              	.LCFI411:
 4843              		.cfi_def_cfa_offset 28
 4844              		@ sp needed
 4845 003c BDE83040 		pop	{r4, r5, lr}
 4846              	.LCFI412:
 4847              		.cfi_restore 14
 4848              		.cfi_restore 5
 4849              		.cfi_restore 4
 4850              		.cfi_def_cfa_offset 16
 4851 0040 04B0     		add	sp, sp, #16
 4852              	.LCFI413:
ARM GAS  /tmp/ccugrpsh.s 			page 96


 4853              		.cfi_def_cfa_offset 0
 4854 0042 7047     		bx	lr
 4855              		.cfi_endproc
 4856              	.LFE192:
 4858              		.section	.text.B3M_KI0_Read,"ax",%progbits
 4859              		.align	2
 4860              		.global	B3M_KI0_Read
 4861              		.thumb
 4862              		.thumb_func
 4864              	B3M_KI0_Read:
 4865              	.LFB193:
 683:Src/B3M.c     **** 
 684:Src/B3M.c     **** uint8_t B3M_KI0_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 685:Src/B3M.c     **** {
 4866              		.loc 1 685 0
 4867              		.cfi_startproc
 4868              		@ args = 68, pretend = 16, frame = 0
 4869              		@ frame_needed = 0, uses_anonymous_args = 0
 4870              	.LVL230:
 4871 0000 84B0     		sub	sp, sp, #16
 4872              	.LCFI414:
 4873              		.cfi_def_cfa_offset 16
 4874 0002 30B5     		push	{r4, r5, lr}
 4875              	.LCFI415:
 4876              		.cfi_def_cfa_offset 28
 4877              		.cfi_offset 4, -28
 4878              		.cfi_offset 5, -24
 4879              		.cfi_offset 14, -20
 4880 0004 91B0     		sub	sp, sp, #68
 4881              	.LCFI416:
 4882              		.cfi_def_cfa_offset 96
 4883 0006 14AC     		add	r4, sp, #80
 4884 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 686:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_KI0, READ_LENGTH_4B);
 4885              		.loc 1 686 0
 4886 000c 0423     		movs	r3, #4
 4887 000e 0E93     		str	r3, [sp, #56]
 4888 0010 6623     		movs	r3, #102
 4889 0012 0D93     		str	r3, [sp, #52]
 4890 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4891 0018 0C93     		str	r3, [sp, #48]
 4892 001a 6C46     		mov	r4, sp
 4893 001c 18AD     		add	r5, sp, #96
 4894 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4895 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4896 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4897 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4898 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4899 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4900 002e 14AB     		add	r3, sp, #80
 4901 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4902 0032 FFF7FEFF 		bl	B3M_Read
 4903              	.LVL231:
 687:Src/B3M.c     **** 	return 0;
 688:Src/B3M.c     **** }
 4904              		.loc 1 688 0
 4905 0036 0020     		movs	r0, #0
ARM GAS  /tmp/ccugrpsh.s 			page 97


 4906 0038 11B0     		add	sp, sp, #68
 4907              	.LCFI417:
 4908              		.cfi_def_cfa_offset 28
 4909              		@ sp needed
 4910 003a BDE83040 		pop	{r4, r5, lr}
 4911              	.LCFI418:
 4912              		.cfi_restore 14
 4913              		.cfi_restore 5
 4914              		.cfi_restore 4
 4915              		.cfi_def_cfa_offset 16
 4916 003e 04B0     		add	sp, sp, #16
 4917              	.LCFI419:
 4918              		.cfi_def_cfa_offset 0
 4919 0040 7047     		bx	lr
 4920              		.cfi_endproc
 4921              	.LFE193:
 4923 0042 00BF     		.section	.text.B3M_KI0_Write,"ax",%progbits
 4924              		.align	2
 4925              		.global	B3M_KI0_Write
 4926              		.thumb
 4927              		.thumb_func
 4929              	B3M_KI0_Write:
 4930              	.LFB194:
 689:Src/B3M.c     **** 
 690:Src/B3M.c     **** uint8_t B3M_KI0_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_KI0)
 691:Src/B3M.c     **** {
 4931              		.loc 1 691 0
 4932              		.cfi_startproc
 4933              		@ args = 72, pretend = 16, frame = 0
 4934              		@ frame_needed = 0, uses_anonymous_args = 0
 4935              	.LVL232:
 4936 0000 84B0     		sub	sp, sp, #16
 4937              	.LCFI420:
 4938              		.cfi_def_cfa_offset 16
 4939 0002 30B5     		push	{r4, r5, lr}
 4940              	.LCFI421:
 4941              		.cfi_def_cfa_offset 28
 4942              		.cfi_offset 4, -28
 4943              		.cfi_offset 5, -24
 4944              		.cfi_offset 14, -20
 4945 0004 91B0     		sub	sp, sp, #68
 4946              	.LCFI422:
 4947              		.cfi_def_cfa_offset 96
 4948 0006 14AC     		add	r4, sp, #80
 4949 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 692:Src/B3M.c     **** 	B3M_Write_4B(huart, SERVO_ID, NEW_KI0, CONTROL_KI0);
 4950              		.loc 1 692 0
 4951 000c 6623     		movs	r3, #102
 4952 000e 0E93     		str	r3, [sp, #56]
 4953 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 4954 0014 0D93     		str	r3, [sp, #52]
 4955 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 4956 001a 0C93     		str	r3, [sp, #48]
 4957 001c 6C46     		mov	r4, sp
 4958 001e 18AD     		add	r5, sp, #96
 4959 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4960 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 98


 4961 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4962 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4963 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 4964 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 4965 0030 14AB     		add	r3, sp, #80
 4966 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 4967 0034 FFF7FEFF 		bl	B3M_Write_4B
 4968              	.LVL233:
 693:Src/B3M.c     **** 	return 0;
 694:Src/B3M.c     **** }
 4969              		.loc 1 694 0
 4970 0038 0020     		movs	r0, #0
 4971 003a 11B0     		add	sp, sp, #68
 4972              	.LCFI423:
 4973              		.cfi_def_cfa_offset 28
 4974              		@ sp needed
 4975 003c BDE83040 		pop	{r4, r5, lr}
 4976              	.LCFI424:
 4977              		.cfi_restore 14
 4978              		.cfi_restore 5
 4979              		.cfi_restore 4
 4980              		.cfi_def_cfa_offset 16
 4981 0040 04B0     		add	sp, sp, #16
 4982              	.LCFI425:
 4983              		.cfi_def_cfa_offset 0
 4984 0042 7047     		bx	lr
 4985              		.cfi_endproc
 4986              	.LFE194:
 4988              		.section	.text.B3M_StaticFriction0_Read,"ax",%progbits
 4989              		.align	2
 4990              		.global	B3M_StaticFriction0_Read
 4991              		.thumb
 4992              		.thumb_func
 4994              	B3M_StaticFriction0_Read:
 4995              	.LFB195:
 695:Src/B3M.c     **** 
 696:Src/B3M.c     **** uint8_t B3M_StaticFriction0_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 697:Src/B3M.c     **** {
 4996              		.loc 1 697 0
 4997              		.cfi_startproc
 4998              		@ args = 68, pretend = 16, frame = 0
 4999              		@ frame_needed = 0, uses_anonymous_args = 0
 5000              	.LVL234:
 5001 0000 84B0     		sub	sp, sp, #16
 5002              	.LCFI426:
 5003              		.cfi_def_cfa_offset 16
 5004 0002 30B5     		push	{r4, r5, lr}
 5005              	.LCFI427:
 5006              		.cfi_def_cfa_offset 28
 5007              		.cfi_offset 4, -28
 5008              		.cfi_offset 5, -24
 5009              		.cfi_offset 14, -20
 5010 0004 91B0     		sub	sp, sp, #68
 5011              	.LCFI428:
 5012              		.cfi_def_cfa_offset 96
 5013 0006 14AC     		add	r4, sp, #80
 5014 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 99


 698:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_STATIC_FRICTION0, READ_LENGTH_2B);
 5015              		.loc 1 698 0
 5016 000c 0223     		movs	r3, #2
 5017 000e 0E93     		str	r3, [sp, #56]
 5018 0010 6A23     		movs	r3, #106
 5019 0012 0D93     		str	r3, [sp, #52]
 5020 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5021 0018 0C93     		str	r3, [sp, #48]
 5022 001a 6C46     		mov	r4, sp
 5023 001c 18AD     		add	r5, sp, #96
 5024 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5025 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5026 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5027 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5028 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5029 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5030 002e 14AB     		add	r3, sp, #80
 5031 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5032 0032 FFF7FEFF 		bl	B3M_Read
 5033              	.LVL235:
 699:Src/B3M.c     **** 	return 0;
 700:Src/B3M.c     **** }
 5034              		.loc 1 700 0
 5035 0036 0020     		movs	r0, #0
 5036 0038 11B0     		add	sp, sp, #68
 5037              	.LCFI429:
 5038              		.cfi_def_cfa_offset 28
 5039              		@ sp needed
 5040 003a BDE83040 		pop	{r4, r5, lr}
 5041              	.LCFI430:
 5042              		.cfi_restore 14
 5043              		.cfi_restore 5
 5044              		.cfi_restore 4
 5045              		.cfi_def_cfa_offset 16
 5046 003e 04B0     		add	sp, sp, #16
 5047              	.LCFI431:
 5048              		.cfi_def_cfa_offset 0
 5049 0040 7047     		bx	lr
 5050              		.cfi_endproc
 5051              	.LFE195:
 5053 0042 00BF     		.section	.text.B3M_StaticFriction0_Write,"ax",%progbits
 5054              		.align	2
 5055              		.global	B3M_StaticFriction0_Write
 5056              		.thumb
 5057              		.thumb_func
 5059              	B3M_StaticFriction0_Write:
 5060              	.LFB196:
 701:Src/B3M.c     **** 
 702:Src/B3M.c     **** uint8_t B3M_StaticFriction0_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_STATIC_FR
 703:Src/B3M.c     **** {
 5061              		.loc 1 703 0
 5062              		.cfi_startproc
 5063              		@ args = 72, pretend = 16, frame = 0
 5064              		@ frame_needed = 0, uses_anonymous_args = 0
 5065              	.LVL236:
 5066 0000 84B0     		sub	sp, sp, #16
 5067              	.LCFI432:
ARM GAS  /tmp/ccugrpsh.s 			page 100


 5068              		.cfi_def_cfa_offset 16
 5069 0002 30B5     		push	{r4, r5, lr}
 5070              	.LCFI433:
 5071              		.cfi_def_cfa_offset 28
 5072              		.cfi_offset 4, -28
 5073              		.cfi_offset 5, -24
 5074              		.cfi_offset 14, -20
 5075 0004 91B0     		sub	sp, sp, #68
 5076              	.LCFI434:
 5077              		.cfi_def_cfa_offset 96
 5078 0006 14AC     		add	r4, sp, #80
 5079 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 704:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_STATIC_FRICTION0, CONTROL_STATIC_FRICTION0);
 5080              		.loc 1 704 0
 5081 000c 6A23     		movs	r3, #106
 5082 000e 0E93     		str	r3, [sp, #56]
 5083 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 5084 0014 0D93     		str	r3, [sp, #52]
 5085 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5086 001a 0C93     		str	r3, [sp, #48]
 5087 001c 6C46     		mov	r4, sp
 5088 001e 18AD     		add	r5, sp, #96
 5089 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5090 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5091 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5092 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5093 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5094 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5095 0030 14AB     		add	r3, sp, #80
 5096 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5097 0034 FFF7FEFF 		bl	B3M_Write_2B
 5098              	.LVL237:
 705:Src/B3M.c     **** 	return 0;
 706:Src/B3M.c     **** }
 5099              		.loc 1 706 0
 5100 0038 0020     		movs	r0, #0
 5101 003a 11B0     		add	sp, sp, #68
 5102              	.LCFI435:
 5103              		.cfi_def_cfa_offset 28
 5104              		@ sp needed
 5105 003c BDE83040 		pop	{r4, r5, lr}
 5106              	.LCFI436:
 5107              		.cfi_restore 14
 5108              		.cfi_restore 5
 5109              		.cfi_restore 4
 5110              		.cfi_def_cfa_offset 16
 5111 0040 04B0     		add	sp, sp, #16
 5112              	.LCFI437:
 5113              		.cfi_def_cfa_offset 0
 5114 0042 7047     		bx	lr
 5115              		.cfi_endproc
 5116              	.LFE196:
 5118              		.section	.text.B3M_DynamicFriction0_Read,"ax",%progbits
 5119              		.align	2
 5120              		.global	B3M_DynamicFriction0_Read
 5121              		.thumb
 5122              		.thumb_func
ARM GAS  /tmp/ccugrpsh.s 			page 101


 5124              	B3M_DynamicFriction0_Read:
 5125              	.LFB197:
 707:Src/B3M.c     **** 
 708:Src/B3M.c     **** uint8_t B3M_DynamicFriction0_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 709:Src/B3M.c     **** {
 5126              		.loc 1 709 0
 5127              		.cfi_startproc
 5128              		@ args = 68, pretend = 16, frame = 0
 5129              		@ frame_needed = 0, uses_anonymous_args = 0
 5130              	.LVL238:
 5131 0000 84B0     		sub	sp, sp, #16
 5132              	.LCFI438:
 5133              		.cfi_def_cfa_offset 16
 5134 0002 30B5     		push	{r4, r5, lr}
 5135              	.LCFI439:
 5136              		.cfi_def_cfa_offset 28
 5137              		.cfi_offset 4, -28
 5138              		.cfi_offset 5, -24
 5139              		.cfi_offset 14, -20
 5140 0004 91B0     		sub	sp, sp, #68
 5141              	.LCFI440:
 5142              		.cfi_def_cfa_offset 96
 5143 0006 14AC     		add	r4, sp, #80
 5144 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 710:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_DYNAMIC_FRICTION0, READ_LENGTH_2B);
 5145              		.loc 1 710 0
 5146 000c 0223     		movs	r3, #2
 5147 000e 0E93     		str	r3, [sp, #56]
 5148 0010 6C23     		movs	r3, #108
 5149 0012 0D93     		str	r3, [sp, #52]
 5150 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5151 0018 0C93     		str	r3, [sp, #48]
 5152 001a 6C46     		mov	r4, sp
 5153 001c 18AD     		add	r5, sp, #96
 5154 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5155 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5156 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5157 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5158 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5159 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5160 002e 14AB     		add	r3, sp, #80
 5161 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5162 0032 FFF7FEFF 		bl	B3M_Read
 5163              	.LVL239:
 711:Src/B3M.c     **** 	return 0;
 712:Src/B3M.c     **** }
 5164              		.loc 1 712 0
 5165 0036 0020     		movs	r0, #0
 5166 0038 11B0     		add	sp, sp, #68
 5167              	.LCFI441:
 5168              		.cfi_def_cfa_offset 28
 5169              		@ sp needed
 5170 003a BDE83040 		pop	{r4, r5, lr}
 5171              	.LCFI442:
 5172              		.cfi_restore 14
 5173              		.cfi_restore 5
 5174              		.cfi_restore 4
ARM GAS  /tmp/ccugrpsh.s 			page 102


 5175              		.cfi_def_cfa_offset 16
 5176 003e 04B0     		add	sp, sp, #16
 5177              	.LCFI443:
 5178              		.cfi_def_cfa_offset 0
 5179 0040 7047     		bx	lr
 5180              		.cfi_endproc
 5181              	.LFE197:
 5183 0042 00BF     		.section	.text.B3M_DynamicFriction0_Write,"ax",%progbits
 5184              		.align	2
 5185              		.global	B3M_DynamicFriction0_Write
 5186              		.thumb
 5187              		.thumb_func
 5189              	B3M_DynamicFriction0_Write:
 5190              	.LFB198:
 713:Src/B3M.c     **** 
 714:Src/B3M.c     **** uint8_t B3M_DynamicFriction0_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_DYNAMIC_
 715:Src/B3M.c     **** {
 5191              		.loc 1 715 0
 5192              		.cfi_startproc
 5193              		@ args = 72, pretend = 16, frame = 0
 5194              		@ frame_needed = 0, uses_anonymous_args = 0
 5195              	.LVL240:
 5196 0000 84B0     		sub	sp, sp, #16
 5197              	.LCFI444:
 5198              		.cfi_def_cfa_offset 16
 5199 0002 30B5     		push	{r4, r5, lr}
 5200              	.LCFI445:
 5201              		.cfi_def_cfa_offset 28
 5202              		.cfi_offset 4, -28
 5203              		.cfi_offset 5, -24
 5204              		.cfi_offset 14, -20
 5205 0004 91B0     		sub	sp, sp, #68
 5206              	.LCFI446:
 5207              		.cfi_def_cfa_offset 96
 5208 0006 14AC     		add	r4, sp, #80
 5209 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 716:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_DYNAMIC_FRICTION0, READ_LENGTH_2B);
 5210              		.loc 1 716 0
 5211 000c 0223     		movs	r3, #2
 5212 000e 0E93     		str	r3, [sp, #56]
 5213 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 5214 0014 0D93     		str	r3, [sp, #52]
 5215 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5216 001a 0C93     		str	r3, [sp, #48]
 5217 001c 6C46     		mov	r4, sp
 5218 001e 18AD     		add	r5, sp, #96
 5219 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5220 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5221 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5222 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5223 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5224 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5225 0030 14AB     		add	r3, sp, #80
 5226 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5227 0034 FFF7FEFF 		bl	B3M_Write_2B
 5228              	.LVL241:
 717:Src/B3M.c     **** 	return 0;
ARM GAS  /tmp/ccugrpsh.s 			page 103


 718:Src/B3M.c     **** }
 5229              		.loc 1 718 0
 5230 0038 0020     		movs	r0, #0
 5231 003a 11B0     		add	sp, sp, #68
 5232              	.LCFI447:
 5233              		.cfi_def_cfa_offset 28
 5234              		@ sp needed
 5235 003c BDE83040 		pop	{r4, r5, lr}
 5236              	.LCFI448:
 5237              		.cfi_restore 14
 5238              		.cfi_restore 5
 5239              		.cfi_restore 4
 5240              		.cfi_def_cfa_offset 16
 5241 0040 04B0     		add	sp, sp, #16
 5242              	.LCFI449:
 5243              		.cfi_def_cfa_offset 0
 5244 0042 7047     		bx	lr
 5245              		.cfi_endproc
 5246              	.LFE198:
 5248              		.section	.text.B3M_KP1_Read,"ax",%progbits
 5249              		.align	2
 5250              		.global	B3M_KP1_Read
 5251              		.thumb
 5252              		.thumb_func
 5254              	B3M_KP1_Read:
 5255              	.LFB199:
 719:Src/B3M.c     **** 
 720:Src/B3M.c     **** uint8_t B3M_KP1_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 721:Src/B3M.c     **** {
 5256              		.loc 1 721 0
 5257              		.cfi_startproc
 5258              		@ args = 68, pretend = 16, frame = 0
 5259              		@ frame_needed = 0, uses_anonymous_args = 0
 5260              	.LVL242:
 5261 0000 84B0     		sub	sp, sp, #16
 5262              	.LCFI450:
 5263              		.cfi_def_cfa_offset 16
 5264 0002 30B5     		push	{r4, r5, lr}
 5265              	.LCFI451:
 5266              		.cfi_def_cfa_offset 28
 5267              		.cfi_offset 4, -28
 5268              		.cfi_offset 5, -24
 5269              		.cfi_offset 14, -20
 5270 0004 91B0     		sub	sp, sp, #68
 5271              	.LCFI452:
 5272              		.cfi_def_cfa_offset 96
 5273 0006 14AC     		add	r4, sp, #80
 5274 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 722:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_KP1, READ_LENGTH_4B);
 5275              		.loc 1 722 0
 5276 000c 0423     		movs	r3, #4
 5277 000e 0E93     		str	r3, [sp, #56]
 5278 0010 6E23     		movs	r3, #110
 5279 0012 0D93     		str	r3, [sp, #52]
 5280 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5281 0018 0C93     		str	r3, [sp, #48]
 5282 001a 6C46     		mov	r4, sp
ARM GAS  /tmp/ccugrpsh.s 			page 104


 5283 001c 18AD     		add	r5, sp, #96
 5284 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5285 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5286 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5287 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5288 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5289 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5290 002e 14AB     		add	r3, sp, #80
 5291 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5292 0032 FFF7FEFF 		bl	B3M_Read
 5293              	.LVL243:
 723:Src/B3M.c     **** 	return 0;
 724:Src/B3M.c     **** }
 5294              		.loc 1 724 0
 5295 0036 0020     		movs	r0, #0
 5296 0038 11B0     		add	sp, sp, #68
 5297              	.LCFI453:
 5298              		.cfi_def_cfa_offset 28
 5299              		@ sp needed
 5300 003a BDE83040 		pop	{r4, r5, lr}
 5301              	.LCFI454:
 5302              		.cfi_restore 14
 5303              		.cfi_restore 5
 5304              		.cfi_restore 4
 5305              		.cfi_def_cfa_offset 16
 5306 003e 04B0     		add	sp, sp, #16
 5307              	.LCFI455:
 5308              		.cfi_def_cfa_offset 0
 5309 0040 7047     		bx	lr
 5310              		.cfi_endproc
 5311              	.LFE199:
 5313 0042 00BF     		.section	.text.B3M_KP1_Write,"ax",%progbits
 5314              		.align	2
 5315              		.global	B3M_KP1_Write
 5316              		.thumb
 5317              		.thumb_func
 5319              	B3M_KP1_Write:
 5320              	.LFB200:
 725:Src/B3M.c     **** 
 726:Src/B3M.c     **** uint8_t B3M_KP1_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_KP1)
 727:Src/B3M.c     **** {
 5321              		.loc 1 727 0
 5322              		.cfi_startproc
 5323              		@ args = 72, pretend = 16, frame = 0
 5324              		@ frame_needed = 0, uses_anonymous_args = 0
 5325              	.LVL244:
 5326 0000 84B0     		sub	sp, sp, #16
 5327              	.LCFI456:
 5328              		.cfi_def_cfa_offset 16
 5329 0002 30B5     		push	{r4, r5, lr}
 5330              	.LCFI457:
 5331              		.cfi_def_cfa_offset 28
 5332              		.cfi_offset 4, -28
 5333              		.cfi_offset 5, -24
 5334              		.cfi_offset 14, -20
 5335 0004 91B0     		sub	sp, sp, #68
 5336              	.LCFI458:
ARM GAS  /tmp/ccugrpsh.s 			page 105


 5337              		.cfi_def_cfa_offset 96
 5338 0006 14AC     		add	r4, sp, #80
 5339 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 728:Src/B3M.c     **** 	B3M_Write_4B(huart, SERVO_ID, NEW_KP1, CONTROL_KP1);
 5340              		.loc 1 728 0
 5341 000c 6E23     		movs	r3, #110
 5342 000e 0E93     		str	r3, [sp, #56]
 5343 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 5344 0014 0D93     		str	r3, [sp, #52]
 5345 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5346 001a 0C93     		str	r3, [sp, #48]
 5347 001c 6C46     		mov	r4, sp
 5348 001e 18AD     		add	r5, sp, #96
 5349 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5350 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5351 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5352 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5353 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5354 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5355 0030 14AB     		add	r3, sp, #80
 5356 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5357 0034 FFF7FEFF 		bl	B3M_Write_4B
 5358              	.LVL245:
 729:Src/B3M.c     **** 	return 0;
 730:Src/B3M.c     **** }
 5359              		.loc 1 730 0
 5360 0038 0020     		movs	r0, #0
 5361 003a 11B0     		add	sp, sp, #68
 5362              	.LCFI459:
 5363              		.cfi_def_cfa_offset 28
 5364              		@ sp needed
 5365 003c BDE83040 		pop	{r4, r5, lr}
 5366              	.LCFI460:
 5367              		.cfi_restore 14
 5368              		.cfi_restore 5
 5369              		.cfi_restore 4
 5370              		.cfi_def_cfa_offset 16
 5371 0040 04B0     		add	sp, sp, #16
 5372              	.LCFI461:
 5373              		.cfi_def_cfa_offset 0
 5374 0042 7047     		bx	lr
 5375              		.cfi_endproc
 5376              	.LFE200:
 5378              		.section	.text.B3M_KD1_Read,"ax",%progbits
 5379              		.align	2
 5380              		.global	B3M_KD1_Read
 5381              		.thumb
 5382              		.thumb_func
 5384              	B3M_KD1_Read:
 5385              	.LFB201:
 731:Src/B3M.c     **** 
 732:Src/B3M.c     **** uint8_t B3M_KD1_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 733:Src/B3M.c     **** {
 5386              		.loc 1 733 0
 5387              		.cfi_startproc
 5388              		@ args = 68, pretend = 16, frame = 0
 5389              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccugrpsh.s 			page 106


 5390              	.LVL246:
 5391 0000 84B0     		sub	sp, sp, #16
 5392              	.LCFI462:
 5393              		.cfi_def_cfa_offset 16
 5394 0002 30B5     		push	{r4, r5, lr}
 5395              	.LCFI463:
 5396              		.cfi_def_cfa_offset 28
 5397              		.cfi_offset 4, -28
 5398              		.cfi_offset 5, -24
 5399              		.cfi_offset 14, -20
 5400 0004 91B0     		sub	sp, sp, #68
 5401              	.LCFI464:
 5402              		.cfi_def_cfa_offset 96
 5403 0006 14AC     		add	r4, sp, #80
 5404 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 734:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_KD1, READ_LENGTH_4B);
 5405              		.loc 1 734 0
 5406 000c 0423     		movs	r3, #4
 5407 000e 0E93     		str	r3, [sp, #56]
 5408 0010 7223     		movs	r3, #114
 5409 0012 0D93     		str	r3, [sp, #52]
 5410 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5411 0018 0C93     		str	r3, [sp, #48]
 5412 001a 6C46     		mov	r4, sp
 5413 001c 18AD     		add	r5, sp, #96
 5414 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5415 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5416 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5417 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5418 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5419 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5420 002e 14AB     		add	r3, sp, #80
 5421 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5422 0032 FFF7FEFF 		bl	B3M_Read
 5423              	.LVL247:
 735:Src/B3M.c     **** 	return 0;
 736:Src/B3M.c     **** }
 5424              		.loc 1 736 0
 5425 0036 0020     		movs	r0, #0
 5426 0038 11B0     		add	sp, sp, #68
 5427              	.LCFI465:
 5428              		.cfi_def_cfa_offset 28
 5429              		@ sp needed
 5430 003a BDE83040 		pop	{r4, r5, lr}
 5431              	.LCFI466:
 5432              		.cfi_restore 14
 5433              		.cfi_restore 5
 5434              		.cfi_restore 4
 5435              		.cfi_def_cfa_offset 16
 5436 003e 04B0     		add	sp, sp, #16
 5437              	.LCFI467:
 5438              		.cfi_def_cfa_offset 0
 5439 0040 7047     		bx	lr
 5440              		.cfi_endproc
 5441              	.LFE201:
 5443 0042 00BF     		.section	.text.B3M_KD1_Write,"ax",%progbits
 5444              		.align	2
ARM GAS  /tmp/ccugrpsh.s 			page 107


 5445              		.global	B3M_KD1_Write
 5446              		.thumb
 5447              		.thumb_func
 5449              	B3M_KD1_Write:
 5450              	.LFB202:
 737:Src/B3M.c     **** 
 738:Src/B3M.c     **** uint8_t B3M_KD1_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_KD1)
 739:Src/B3M.c     **** {
 5451              		.loc 1 739 0
 5452              		.cfi_startproc
 5453              		@ args = 72, pretend = 16, frame = 0
 5454              		@ frame_needed = 0, uses_anonymous_args = 0
 5455              	.LVL248:
 5456 0000 84B0     		sub	sp, sp, #16
 5457              	.LCFI468:
 5458              		.cfi_def_cfa_offset 16
 5459 0002 30B5     		push	{r4, r5, lr}
 5460              	.LCFI469:
 5461              		.cfi_def_cfa_offset 28
 5462              		.cfi_offset 4, -28
 5463              		.cfi_offset 5, -24
 5464              		.cfi_offset 14, -20
 5465 0004 91B0     		sub	sp, sp, #68
 5466              	.LCFI470:
 5467              		.cfi_def_cfa_offset 96
 5468 0006 14AC     		add	r4, sp, #80
 5469 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 740:Src/B3M.c     **** 	B3M_Write_4B(huart, SERVO_ID, NEW_KD1, CONTROL_KD1);
 5470              		.loc 1 740 0
 5471 000c 7223     		movs	r3, #114
 5472 000e 0E93     		str	r3, [sp, #56]
 5473 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 5474 0014 0D93     		str	r3, [sp, #52]
 5475 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5476 001a 0C93     		str	r3, [sp, #48]
 5477 001c 6C46     		mov	r4, sp
 5478 001e 18AD     		add	r5, sp, #96
 5479 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5480 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5481 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5482 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5483 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5484 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5485 0030 14AB     		add	r3, sp, #80
 5486 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5487 0034 FFF7FEFF 		bl	B3M_Write_4B
 5488              	.LVL249:
 741:Src/B3M.c     **** 	return 0;
 742:Src/B3M.c     **** }
 5489              		.loc 1 742 0
 5490 0038 0020     		movs	r0, #0
 5491 003a 11B0     		add	sp, sp, #68
 5492              	.LCFI471:
 5493              		.cfi_def_cfa_offset 28
 5494              		@ sp needed
 5495 003c BDE83040 		pop	{r4, r5, lr}
 5496              	.LCFI472:
ARM GAS  /tmp/ccugrpsh.s 			page 108


 5497              		.cfi_restore 14
 5498              		.cfi_restore 5
 5499              		.cfi_restore 4
 5500              		.cfi_def_cfa_offset 16
 5501 0040 04B0     		add	sp, sp, #16
 5502              	.LCFI473:
 5503              		.cfi_def_cfa_offset 0
 5504 0042 7047     		bx	lr
 5505              		.cfi_endproc
 5506              	.LFE202:
 5508              		.section	.text.B3M_KI1_Read,"ax",%progbits
 5509              		.align	2
 5510              		.global	B3M_KI1_Read
 5511              		.thumb
 5512              		.thumb_func
 5514              	B3M_KI1_Read:
 5515              	.LFB203:
 743:Src/B3M.c     **** 
 744:Src/B3M.c     **** uint8_t B3M_KI1_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 745:Src/B3M.c     **** {
 5516              		.loc 1 745 0
 5517              		.cfi_startproc
 5518              		@ args = 68, pretend = 16, frame = 0
 5519              		@ frame_needed = 0, uses_anonymous_args = 0
 5520              	.LVL250:
 5521 0000 84B0     		sub	sp, sp, #16
 5522              	.LCFI474:
 5523              		.cfi_def_cfa_offset 16
 5524 0002 30B5     		push	{r4, r5, lr}
 5525              	.LCFI475:
 5526              		.cfi_def_cfa_offset 28
 5527              		.cfi_offset 4, -28
 5528              		.cfi_offset 5, -24
 5529              		.cfi_offset 14, -20
 5530 0004 91B0     		sub	sp, sp, #68
 5531              	.LCFI476:
 5532              		.cfi_def_cfa_offset 96
 5533 0006 14AC     		add	r4, sp, #80
 5534 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 746:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_KI1, READ_LENGTH_4B);
 5535              		.loc 1 746 0
 5536 000c 0423     		movs	r3, #4
 5537 000e 0E93     		str	r3, [sp, #56]
 5538 0010 7623     		movs	r3, #118
 5539 0012 0D93     		str	r3, [sp, #52]
 5540 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5541 0018 0C93     		str	r3, [sp, #48]
 5542 001a 6C46     		mov	r4, sp
 5543 001c 18AD     		add	r5, sp, #96
 5544 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5545 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5546 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5547 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5548 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5549 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5550 002e 14AB     		add	r3, sp, #80
 5551 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 109


 5552 0032 FFF7FEFF 		bl	B3M_Read
 5553              	.LVL251:
 747:Src/B3M.c     **** 	return 0;
 748:Src/B3M.c     **** }
 5554              		.loc 1 748 0
 5555 0036 0020     		movs	r0, #0
 5556 0038 11B0     		add	sp, sp, #68
 5557              	.LCFI477:
 5558              		.cfi_def_cfa_offset 28
 5559              		@ sp needed
 5560 003a BDE83040 		pop	{r4, r5, lr}
 5561              	.LCFI478:
 5562              		.cfi_restore 14
 5563              		.cfi_restore 5
 5564              		.cfi_restore 4
 5565              		.cfi_def_cfa_offset 16
 5566 003e 04B0     		add	sp, sp, #16
 5567              	.LCFI479:
 5568              		.cfi_def_cfa_offset 0
 5569 0040 7047     		bx	lr
 5570              		.cfi_endproc
 5571              	.LFE203:
 5573 0042 00BF     		.section	.text.B3M_KI1_Write,"ax",%progbits
 5574              		.align	2
 5575              		.global	B3M_KI1_Write
 5576              		.thumb
 5577              		.thumb_func
 5579              	B3M_KI1_Write:
 5580              	.LFB204:
 749:Src/B3M.c     **** 
 750:Src/B3M.c     **** uint8_t B3M_KI1_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_KI1)
 751:Src/B3M.c     **** {
 5581              		.loc 1 751 0
 5582              		.cfi_startproc
 5583              		@ args = 72, pretend = 16, frame = 0
 5584              		@ frame_needed = 0, uses_anonymous_args = 0
 5585              	.LVL252:
 5586 0000 84B0     		sub	sp, sp, #16
 5587              	.LCFI480:
 5588              		.cfi_def_cfa_offset 16
 5589 0002 30B5     		push	{r4, r5, lr}
 5590              	.LCFI481:
 5591              		.cfi_def_cfa_offset 28
 5592              		.cfi_offset 4, -28
 5593              		.cfi_offset 5, -24
 5594              		.cfi_offset 14, -20
 5595 0004 91B0     		sub	sp, sp, #68
 5596              	.LCFI482:
 5597              		.cfi_def_cfa_offset 96
 5598 0006 14AC     		add	r4, sp, #80
 5599 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 752:Src/B3M.c     **** 	B3M_Write_4B(huart, SERVO_ID, NEW_KI1, CONTROL_KI1);
 5600              		.loc 1 752 0
 5601 000c 7623     		movs	r3, #118
 5602 000e 0E93     		str	r3, [sp, #56]
 5603 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 5604 0014 0D93     		str	r3, [sp, #52]
ARM GAS  /tmp/ccugrpsh.s 			page 110


 5605 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5606 001a 0C93     		str	r3, [sp, #48]
 5607 001c 6C46     		mov	r4, sp
 5608 001e 18AD     		add	r5, sp, #96
 5609 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5610 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5611 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5612 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5613 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5614 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5615 0030 14AB     		add	r3, sp, #80
 5616 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5617 0034 FFF7FEFF 		bl	B3M_Write_4B
 5618              	.LVL253:
 753:Src/B3M.c     **** 	return 0;
 754:Src/B3M.c     **** }
 5619              		.loc 1 754 0
 5620 0038 0020     		movs	r0, #0
 5621 003a 11B0     		add	sp, sp, #68
 5622              	.LCFI483:
 5623              		.cfi_def_cfa_offset 28
 5624              		@ sp needed
 5625 003c BDE83040 		pop	{r4, r5, lr}
 5626              	.LCFI484:
 5627              		.cfi_restore 14
 5628              		.cfi_restore 5
 5629              		.cfi_restore 4
 5630              		.cfi_def_cfa_offset 16
 5631 0040 04B0     		add	sp, sp, #16
 5632              	.LCFI485:
 5633              		.cfi_def_cfa_offset 0
 5634 0042 7047     		bx	lr
 5635              		.cfi_endproc
 5636              	.LFE204:
 5638              		.section	.text.B3M_StaticFriction1_Read,"ax",%progbits
 5639              		.align	2
 5640              		.global	B3M_StaticFriction1_Read
 5641              		.thumb
 5642              		.thumb_func
 5644              	B3M_StaticFriction1_Read:
 5645              	.LFB205:
 755:Src/B3M.c     **** 
 756:Src/B3M.c     **** uint8_t B3M_StaticFriction1_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 757:Src/B3M.c     **** {
 5646              		.loc 1 757 0
 5647              		.cfi_startproc
 5648              		@ args = 68, pretend = 16, frame = 0
 5649              		@ frame_needed = 0, uses_anonymous_args = 0
 5650              	.LVL254:
 5651 0000 84B0     		sub	sp, sp, #16
 5652              	.LCFI486:
 5653              		.cfi_def_cfa_offset 16
 5654 0002 30B5     		push	{r4, r5, lr}
 5655              	.LCFI487:
 5656              		.cfi_def_cfa_offset 28
 5657              		.cfi_offset 4, -28
 5658              		.cfi_offset 5, -24
ARM GAS  /tmp/ccugrpsh.s 			page 111


 5659              		.cfi_offset 14, -20
 5660 0004 91B0     		sub	sp, sp, #68
 5661              	.LCFI488:
 5662              		.cfi_def_cfa_offset 96
 5663 0006 14AC     		add	r4, sp, #80
 5664 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 758:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_STATIC_FRICTION1, READ_LENGTH_2B);
 5665              		.loc 1 758 0
 5666 000c 0223     		movs	r3, #2
 5667 000e 0E93     		str	r3, [sp, #56]
 5668 0010 7A23     		movs	r3, #122
 5669 0012 0D93     		str	r3, [sp, #52]
 5670 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5671 0018 0C93     		str	r3, [sp, #48]
 5672 001a 6C46     		mov	r4, sp
 5673 001c 18AD     		add	r5, sp, #96
 5674 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5675 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5676 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5677 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5678 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5679 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5680 002e 14AB     		add	r3, sp, #80
 5681 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5682 0032 FFF7FEFF 		bl	B3M_Read
 5683              	.LVL255:
 759:Src/B3M.c     **** 	return 0;
 760:Src/B3M.c     **** }
 5684              		.loc 1 760 0
 5685 0036 0020     		movs	r0, #0
 5686 0038 11B0     		add	sp, sp, #68
 5687              	.LCFI489:
 5688              		.cfi_def_cfa_offset 28
 5689              		@ sp needed
 5690 003a BDE83040 		pop	{r4, r5, lr}
 5691              	.LCFI490:
 5692              		.cfi_restore 14
 5693              		.cfi_restore 5
 5694              		.cfi_restore 4
 5695              		.cfi_def_cfa_offset 16
 5696 003e 04B0     		add	sp, sp, #16
 5697              	.LCFI491:
 5698              		.cfi_def_cfa_offset 0
 5699 0040 7047     		bx	lr
 5700              		.cfi_endproc
 5701              	.LFE205:
 5703 0042 00BF     		.section	.text.B3M_StaticFriction1_Write,"ax",%progbits
 5704              		.align	2
 5705              		.global	B3M_StaticFriction1_Write
 5706              		.thumb
 5707              		.thumb_func
 5709              	B3M_StaticFriction1_Write:
 5710              	.LFB206:
 761:Src/B3M.c     **** 
 762:Src/B3M.c     **** uint8_t B3M_StaticFriction1_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_STATIC_FR
 763:Src/B3M.c     **** {
 5711              		.loc 1 763 0
ARM GAS  /tmp/ccugrpsh.s 			page 112


 5712              		.cfi_startproc
 5713              		@ args = 72, pretend = 16, frame = 0
 5714              		@ frame_needed = 0, uses_anonymous_args = 0
 5715              	.LVL256:
 5716 0000 84B0     		sub	sp, sp, #16
 5717              	.LCFI492:
 5718              		.cfi_def_cfa_offset 16
 5719 0002 30B5     		push	{r4, r5, lr}
 5720              	.LCFI493:
 5721              		.cfi_def_cfa_offset 28
 5722              		.cfi_offset 4, -28
 5723              		.cfi_offset 5, -24
 5724              		.cfi_offset 14, -20
 5725 0004 91B0     		sub	sp, sp, #68
 5726              	.LCFI494:
 5727              		.cfi_def_cfa_offset 96
 5728 0006 14AC     		add	r4, sp, #80
 5729 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 764:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_STATIC_FRICTION1, CONTROL_STATIC_FRICTION1);
 5730              		.loc 1 764 0
 5731 000c 7A23     		movs	r3, #122
 5732 000e 0E93     		str	r3, [sp, #56]
 5733 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 5734 0014 0D93     		str	r3, [sp, #52]
 5735 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5736 001a 0C93     		str	r3, [sp, #48]
 5737 001c 6C46     		mov	r4, sp
 5738 001e 18AD     		add	r5, sp, #96
 5739 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5740 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5741 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5742 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5743 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5744 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5745 0030 14AB     		add	r3, sp, #80
 5746 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5747 0034 FFF7FEFF 		bl	B3M_Write_2B
 5748              	.LVL257:
 765:Src/B3M.c     **** 	return 0;
 766:Src/B3M.c     **** }
 5749              		.loc 1 766 0
 5750 0038 0020     		movs	r0, #0
 5751 003a 11B0     		add	sp, sp, #68
 5752              	.LCFI495:
 5753              		.cfi_def_cfa_offset 28
 5754              		@ sp needed
 5755 003c BDE83040 		pop	{r4, r5, lr}
 5756              	.LCFI496:
 5757              		.cfi_restore 14
 5758              		.cfi_restore 5
 5759              		.cfi_restore 4
 5760              		.cfi_def_cfa_offset 16
 5761 0040 04B0     		add	sp, sp, #16
 5762              	.LCFI497:
 5763              		.cfi_def_cfa_offset 0
 5764 0042 7047     		bx	lr
 5765              		.cfi_endproc
ARM GAS  /tmp/ccugrpsh.s 			page 113


 5766              	.LFE206:
 5768              		.section	.text.B3M_DynamicFriction1_Read,"ax",%progbits
 5769              		.align	2
 5770              		.global	B3M_DynamicFriction1_Read
 5771              		.thumb
 5772              		.thumb_func
 5774              	B3M_DynamicFriction1_Read:
 5775              	.LFB207:
 767:Src/B3M.c     **** 
 768:Src/B3M.c     **** uint8_t B3M_DynamicFriction1_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 769:Src/B3M.c     **** {
 5776              		.loc 1 769 0
 5777              		.cfi_startproc
 5778              		@ args = 68, pretend = 16, frame = 0
 5779              		@ frame_needed = 0, uses_anonymous_args = 0
 5780              	.LVL258:
 5781 0000 84B0     		sub	sp, sp, #16
 5782              	.LCFI498:
 5783              		.cfi_def_cfa_offset 16
 5784 0002 30B5     		push	{r4, r5, lr}
 5785              	.LCFI499:
 5786              		.cfi_def_cfa_offset 28
 5787              		.cfi_offset 4, -28
 5788              		.cfi_offset 5, -24
 5789              		.cfi_offset 14, -20
 5790 0004 91B0     		sub	sp, sp, #68
 5791              	.LCFI500:
 5792              		.cfi_def_cfa_offset 96
 5793 0006 14AC     		add	r4, sp, #80
 5794 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 770:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_DYNAMIC_FRICTION1, READ_LENGTH_2B);
 5795              		.loc 1 770 0
 5796 000c 0223     		movs	r3, #2
 5797 000e 0E93     		str	r3, [sp, #56]
 5798 0010 7C23     		movs	r3, #124
 5799 0012 0D93     		str	r3, [sp, #52]
 5800 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5801 0018 0C93     		str	r3, [sp, #48]
 5802 001a 6C46     		mov	r4, sp
 5803 001c 18AD     		add	r5, sp, #96
 5804 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5805 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5806 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5807 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5808 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5809 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5810 002e 14AB     		add	r3, sp, #80
 5811 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5812 0032 FFF7FEFF 		bl	B3M_Read
 5813              	.LVL259:
 771:Src/B3M.c     **** 	return 0;
 772:Src/B3M.c     **** }
 5814              		.loc 1 772 0
 5815 0036 0020     		movs	r0, #0
 5816 0038 11B0     		add	sp, sp, #68
 5817              	.LCFI501:
 5818              		.cfi_def_cfa_offset 28
ARM GAS  /tmp/ccugrpsh.s 			page 114


 5819              		@ sp needed
 5820 003a BDE83040 		pop	{r4, r5, lr}
 5821              	.LCFI502:
 5822              		.cfi_restore 14
 5823              		.cfi_restore 5
 5824              		.cfi_restore 4
 5825              		.cfi_def_cfa_offset 16
 5826 003e 04B0     		add	sp, sp, #16
 5827              	.LCFI503:
 5828              		.cfi_def_cfa_offset 0
 5829 0040 7047     		bx	lr
 5830              		.cfi_endproc
 5831              	.LFE207:
 5833 0042 00BF     		.section	.text.B3M_DynamicFriction1_Write,"ax",%progbits
 5834              		.align	2
 5835              		.global	B3M_DynamicFriction1_Write
 5836              		.thumb
 5837              		.thumb_func
 5839              	B3M_DynamicFriction1_Write:
 5840              	.LFB208:
 773:Src/B3M.c     **** 
 774:Src/B3M.c     **** uint8_t B3M_DynamicFriction1_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_DYNAMIC_
 775:Src/B3M.c     **** {
 5841              		.loc 1 775 0
 5842              		.cfi_startproc
 5843              		@ args = 72, pretend = 16, frame = 0
 5844              		@ frame_needed = 0, uses_anonymous_args = 0
 5845              	.LVL260:
 5846 0000 84B0     		sub	sp, sp, #16
 5847              	.LCFI504:
 5848              		.cfi_def_cfa_offset 16
 5849 0002 30B5     		push	{r4, r5, lr}
 5850              	.LCFI505:
 5851              		.cfi_def_cfa_offset 28
 5852              		.cfi_offset 4, -28
 5853              		.cfi_offset 5, -24
 5854              		.cfi_offset 14, -20
 5855 0004 91B0     		sub	sp, sp, #68
 5856              	.LCFI506:
 5857              		.cfi_def_cfa_offset 96
 5858 0006 14AC     		add	r4, sp, #80
 5859 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 776:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_DYNAMIC_FRICTION1, CONTROL_DYNAMIC_FRICTION1);
 5860              		.loc 1 776 0
 5861 000c 7C23     		movs	r3, #124
 5862 000e 0E93     		str	r3, [sp, #56]
 5863 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 5864 0014 0D93     		str	r3, [sp, #52]
 5865 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5866 001a 0C93     		str	r3, [sp, #48]
 5867 001c 6C46     		mov	r4, sp
 5868 001e 18AD     		add	r5, sp, #96
 5869 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5870 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5871 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5872 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5873 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 115


 5874 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5875 0030 14AB     		add	r3, sp, #80
 5876 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5877 0034 FFF7FEFF 		bl	B3M_Write_2B
 5878              	.LVL261:
 777:Src/B3M.c     **** 	return 0;
 778:Src/B3M.c     **** }
 5879              		.loc 1 778 0
 5880 0038 0020     		movs	r0, #0
 5881 003a 11B0     		add	sp, sp, #68
 5882              	.LCFI507:
 5883              		.cfi_def_cfa_offset 28
 5884              		@ sp needed
 5885 003c BDE83040 		pop	{r4, r5, lr}
 5886              	.LCFI508:
 5887              		.cfi_restore 14
 5888              		.cfi_restore 5
 5889              		.cfi_restore 4
 5890              		.cfi_def_cfa_offset 16
 5891 0040 04B0     		add	sp, sp, #16
 5892              	.LCFI509:
 5893              		.cfi_def_cfa_offset 0
 5894 0042 7047     		bx	lr
 5895              		.cfi_endproc
 5896              	.LFE208:
 5898              		.section	.text.B3M_KP2_Read,"ax",%progbits
 5899              		.align	2
 5900              		.global	B3M_KP2_Read
 5901              		.thumb
 5902              		.thumb_func
 5904              	B3M_KP2_Read:
 5905              	.LFB209:
 779:Src/B3M.c     **** //
 780:Src/B3M.c     **** uint8_t B3M_KP2_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 781:Src/B3M.c     **** {
 5906              		.loc 1 781 0
 5907              		.cfi_startproc
 5908              		@ args = 68, pretend = 16, frame = 0
 5909              		@ frame_needed = 0, uses_anonymous_args = 0
 5910              	.LVL262:
 5911 0000 84B0     		sub	sp, sp, #16
 5912              	.LCFI510:
 5913              		.cfi_def_cfa_offset 16
 5914 0002 30B5     		push	{r4, r5, lr}
 5915              	.LCFI511:
 5916              		.cfi_def_cfa_offset 28
 5917              		.cfi_offset 4, -28
 5918              		.cfi_offset 5, -24
 5919              		.cfi_offset 14, -20
 5920 0004 91B0     		sub	sp, sp, #68
 5921              	.LCFI512:
 5922              		.cfi_def_cfa_offset 96
 5923 0006 14AC     		add	r4, sp, #80
 5924 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 782:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_KP2, READ_LENGTH_4B);
 5925              		.loc 1 782 0
 5926 000c 0423     		movs	r3, #4
ARM GAS  /tmp/ccugrpsh.s 			page 116


 5927 000e 0E93     		str	r3, [sp, #56]
 5928 0010 7E23     		movs	r3, #126
 5929 0012 0D93     		str	r3, [sp, #52]
 5930 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5931 0018 0C93     		str	r3, [sp, #48]
 5932 001a 6C46     		mov	r4, sp
 5933 001c 18AD     		add	r5, sp, #96
 5934 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5935 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5936 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5937 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5938 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 5939 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 5940 002e 14AB     		add	r3, sp, #80
 5941 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5942 0032 FFF7FEFF 		bl	B3M_Read
 5943              	.LVL263:
 783:Src/B3M.c     **** 	return 0;
 784:Src/B3M.c     **** }
 5944              		.loc 1 784 0
 5945 0036 0020     		movs	r0, #0
 5946 0038 11B0     		add	sp, sp, #68
 5947              	.LCFI513:
 5948              		.cfi_def_cfa_offset 28
 5949              		@ sp needed
 5950 003a BDE83040 		pop	{r4, r5, lr}
 5951              	.LCFI514:
 5952              		.cfi_restore 14
 5953              		.cfi_restore 5
 5954              		.cfi_restore 4
 5955              		.cfi_def_cfa_offset 16
 5956 003e 04B0     		add	sp, sp, #16
 5957              	.LCFI515:
 5958              		.cfi_def_cfa_offset 0
 5959 0040 7047     		bx	lr
 5960              		.cfi_endproc
 5961              	.LFE209:
 5963 0042 00BF     		.section	.text.B3M_KP2_Write,"ax",%progbits
 5964              		.align	2
 5965              		.global	B3M_KP2_Write
 5966              		.thumb
 5967              		.thumb_func
 5969              	B3M_KP2_Write:
 5970              	.LFB210:
 785:Src/B3M.c     **** uint8_t B3M_KP2_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_KP2)
 786:Src/B3M.c     **** {
 5971              		.loc 1 786 0
 5972              		.cfi_startproc
 5973              		@ args = 72, pretend = 16, frame = 0
 5974              		@ frame_needed = 0, uses_anonymous_args = 0
 5975              	.LVL264:
 5976 0000 84B0     		sub	sp, sp, #16
 5977              	.LCFI516:
 5978              		.cfi_def_cfa_offset 16
 5979 0002 30B5     		push	{r4, r5, lr}
 5980              	.LCFI517:
 5981              		.cfi_def_cfa_offset 28
ARM GAS  /tmp/ccugrpsh.s 			page 117


 5982              		.cfi_offset 4, -28
 5983              		.cfi_offset 5, -24
 5984              		.cfi_offset 14, -20
 5985 0004 91B0     		sub	sp, sp, #68
 5986              	.LCFI518:
 5987              		.cfi_def_cfa_offset 96
 5988 0006 14AC     		add	r4, sp, #80
 5989 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 787:Src/B3M.c     **** 	B3M_Write_4B(huart, SERVO_ID, NEW_KP2, CONTROL_KP2);
 5990              		.loc 1 787 0
 5991 000c 7E23     		movs	r3, #126
 5992 000e 0E93     		str	r3, [sp, #56]
 5993 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 5994 0014 0D93     		str	r3, [sp, #52]
 5995 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 5996 001a 0C93     		str	r3, [sp, #48]
 5997 001c 6C46     		mov	r4, sp
 5998 001e 18AD     		add	r5, sp, #96
 5999 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6000 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6001 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6002 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6003 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6004 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6005 0030 14AB     		add	r3, sp, #80
 6006 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6007 0034 FFF7FEFF 		bl	B3M_Write_4B
 6008              	.LVL265:
 788:Src/B3M.c     **** 	return 0;
 789:Src/B3M.c     **** }
 6009              		.loc 1 789 0
 6010 0038 0020     		movs	r0, #0
 6011 003a 11B0     		add	sp, sp, #68
 6012              	.LCFI519:
 6013              		.cfi_def_cfa_offset 28
 6014              		@ sp needed
 6015 003c BDE83040 		pop	{r4, r5, lr}
 6016              	.LCFI520:
 6017              		.cfi_restore 14
 6018              		.cfi_restore 5
 6019              		.cfi_restore 4
 6020              		.cfi_def_cfa_offset 16
 6021 0040 04B0     		add	sp, sp, #16
 6022              	.LCFI521:
 6023              		.cfi_def_cfa_offset 0
 6024 0042 7047     		bx	lr
 6025              		.cfi_endproc
 6026              	.LFE210:
 6028              		.section	.text.B3M_KD2_Read,"ax",%progbits
 6029              		.align	2
 6030              		.global	B3M_KD2_Read
 6031              		.thumb
 6032              		.thumb_func
 6034              	B3M_KD2_Read:
 6035              	.LFB211:
 790:Src/B3M.c     **** uint8_t B3M_KD2_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 791:Src/B3M.c     **** {
ARM GAS  /tmp/ccugrpsh.s 			page 118


 6036              		.loc 1 791 0
 6037              		.cfi_startproc
 6038              		@ args = 68, pretend = 16, frame = 0
 6039              		@ frame_needed = 0, uses_anonymous_args = 0
 6040              	.LVL266:
 6041 0000 84B0     		sub	sp, sp, #16
 6042              	.LCFI522:
 6043              		.cfi_def_cfa_offset 16
 6044 0002 30B5     		push	{r4, r5, lr}
 6045              	.LCFI523:
 6046              		.cfi_def_cfa_offset 28
 6047              		.cfi_offset 4, -28
 6048              		.cfi_offset 5, -24
 6049              		.cfi_offset 14, -20
 6050 0004 91B0     		sub	sp, sp, #68
 6051              	.LCFI524:
 6052              		.cfi_def_cfa_offset 96
 6053 0006 14AC     		add	r4, sp, #80
 6054 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 792:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_KD2, READ_LENGTH_4B);
 6055              		.loc 1 792 0
 6056 000c 0423     		movs	r3, #4
 6057 000e 0E93     		str	r3, [sp, #56]
 6058 0010 8223     		movs	r3, #130
 6059 0012 0D93     		str	r3, [sp, #52]
 6060 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6061 0018 0C93     		str	r3, [sp, #48]
 6062 001a 6C46     		mov	r4, sp
 6063 001c 18AD     		add	r5, sp, #96
 6064 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6065 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6066 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6067 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6068 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6069 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6070 002e 14AB     		add	r3, sp, #80
 6071 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6072 0032 FFF7FEFF 		bl	B3M_Read
 6073              	.LVL267:
 793:Src/B3M.c     **** 	return 0;
 794:Src/B3M.c     **** }
 6074              		.loc 1 794 0
 6075 0036 0020     		movs	r0, #0
 6076 0038 11B0     		add	sp, sp, #68
 6077              	.LCFI525:
 6078              		.cfi_def_cfa_offset 28
 6079              		@ sp needed
 6080 003a BDE83040 		pop	{r4, r5, lr}
 6081              	.LCFI526:
 6082              		.cfi_restore 14
 6083              		.cfi_restore 5
 6084              		.cfi_restore 4
 6085              		.cfi_def_cfa_offset 16
 6086 003e 04B0     		add	sp, sp, #16
 6087              	.LCFI527:
 6088              		.cfi_def_cfa_offset 0
 6089 0040 7047     		bx	lr
ARM GAS  /tmp/ccugrpsh.s 			page 119


 6090              		.cfi_endproc
 6091              	.LFE211:
 6093 0042 00BF     		.section	.text.B3M_KD2_Write,"ax",%progbits
 6094              		.align	2
 6095              		.global	B3M_KD2_Write
 6096              		.thumb
 6097              		.thumb_func
 6099              	B3M_KD2_Write:
 6100              	.LFB212:
 795:Src/B3M.c     **** uint8_t B3M_KD2_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_KD2)
 796:Src/B3M.c     **** {
 6101              		.loc 1 796 0
 6102              		.cfi_startproc
 6103              		@ args = 72, pretend = 16, frame = 0
 6104              		@ frame_needed = 0, uses_anonymous_args = 0
 6105              	.LVL268:
 6106 0000 84B0     		sub	sp, sp, #16
 6107              	.LCFI528:
 6108              		.cfi_def_cfa_offset 16
 6109 0002 30B5     		push	{r4, r5, lr}
 6110              	.LCFI529:
 6111              		.cfi_def_cfa_offset 28
 6112              		.cfi_offset 4, -28
 6113              		.cfi_offset 5, -24
 6114              		.cfi_offset 14, -20
 6115 0004 91B0     		sub	sp, sp, #68
 6116              	.LCFI530:
 6117              		.cfi_def_cfa_offset 96
 6118 0006 14AC     		add	r4, sp, #80
 6119 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 797:Src/B3M.c     **** 	B3M_Write_4B(huart, SERVO_ID, NEW_KD2, CONTROL_KD2);
 6120              		.loc 1 797 0
 6121 000c 8223     		movs	r3, #130
 6122 000e 0E93     		str	r3, [sp, #56]
 6123 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 6124 0014 0D93     		str	r3, [sp, #52]
 6125 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6126 001a 0C93     		str	r3, [sp, #48]
 6127 001c 6C46     		mov	r4, sp
 6128 001e 18AD     		add	r5, sp, #96
 6129 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6130 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6131 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6132 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6133 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6134 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6135 0030 14AB     		add	r3, sp, #80
 6136 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6137 0034 FFF7FEFF 		bl	B3M_Write_4B
 6138              	.LVL269:
 798:Src/B3M.c     **** 	return 0;
 799:Src/B3M.c     **** }
 6139              		.loc 1 799 0
 6140 0038 0020     		movs	r0, #0
 6141 003a 11B0     		add	sp, sp, #68
 6142              	.LCFI531:
 6143              		.cfi_def_cfa_offset 28
ARM GAS  /tmp/ccugrpsh.s 			page 120


 6144              		@ sp needed
 6145 003c BDE83040 		pop	{r4, r5, lr}
 6146              	.LCFI532:
 6147              		.cfi_restore 14
 6148              		.cfi_restore 5
 6149              		.cfi_restore 4
 6150              		.cfi_def_cfa_offset 16
 6151 0040 04B0     		add	sp, sp, #16
 6152              	.LCFI533:
 6153              		.cfi_def_cfa_offset 0
 6154 0042 7047     		bx	lr
 6155              		.cfi_endproc
 6156              	.LFE212:
 6158              		.section	.text.B3M_KI2_Read,"ax",%progbits
 6159              		.align	2
 6160              		.global	B3M_KI2_Read
 6161              		.thumb
 6162              		.thumb_func
 6164              	B3M_KI2_Read:
 6165              	.LFB213:
 800:Src/B3M.c     **** uint8_t B3M_KI2_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 801:Src/B3M.c     **** {
 6166              		.loc 1 801 0
 6167              		.cfi_startproc
 6168              		@ args = 68, pretend = 16, frame = 0
 6169              		@ frame_needed = 0, uses_anonymous_args = 0
 6170              	.LVL270:
 6171 0000 84B0     		sub	sp, sp, #16
 6172              	.LCFI534:
 6173              		.cfi_def_cfa_offset 16
 6174 0002 30B5     		push	{r4, r5, lr}
 6175              	.LCFI535:
 6176              		.cfi_def_cfa_offset 28
 6177              		.cfi_offset 4, -28
 6178              		.cfi_offset 5, -24
 6179              		.cfi_offset 14, -20
 6180 0004 91B0     		sub	sp, sp, #68
 6181              	.LCFI536:
 6182              		.cfi_def_cfa_offset 96
 6183 0006 14AC     		add	r4, sp, #80
 6184 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 802:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_KI2, READ_LENGTH_4B);
 6185              		.loc 1 802 0
 6186 000c 0423     		movs	r3, #4
 6187 000e 0E93     		str	r3, [sp, #56]
 6188 0010 8623     		movs	r3, #134
 6189 0012 0D93     		str	r3, [sp, #52]
 6190 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6191 0018 0C93     		str	r3, [sp, #48]
 6192 001a 6C46     		mov	r4, sp
 6193 001c 18AD     		add	r5, sp, #96
 6194 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6195 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6196 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6197 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6198 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6199 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 121


 6200 002e 14AB     		add	r3, sp, #80
 6201 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6202 0032 FFF7FEFF 		bl	B3M_Read
 6203              	.LVL271:
 803:Src/B3M.c     **** 	return 0;
 804:Src/B3M.c     **** }
 6204              		.loc 1 804 0
 6205 0036 0020     		movs	r0, #0
 6206 0038 11B0     		add	sp, sp, #68
 6207              	.LCFI537:
 6208              		.cfi_def_cfa_offset 28
 6209              		@ sp needed
 6210 003a BDE83040 		pop	{r4, r5, lr}
 6211              	.LCFI538:
 6212              		.cfi_restore 14
 6213              		.cfi_restore 5
 6214              		.cfi_restore 4
 6215              		.cfi_def_cfa_offset 16
 6216 003e 04B0     		add	sp, sp, #16
 6217              	.LCFI539:
 6218              		.cfi_def_cfa_offset 0
 6219 0040 7047     		bx	lr
 6220              		.cfi_endproc
 6221              	.LFE213:
 6223 0042 00BF     		.section	.text.B3M_KI2_Write,"ax",%progbits
 6224              		.align	2
 6225              		.global	B3M_KI2_Write
 6226              		.thumb
 6227              		.thumb_func
 6229              	B3M_KI2_Write:
 6230              	.LFB214:
 805:Src/B3M.c     **** uint8_t B3M_KI2_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_KI2)
 806:Src/B3M.c     **** {
 6231              		.loc 1 806 0
 6232              		.cfi_startproc
 6233              		@ args = 72, pretend = 16, frame = 0
 6234              		@ frame_needed = 0, uses_anonymous_args = 0
 6235              	.LVL272:
 6236 0000 84B0     		sub	sp, sp, #16
 6237              	.LCFI540:
 6238              		.cfi_def_cfa_offset 16
 6239 0002 30B5     		push	{r4, r5, lr}
 6240              	.LCFI541:
 6241              		.cfi_def_cfa_offset 28
 6242              		.cfi_offset 4, -28
 6243              		.cfi_offset 5, -24
 6244              		.cfi_offset 14, -20
 6245 0004 91B0     		sub	sp, sp, #68
 6246              	.LCFI542:
 6247              		.cfi_def_cfa_offset 96
 6248 0006 14AC     		add	r4, sp, #80
 6249 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 807:Src/B3M.c     **** 	B3M_Write_4B(huart, SERVO_ID, NEW_KI2, CONTROL_KI2);
 6250              		.loc 1 807 0
 6251 000c 8623     		movs	r3, #134
 6252 000e 0E93     		str	r3, [sp, #56]
 6253 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
ARM GAS  /tmp/ccugrpsh.s 			page 122


 6254 0014 0D93     		str	r3, [sp, #52]
 6255 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6256 001a 0C93     		str	r3, [sp, #48]
 6257 001c 6C46     		mov	r4, sp
 6258 001e 18AD     		add	r5, sp, #96
 6259 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6260 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6261 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6262 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6263 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6264 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6265 0030 14AB     		add	r3, sp, #80
 6266 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6267 0034 FFF7FEFF 		bl	B3M_Write_4B
 6268              	.LVL273:
 808:Src/B3M.c     **** 	return 0;
 809:Src/B3M.c     **** }
 6269              		.loc 1 809 0
 6270 0038 0020     		movs	r0, #0
 6271 003a 11B0     		add	sp, sp, #68
 6272              	.LCFI543:
 6273              		.cfi_def_cfa_offset 28
 6274              		@ sp needed
 6275 003c BDE83040 		pop	{r4, r5, lr}
 6276              	.LCFI544:
 6277              		.cfi_restore 14
 6278              		.cfi_restore 5
 6279              		.cfi_restore 4
 6280              		.cfi_def_cfa_offset 16
 6281 0040 04B0     		add	sp, sp, #16
 6282              	.LCFI545:
 6283              		.cfi_def_cfa_offset 0
 6284 0042 7047     		bx	lr
 6285              		.cfi_endproc
 6286              	.LFE214:
 6288              		.section	.text.B3M_StaticFriction2_Read,"ax",%progbits
 6289              		.align	2
 6290              		.global	B3M_StaticFriction2_Read
 6291              		.thumb
 6292              		.thumb_func
 6294              	B3M_StaticFriction2_Read:
 6295              	.LFB215:
 810:Src/B3M.c     **** uint8_t B3M_StaticFriction2_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 811:Src/B3M.c     **** {
 6296              		.loc 1 811 0
 6297              		.cfi_startproc
 6298              		@ args = 68, pretend = 16, frame = 0
 6299              		@ frame_needed = 0, uses_anonymous_args = 0
 6300              	.LVL274:
 6301 0000 84B0     		sub	sp, sp, #16
 6302              	.LCFI546:
 6303              		.cfi_def_cfa_offset 16
 6304 0002 30B5     		push	{r4, r5, lr}
 6305              	.LCFI547:
 6306              		.cfi_def_cfa_offset 28
 6307              		.cfi_offset 4, -28
 6308              		.cfi_offset 5, -24
ARM GAS  /tmp/ccugrpsh.s 			page 123


 6309              		.cfi_offset 14, -20
 6310 0004 91B0     		sub	sp, sp, #68
 6311              	.LCFI548:
 6312              		.cfi_def_cfa_offset 96
 6313 0006 14AC     		add	r4, sp, #80
 6314 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 812:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_STATIC_FRICTION2, READ_LENGTH_2B);
 6315              		.loc 1 812 0
 6316 000c 0223     		movs	r3, #2
 6317 000e 0E93     		str	r3, [sp, #56]
 6318 0010 8A23     		movs	r3, #138
 6319 0012 0D93     		str	r3, [sp, #52]
 6320 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6321 0018 0C93     		str	r3, [sp, #48]
 6322 001a 6C46     		mov	r4, sp
 6323 001c 18AD     		add	r5, sp, #96
 6324 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6325 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6326 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6327 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6328 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6329 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6330 002e 14AB     		add	r3, sp, #80
 6331 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6332 0032 FFF7FEFF 		bl	B3M_Read
 6333              	.LVL275:
 813:Src/B3M.c     **** 	return 0;
 814:Src/B3M.c     **** }
 6334              		.loc 1 814 0
 6335 0036 0020     		movs	r0, #0
 6336 0038 11B0     		add	sp, sp, #68
 6337              	.LCFI549:
 6338              		.cfi_def_cfa_offset 28
 6339              		@ sp needed
 6340 003a BDE83040 		pop	{r4, r5, lr}
 6341              	.LCFI550:
 6342              		.cfi_restore 14
 6343              		.cfi_restore 5
 6344              		.cfi_restore 4
 6345              		.cfi_def_cfa_offset 16
 6346 003e 04B0     		add	sp, sp, #16
 6347              	.LCFI551:
 6348              		.cfi_def_cfa_offset 0
 6349 0040 7047     		bx	lr
 6350              		.cfi_endproc
 6351              	.LFE215:
 6353 0042 00BF     		.section	.text.B3M_StaticFriction2_Write,"ax",%progbits
 6354              		.align	2
 6355              		.global	B3M_StaticFriction2_Write
 6356              		.thumb
 6357              		.thumb_func
 6359              	B3M_StaticFriction2_Write:
 6360              	.LFB216:
 815:Src/B3M.c     **** uint8_t B3M_StaticFriction2_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_STATIC_FR
 816:Src/B3M.c     **** {
 6361              		.loc 1 816 0
 6362              		.cfi_startproc
ARM GAS  /tmp/ccugrpsh.s 			page 124


 6363              		@ args = 72, pretend = 16, frame = 0
 6364              		@ frame_needed = 0, uses_anonymous_args = 0
 6365              	.LVL276:
 6366 0000 84B0     		sub	sp, sp, #16
 6367              	.LCFI552:
 6368              		.cfi_def_cfa_offset 16
 6369 0002 30B5     		push	{r4, r5, lr}
 6370              	.LCFI553:
 6371              		.cfi_def_cfa_offset 28
 6372              		.cfi_offset 4, -28
 6373              		.cfi_offset 5, -24
 6374              		.cfi_offset 14, -20
 6375 0004 91B0     		sub	sp, sp, #68
 6376              	.LCFI554:
 6377              		.cfi_def_cfa_offset 96
 6378 0006 14AC     		add	r4, sp, #80
 6379 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 817:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_STATIC_FRICTION2, CONTROL_STATIC_FRICTION2);
 6380              		.loc 1 817 0
 6381 000c 8A23     		movs	r3, #138
 6382 000e 0E93     		str	r3, [sp, #56]
 6383 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 6384 0014 0D93     		str	r3, [sp, #52]
 6385 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6386 001a 0C93     		str	r3, [sp, #48]
 6387 001c 6C46     		mov	r4, sp
 6388 001e 18AD     		add	r5, sp, #96
 6389 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6390 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6391 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6392 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6393 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6394 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6395 0030 14AB     		add	r3, sp, #80
 6396 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6397 0034 FFF7FEFF 		bl	B3M_Write_2B
 6398              	.LVL277:
 818:Src/B3M.c     **** 	return 0;
 819:Src/B3M.c     **** }
 6399              		.loc 1 819 0
 6400 0038 0020     		movs	r0, #0
 6401 003a 11B0     		add	sp, sp, #68
 6402              	.LCFI555:
 6403              		.cfi_def_cfa_offset 28
 6404              		@ sp needed
 6405 003c BDE83040 		pop	{r4, r5, lr}
 6406              	.LCFI556:
 6407              		.cfi_restore 14
 6408              		.cfi_restore 5
 6409              		.cfi_restore 4
 6410              		.cfi_def_cfa_offset 16
 6411 0040 04B0     		add	sp, sp, #16
 6412              	.LCFI557:
 6413              		.cfi_def_cfa_offset 0
 6414 0042 7047     		bx	lr
 6415              		.cfi_endproc
 6416              	.LFE216:
ARM GAS  /tmp/ccugrpsh.s 			page 125


 6418              		.section	.text.B3M_DynamicFriction2_Read,"ax",%progbits
 6419              		.align	2
 6420              		.global	B3M_DynamicFriction2_Read
 6421              		.thumb
 6422              		.thumb_func
 6424              	B3M_DynamicFriction2_Read:
 6425              	.LFB217:
 820:Src/B3M.c     **** uint8_t B3M_DynamicFriction2_Read(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 821:Src/B3M.c     **** {
 6426              		.loc 1 821 0
 6427              		.cfi_startproc
 6428              		@ args = 68, pretend = 16, frame = 0
 6429              		@ frame_needed = 0, uses_anonymous_args = 0
 6430              	.LVL278:
 6431 0000 84B0     		sub	sp, sp, #16
 6432              	.LCFI558:
 6433              		.cfi_def_cfa_offset 16
 6434 0002 30B5     		push	{r4, r5, lr}
 6435              	.LCFI559:
 6436              		.cfi_def_cfa_offset 28
 6437              		.cfi_offset 4, -28
 6438              		.cfi_offset 5, -24
 6439              		.cfi_offset 14, -20
 6440 0004 91B0     		sub	sp, sp, #68
 6441              	.LCFI560:
 6442              		.cfi_def_cfa_offset 96
 6443 0006 14AC     		add	r4, sp, #80
 6444 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 822:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONTROL_DYNAMIC_FRICTION2, READ_LENGTH_2B);
 6445              		.loc 1 822 0
 6446 000c 0223     		movs	r3, #2
 6447 000e 0E93     		str	r3, [sp, #56]
 6448 0010 8C23     		movs	r3, #140
 6449 0012 0D93     		str	r3, [sp, #52]
 6450 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6451 0018 0C93     		str	r3, [sp, #48]
 6452 001a 6C46     		mov	r4, sp
 6453 001c 18AD     		add	r5, sp, #96
 6454 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6455 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6456 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6457 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6458 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6459 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6460 002e 14AB     		add	r3, sp, #80
 6461 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6462 0032 FFF7FEFF 		bl	B3M_Read
 6463              	.LVL279:
 823:Src/B3M.c     **** 	return 0;
 824:Src/B3M.c     **** }
 6464              		.loc 1 824 0
 6465 0036 0020     		movs	r0, #0
 6466 0038 11B0     		add	sp, sp, #68
 6467              	.LCFI561:
 6468              		.cfi_def_cfa_offset 28
 6469              		@ sp needed
 6470 003a BDE83040 		pop	{r4, r5, lr}
ARM GAS  /tmp/ccugrpsh.s 			page 126


 6471              	.LCFI562:
 6472              		.cfi_restore 14
 6473              		.cfi_restore 5
 6474              		.cfi_restore 4
 6475              		.cfi_def_cfa_offset 16
 6476 003e 04B0     		add	sp, sp, #16
 6477              	.LCFI563:
 6478              		.cfi_def_cfa_offset 0
 6479 0040 7047     		bx	lr
 6480              		.cfi_endproc
 6481              	.LFE217:
 6483 0042 00BF     		.section	.text.B3M_DynamicFriction2_Write,"ax",%progbits
 6484              		.align	2
 6485              		.global	B3M_DynamicFriction2_Write
 6486              		.thumb
 6487              		.thumb_func
 6489              	B3M_DynamicFriction2_Write:
 6490              	.LFB218:
 825:Src/B3M.c     **** uint8_t B3M_DynamicFriction2_Write(UART_HandleTypeDef huart, uint8_t SERVO_ID, uint8_t NEW_DYNAMIC_
 826:Src/B3M.c     **** {
 6491              		.loc 1 826 0
 6492              		.cfi_startproc
 6493              		@ args = 72, pretend = 16, frame = 0
 6494              		@ frame_needed = 0, uses_anonymous_args = 0
 6495              	.LVL280:
 6496 0000 84B0     		sub	sp, sp, #16
 6497              	.LCFI564:
 6498              		.cfi_def_cfa_offset 16
 6499 0002 30B5     		push	{r4, r5, lr}
 6500              	.LCFI565:
 6501              		.cfi_def_cfa_offset 28
 6502              		.cfi_offset 4, -28
 6503              		.cfi_offset 5, -24
 6504              		.cfi_offset 14, -20
 6505 0004 91B0     		sub	sp, sp, #68
 6506              	.LCFI566:
 6507              		.cfi_def_cfa_offset 96
 6508 0006 14AC     		add	r4, sp, #80
 6509 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 827:Src/B3M.c     **** 	B3M_Write_2B(huart, SERVO_ID, NEW_DYNAMIC_FRICTION2, CONTROL_DYNAMIC_FRICTION2);
 6510              		.loc 1 827 0
 6511 000c 8C23     		movs	r3, #140
 6512 000e 0E93     		str	r3, [sp, #56]
 6513 0010 9DF89430 		ldrb	r3, [sp, #148]	@ zero_extendqisi2
 6514 0014 0D93     		str	r3, [sp, #52]
 6515 0016 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6516 001a 0C93     		str	r3, [sp, #48]
 6517 001c 6C46     		mov	r4, sp
 6518 001e 18AD     		add	r5, sp, #96
 6519 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6520 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6521 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6522 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6523 0028 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6524 002c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6525 0030 14AB     		add	r3, sp, #80
 6526 0032 0FCB     		ldmia	r3, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 127


 6527 0034 FFF7FEFF 		bl	B3M_Write_2B
 6528              	.LVL281:
 828:Src/B3M.c     **** 	return 0;
 829:Src/B3M.c     **** }
 6529              		.loc 1 829 0
 6530 0038 0020     		movs	r0, #0
 6531 003a 11B0     		add	sp, sp, #68
 6532              	.LCFI567:
 6533              		.cfi_def_cfa_offset 28
 6534              		@ sp needed
 6535 003c BDE83040 		pop	{r4, r5, lr}
 6536              	.LCFI568:
 6537              		.cfi_restore 14
 6538              		.cfi_restore 5
 6539              		.cfi_restore 4
 6540              		.cfi_def_cfa_offset 16
 6541 0040 04B0     		add	sp, sp, #16
 6542              	.LCFI569:
 6543              		.cfi_def_cfa_offset 0
 6544 0042 7047     		bx	lr
 6545              		.cfi_endproc
 6546              	.LFE218:
 6548              		.section	.text.B3M_StatusBaseADDR_ReadOnly,"ax",%progbits
 6549              		.align	2
 6550              		.global	B3M_StatusBaseADDR_ReadOnly
 6551              		.thumb
 6552              		.thumb_func
 6554              	B3M_StatusBaseADDR_ReadOnly:
 6555              	.LFB219:
 830:Src/B3M.c     **** 
 831:Src/B3M.c     **** /** Error Status Area Address'
 832:Src/B3M.c     **** */
 833:Src/B3M.c     **** 
 834:Src/B3M.c     **** uint8_t B3M_StatusBaseADDR_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 835:Src/B3M.c     **** {
 6556              		.loc 1 835 0
 6557              		.cfi_startproc
 6558              		@ args = 68, pretend = 16, frame = 0
 6559              		@ frame_needed = 0, uses_anonymous_args = 0
 6560              	.LVL282:
 6561 0000 84B0     		sub	sp, sp, #16
 6562              	.LCFI570:
 6563              		.cfi_def_cfa_offset 16
 6564 0002 30B5     		push	{r4, r5, lr}
 6565              	.LCFI571:
 6566              		.cfi_def_cfa_offset 28
 6567              		.cfi_offset 4, -28
 6568              		.cfi_offset 5, -24
 6569              		.cfi_offset 14, -20
 6570 0004 91B0     		sub	sp, sp, #68
 6571              	.LCFI572:
 6572              		.cfi_def_cfa_offset 96
 6573 0006 14AC     		add	r4, sp, #80
 6574 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 836:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, ERROR_STATUS_BASE_ADDR, READ_LENGTH_1B);
 6575              		.loc 1 836 0
 6576 000c 0123     		movs	r3, #1
ARM GAS  /tmp/ccugrpsh.s 			page 128


 6577 000e 0E93     		str	r3, [sp, #56]
 6578 0010 9D23     		movs	r3, #157
 6579 0012 0D93     		str	r3, [sp, #52]
 6580 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6581 0018 0C93     		str	r3, [sp, #48]
 6582 001a 6C46     		mov	r4, sp
 6583 001c 18AD     		add	r5, sp, #96
 6584 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6585 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6586 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6587 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6588 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6589 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6590 002e 14AB     		add	r3, sp, #80
 6591 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6592 0032 FFF7FEFF 		bl	B3M_Read
 6593              	.LVL283:
 837:Src/B3M.c     **** 	return 0;
 838:Src/B3M.c     **** }
 6594              		.loc 1 838 0
 6595 0036 0020     		movs	r0, #0
 6596 0038 11B0     		add	sp, sp, #68
 6597              	.LCFI573:
 6598              		.cfi_def_cfa_offset 28
 6599              		@ sp needed
 6600 003a BDE83040 		pop	{r4, r5, lr}
 6601              	.LCFI574:
 6602              		.cfi_restore 14
 6603              		.cfi_restore 5
 6604              		.cfi_restore 4
 6605              		.cfi_def_cfa_offset 16
 6606 003e 04B0     		add	sp, sp, #16
 6607              	.LCFI575:
 6608              		.cfi_def_cfa_offset 0
 6609 0040 7047     		bx	lr
 6610              		.cfi_endproc
 6611              	.LFE219:
 6613 0042 00BF     		.section	.text.B3M_StatusSystem_ReadOnly,"ax",%progbits
 6614              		.align	2
 6615              		.global	B3M_StatusSystem_ReadOnly
 6616              		.thumb
 6617              		.thumb_func
 6619              	B3M_StatusSystem_ReadOnly:
 6620              	.LFB220:
 839:Src/B3M.c     **** 
 840:Src/B3M.c     **** uint8_t B3M_StatusSystem_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 841:Src/B3M.c     **** {
 6621              		.loc 1 841 0
 6622              		.cfi_startproc
 6623              		@ args = 68, pretend = 16, frame = 0
 6624              		@ frame_needed = 0, uses_anonymous_args = 0
 6625              	.LVL284:
 6626 0000 84B0     		sub	sp, sp, #16
 6627              	.LCFI576:
 6628              		.cfi_def_cfa_offset 16
 6629 0002 30B5     		push	{r4, r5, lr}
 6630              	.LCFI577:
ARM GAS  /tmp/ccugrpsh.s 			page 129


 6631              		.cfi_def_cfa_offset 28
 6632              		.cfi_offset 4, -28
 6633              		.cfi_offset 5, -24
 6634              		.cfi_offset 14, -20
 6635 0004 91B0     		sub	sp, sp, #68
 6636              	.LCFI578:
 6637              		.cfi_def_cfa_offset 96
 6638 0006 14AC     		add	r4, sp, #80
 6639 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 842:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, ERROR_STATUS_SYSTEM, READ_LENGTH_4B);
 6640              		.loc 1 842 0
 6641 000c 0423     		movs	r3, #4
 6642 000e 0E93     		str	r3, [sp, #56]
 6643 0010 9E23     		movs	r3, #158
 6644 0012 0D93     		str	r3, [sp, #52]
 6645 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6646 0018 0C93     		str	r3, [sp, #48]
 6647 001a 6C46     		mov	r4, sp
 6648 001c 18AD     		add	r5, sp, #96
 6649 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6650 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6651 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6652 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6653 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6654 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6655 002e 14AB     		add	r3, sp, #80
 6656 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6657 0032 FFF7FEFF 		bl	B3M_Read
 6658              	.LVL285:
 843:Src/B3M.c     **** 	return 0;
 844:Src/B3M.c     **** }
 6659              		.loc 1 844 0
 6660 0036 0020     		movs	r0, #0
 6661 0038 11B0     		add	sp, sp, #68
 6662              	.LCFI579:
 6663              		.cfi_def_cfa_offset 28
 6664              		@ sp needed
 6665 003a BDE83040 		pop	{r4, r5, lr}
 6666              	.LCFI580:
 6667              		.cfi_restore 14
 6668              		.cfi_restore 5
 6669              		.cfi_restore 4
 6670              		.cfi_def_cfa_offset 16
 6671 003e 04B0     		add	sp, sp, #16
 6672              	.LCFI581:
 6673              		.cfi_def_cfa_offset 0
 6674 0040 7047     		bx	lr
 6675              		.cfi_endproc
 6676              	.LFE220:
 6678 0042 00BF     		.section	.text.B3M_StatusSytemError_ReadOnly,"ax",%progbits
 6679              		.align	2
 6680              		.global	B3M_StatusSytemError_ReadOnly
 6681              		.thumb
 6682              		.thumb_func
 6684              	B3M_StatusSytemError_ReadOnly:
 6685              	.LFB221:
 845:Src/B3M.c     **** 
ARM GAS  /tmp/ccugrpsh.s 			page 130


 846:Src/B3M.c     **** uint8_t B3M_StatusSytemError_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 847:Src/B3M.c     **** {
 6686              		.loc 1 847 0
 6687              		.cfi_startproc
 6688              		@ args = 68, pretend = 16, frame = 0
 6689              		@ frame_needed = 0, uses_anonymous_args = 0
 6690              	.LVL286:
 6691 0000 84B0     		sub	sp, sp, #16
 6692              	.LCFI582:
 6693              		.cfi_def_cfa_offset 16
 6694 0002 30B5     		push	{r4, r5, lr}
 6695              	.LCFI583:
 6696              		.cfi_def_cfa_offset 28
 6697              		.cfi_offset 4, -28
 6698              		.cfi_offset 5, -24
 6699              		.cfi_offset 14, -20
 6700 0004 91B0     		sub	sp, sp, #68
 6701              	.LCFI584:
 6702              		.cfi_def_cfa_offset 96
 6703 0006 14AC     		add	r4, sp, #80
 6704 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 848:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, ERROR_STATUS_SYSTEM_ERROR, READ_LENGTH_1B);
 6705              		.loc 1 848 0
 6706 000c 0123     		movs	r3, #1
 6707 000e 0E93     		str	r3, [sp, #56]
 6708 0010 9E23     		movs	r3, #158
 6709 0012 0D93     		str	r3, [sp, #52]
 6710 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6711 0018 0C93     		str	r3, [sp, #48]
 6712 001a 6C46     		mov	r4, sp
 6713 001c 18AD     		add	r5, sp, #96
 6714 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6715 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6716 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6717 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6718 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6719 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6720 002e 14AB     		add	r3, sp, #80
 6721 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6722 0032 FFF7FEFF 		bl	B3M_Read
 6723              	.LVL287:
 849:Src/B3M.c     **** 	return 0;
 850:Src/B3M.c     **** }
 6724              		.loc 1 850 0
 6725 0036 0020     		movs	r0, #0
 6726 0038 11B0     		add	sp, sp, #68
 6727              	.LCFI585:
 6728              		.cfi_def_cfa_offset 28
 6729              		@ sp needed
 6730 003a BDE83040 		pop	{r4, r5, lr}
 6731              	.LCFI586:
 6732              		.cfi_restore 14
 6733              		.cfi_restore 5
 6734              		.cfi_restore 4
 6735              		.cfi_def_cfa_offset 16
 6736 003e 04B0     		add	sp, sp, #16
 6737              	.LCFI587:
ARM GAS  /tmp/ccugrpsh.s 			page 131


 6738              		.cfi_def_cfa_offset 0
 6739 0040 7047     		bx	lr
 6740              		.cfi_endproc
 6741              	.LFE221:
 6743 0042 00BF     		.section	.text.B3M_StatusMotor_ReadOnly,"ax",%progbits
 6744              		.align	2
 6745              		.global	B3M_StatusMotor_ReadOnly
 6746              		.thumb
 6747              		.thumb_func
 6749              	B3M_StatusMotor_ReadOnly:
 6750              	.LFB222:
 851:Src/B3M.c     **** 
 852:Src/B3M.c     **** uint8_t B3M_StatusMotor_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 853:Src/B3M.c     **** {
 6751              		.loc 1 853 0
 6752              		.cfi_startproc
 6753              		@ args = 68, pretend = 16, frame = 0
 6754              		@ frame_needed = 0, uses_anonymous_args = 0
 6755              	.LVL288:
 6756 0000 84B0     		sub	sp, sp, #16
 6757              	.LCFI588:
 6758              		.cfi_def_cfa_offset 16
 6759 0002 30B5     		push	{r4, r5, lr}
 6760              	.LCFI589:
 6761              		.cfi_def_cfa_offset 28
 6762              		.cfi_offset 4, -28
 6763              		.cfi_offset 5, -24
 6764              		.cfi_offset 14, -20
 6765 0004 91B0     		sub	sp, sp, #68
 6766              	.LCFI590:
 6767              		.cfi_def_cfa_offset 96
 6768 0006 14AC     		add	r4, sp, #80
 6769 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 854:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, ERROR_STATUS_MOTOR, READ_LENGTH_1B);
 6770              		.loc 1 854 0
 6771 000c 0123     		movs	r3, #1
 6772 000e 0E93     		str	r3, [sp, #56]
 6773 0010 9F23     		movs	r3, #159
 6774 0012 0D93     		str	r3, [sp, #52]
 6775 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6776 0018 0C93     		str	r3, [sp, #48]
 6777 001a 6C46     		mov	r4, sp
 6778 001c 18AD     		add	r5, sp, #96
 6779 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6780 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6781 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6782 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6783 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6784 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6785 002e 14AB     		add	r3, sp, #80
 6786 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6787 0032 FFF7FEFF 		bl	B3M_Read
 6788              	.LVL289:
 855:Src/B3M.c     **** 	return 0;
 856:Src/B3M.c     **** }
 6789              		.loc 1 856 0
 6790 0036 0020     		movs	r0, #0
ARM GAS  /tmp/ccugrpsh.s 			page 132


 6791 0038 11B0     		add	sp, sp, #68
 6792              	.LCFI591:
 6793              		.cfi_def_cfa_offset 28
 6794              		@ sp needed
 6795 003a BDE83040 		pop	{r4, r5, lr}
 6796              	.LCFI592:
 6797              		.cfi_restore 14
 6798              		.cfi_restore 5
 6799              		.cfi_restore 4
 6800              		.cfi_def_cfa_offset 16
 6801 003e 04B0     		add	sp, sp, #16
 6802              	.LCFI593:
 6803              		.cfi_def_cfa_offset 0
 6804 0040 7047     		bx	lr
 6805              		.cfi_endproc
 6806              	.LFE222:
 6808 0042 00BF     		.section	.text.B3M_StatusUart_ReadOnly,"ax",%progbits
 6809              		.align	2
 6810              		.global	B3M_StatusUart_ReadOnly
 6811              		.thumb
 6812              		.thumb_func
 6814              	B3M_StatusUart_ReadOnly:
 6815              	.LFB223:
 857:Src/B3M.c     **** 
 858:Src/B3M.c     **** uint8_t B3M_StatusUart_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 859:Src/B3M.c     **** {
 6816              		.loc 1 859 0
 6817              		.cfi_startproc
 6818              		@ args = 68, pretend = 16, frame = 0
 6819              		@ frame_needed = 0, uses_anonymous_args = 0
 6820              	.LVL290:
 6821 0000 84B0     		sub	sp, sp, #16
 6822              	.LCFI594:
 6823              		.cfi_def_cfa_offset 16
 6824 0002 30B5     		push	{r4, r5, lr}
 6825              	.LCFI595:
 6826              		.cfi_def_cfa_offset 28
 6827              		.cfi_offset 4, -28
 6828              		.cfi_offset 5, -24
 6829              		.cfi_offset 14, -20
 6830 0004 91B0     		sub	sp, sp, #68
 6831              	.LCFI596:
 6832              		.cfi_def_cfa_offset 96
 6833 0006 14AC     		add	r4, sp, #80
 6834 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 860:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, ERROR_STATUS_UART, READ_LENGTH_1B);
 6835              		.loc 1 860 0
 6836 000c 0123     		movs	r3, #1
 6837 000e 0E93     		str	r3, [sp, #56]
 6838 0010 A023     		movs	r3, #160
 6839 0012 0D93     		str	r3, [sp, #52]
 6840 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6841 0018 0C93     		str	r3, [sp, #48]
 6842 001a 6C46     		mov	r4, sp
 6843 001c 18AD     		add	r5, sp, #96
 6844 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6845 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 133


 6846 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6847 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6848 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6849 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6850 002e 14AB     		add	r3, sp, #80
 6851 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6852 0032 FFF7FEFF 		bl	B3M_Read
 6853              	.LVL291:
 861:Src/B3M.c     **** 	return 0;
 862:Src/B3M.c     **** }
 6854              		.loc 1 862 0
 6855 0036 0020     		movs	r0, #0
 6856 0038 11B0     		add	sp, sp, #68
 6857              	.LCFI597:
 6858              		.cfi_def_cfa_offset 28
 6859              		@ sp needed
 6860 003a BDE83040 		pop	{r4, r5, lr}
 6861              	.LCFI598:
 6862              		.cfi_restore 14
 6863              		.cfi_restore 5
 6864              		.cfi_restore 4
 6865              		.cfi_def_cfa_offset 16
 6866 003e 04B0     		add	sp, sp, #16
 6867              	.LCFI599:
 6868              		.cfi_def_cfa_offset 0
 6869 0040 7047     		bx	lr
 6870              		.cfi_endproc
 6871              	.LFE223:
 6873 0042 00BF     		.section	.text.B3M_StatusCommand_ReadOnly,"ax",%progbits
 6874              		.align	2
 6875              		.global	B3M_StatusCommand_ReadOnly
 6876              		.thumb
 6877              		.thumb_func
 6879              	B3M_StatusCommand_ReadOnly:
 6880              	.LFB224:
 863:Src/B3M.c     **** 
 864:Src/B3M.c     **** uint8_t B3M_StatusCommand_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 865:Src/B3M.c     **** {
 6881              		.loc 1 865 0
 6882              		.cfi_startproc
 6883              		@ args = 68, pretend = 16, frame = 0
 6884              		@ frame_needed = 0, uses_anonymous_args = 0
 6885              	.LVL292:
 6886 0000 84B0     		sub	sp, sp, #16
 6887              	.LCFI600:
 6888              		.cfi_def_cfa_offset 16
 6889 0002 30B5     		push	{r4, r5, lr}
 6890              	.LCFI601:
 6891              		.cfi_def_cfa_offset 28
 6892              		.cfi_offset 4, -28
 6893              		.cfi_offset 5, -24
 6894              		.cfi_offset 14, -20
 6895 0004 91B0     		sub	sp, sp, #68
 6896              	.LCFI602:
 6897              		.cfi_def_cfa_offset 96
 6898 0006 14AC     		add	r4, sp, #80
 6899 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
ARM GAS  /tmp/ccugrpsh.s 			page 134


 866:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, ERROR_STATUS_COMMAND, READ_LENGTH_1B);
 6900              		.loc 1 866 0
 6901 000c 0123     		movs	r3, #1
 6902 000e 0E93     		str	r3, [sp, #56]
 6903 0010 A123     		movs	r3, #161
 6904 0012 0D93     		str	r3, [sp, #52]
 6905 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6906 0018 0C93     		str	r3, [sp, #48]
 6907 001a 6C46     		mov	r4, sp
 6908 001c 18AD     		add	r5, sp, #96
 6909 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6910 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6911 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6912 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6913 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6914 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6915 002e 14AB     		add	r3, sp, #80
 6916 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6917 0032 FFF7FEFF 		bl	B3M_Read
 6918              	.LVL293:
 867:Src/B3M.c     **** 	return 0;
 868:Src/B3M.c     **** }
 6919              		.loc 1 868 0
 6920 0036 0020     		movs	r0, #0
 6921 0038 11B0     		add	sp, sp, #68
 6922              	.LCFI603:
 6923              		.cfi_def_cfa_offset 28
 6924              		@ sp needed
 6925 003a BDE83040 		pop	{r4, r5, lr}
 6926              	.LCFI604:
 6927              		.cfi_restore 14
 6928              		.cfi_restore 5
 6929              		.cfi_restore 4
 6930              		.cfi_def_cfa_offset 16
 6931 003e 04B0     		add	sp, sp, #16
 6932              	.LCFI605:
 6933              		.cfi_def_cfa_offset 0
 6934 0040 7047     		bx	lr
 6935              		.cfi_endproc
 6936              	.LFE224:
 6938 0042 00BF     		.section	.text.B3M_ModelNumber_ReadOnly,"ax",%progbits
 6939              		.align	2
 6940              		.global	B3M_ModelNumber_ReadOnly
 6941              		.thumb
 6942              		.thumb_func
 6944              	B3M_ModelNumber_ReadOnly:
 6945              	.LFB225:
 869:Src/B3M.c     **** 
 870:Src/B3M.c     **** /** System Default Value, Version Information Area Address'
 871:Src/B3M.c     **** */
 872:Src/B3M.c     **** 
 873:Src/B3M.c     **** uint8_t B3M_ModelNumber_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 874:Src/B3M.c     **** {
 6946              		.loc 1 874 0
 6947              		.cfi_startproc
 6948              		@ args = 68, pretend = 16, frame = 0
 6949              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccugrpsh.s 			page 135


 6950              	.LVL294:
 6951 0000 84B0     		sub	sp, sp, #16
 6952              	.LCFI606:
 6953              		.cfi_def_cfa_offset 16
 6954 0002 30B5     		push	{r4, r5, lr}
 6955              	.LCFI607:
 6956              		.cfi_def_cfa_offset 28
 6957              		.cfi_offset 4, -28
 6958              		.cfi_offset 5, -24
 6959              		.cfi_offset 14, -20
 6960 0004 91B0     		sub	sp, sp, #68
 6961              	.LCFI608:
 6962              		.cfi_def_cfa_offset 96
 6963 0006 14AC     		add	r4, sp, #80
 6964 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 875:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_MODEL_NUMBER, READ_LENGTH_4B);
 6965              		.loc 1 875 0
 6966 000c 0423     		movs	r3, #4
 6967 000e 0E93     		str	r3, [sp, #56]
 6968 0010 A223     		movs	r3, #162
 6969 0012 0D93     		str	r3, [sp, #52]
 6970 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 6971 0018 0C93     		str	r3, [sp, #48]
 6972 001a 6C46     		mov	r4, sp
 6973 001c 18AD     		add	r5, sp, #96
 6974 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6975 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6976 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6977 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6978 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 6979 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 6980 002e 14AB     		add	r3, sp, #80
 6981 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6982 0032 FFF7FEFF 		bl	B3M_Read
 6983              	.LVL295:
 876:Src/B3M.c     **** 	return 0;
 877:Src/B3M.c     **** }
 6984              		.loc 1 877 0
 6985 0036 0020     		movs	r0, #0
 6986 0038 11B0     		add	sp, sp, #68
 6987              	.LCFI609:
 6988              		.cfi_def_cfa_offset 28
 6989              		@ sp needed
 6990 003a BDE83040 		pop	{r4, r5, lr}
 6991              	.LCFI610:
 6992              		.cfi_restore 14
 6993              		.cfi_restore 5
 6994              		.cfi_restore 4
 6995              		.cfi_def_cfa_offset 16
 6996 003e 04B0     		add	sp, sp, #16
 6997              	.LCFI611:
 6998              		.cfi_def_cfa_offset 0
 6999 0040 7047     		bx	lr
 7000              		.cfi_endproc
 7001              	.LFE225:
 7003 0042 00BF     		.section	.text.B3M_ModelNumberVoltageClass_ReadOnly,"ax",%progbits
 7004              		.align	2
ARM GAS  /tmp/ccugrpsh.s 			page 136


 7005              		.global	B3M_ModelNumberVoltageClass_ReadOnly
 7006              		.thumb
 7007              		.thumb_func
 7009              	B3M_ModelNumberVoltageClass_ReadOnly:
 7010              	.LFB226:
 878:Src/B3M.c     **** uint8_t B3M_ModelNumberVoltageClass_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 879:Src/B3M.c     **** {
 7011              		.loc 1 879 0
 7012              		.cfi_startproc
 7013              		@ args = 68, pretend = 16, frame = 0
 7014              		@ frame_needed = 0, uses_anonymous_args = 0
 7015              	.LVL296:
 7016 0000 84B0     		sub	sp, sp, #16
 7017              	.LCFI612:
 7018              		.cfi_def_cfa_offset 16
 7019 0002 30B5     		push	{r4, r5, lr}
 7020              	.LCFI613:
 7021              		.cfi_def_cfa_offset 28
 7022              		.cfi_offset 4, -28
 7023              		.cfi_offset 5, -24
 7024              		.cfi_offset 14, -20
 7025 0004 91B0     		sub	sp, sp, #68
 7026              	.LCFI614:
 7027              		.cfi_def_cfa_offset 96
 7028 0006 14AC     		add	r4, sp, #80
 7029 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 880:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_MODEL_NUMBER_VOLTAGE_CLASS, READ_LENGTH_1B);
 7030              		.loc 1 880 0
 7031 000c 0123     		movs	r3, #1
 7032 000e 0E93     		str	r3, [sp, #56]
 7033 0010 A223     		movs	r3, #162
 7034 0012 0D93     		str	r3, [sp, #52]
 7035 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 7036 0018 0C93     		str	r3, [sp, #48]
 7037 001a 6C46     		mov	r4, sp
 7038 001c 18AD     		add	r5, sp, #96
 7039 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7040 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7041 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7042 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7043 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 7044 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 7045 002e 14AB     		add	r3, sp, #80
 7046 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7047 0032 FFF7FEFF 		bl	B3M_Read
 7048              	.LVL297:
 881:Src/B3M.c     **** 	return 0;
 882:Src/B3M.c     **** }
 7049              		.loc 1 882 0
 7050 0036 0020     		movs	r0, #0
 7051 0038 11B0     		add	sp, sp, #68
 7052              	.LCFI615:
 7053              		.cfi_def_cfa_offset 28
 7054              		@ sp needed
 7055 003a BDE83040 		pop	{r4, r5, lr}
 7056              	.LCFI616:
 7057              		.cfi_restore 14
ARM GAS  /tmp/ccugrpsh.s 			page 137


 7058              		.cfi_restore 5
 7059              		.cfi_restore 4
 7060              		.cfi_def_cfa_offset 16
 7061 003e 04B0     		add	sp, sp, #16
 7062              	.LCFI617:
 7063              		.cfi_def_cfa_offset 0
 7064 0040 7047     		bx	lr
 7065              		.cfi_endproc
 7066              	.LFE226:
 7068 0042 00BF     		.section	.text.B3M_ModelNumberVersion_ReadOnly,"ax",%progbits
 7069              		.align	2
 7070              		.global	B3M_ModelNumberVersion_ReadOnly
 7071              		.thumb
 7072              		.thumb_func
 7074              	B3M_ModelNumberVersion_ReadOnly:
 7075              	.LFB227:
 883:Src/B3M.c     **** uint8_t B3M_ModelNumberVersion_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 884:Src/B3M.c     **** {
 7076              		.loc 1 884 0
 7077              		.cfi_startproc
 7078              		@ args = 68, pretend = 16, frame = 0
 7079              		@ frame_needed = 0, uses_anonymous_args = 0
 7080              	.LVL298:
 7081 0000 84B0     		sub	sp, sp, #16
 7082              	.LCFI618:
 7083              		.cfi_def_cfa_offset 16
 7084 0002 30B5     		push	{r4, r5, lr}
 7085              	.LCFI619:
 7086              		.cfi_def_cfa_offset 28
 7087              		.cfi_offset 4, -28
 7088              		.cfi_offset 5, -24
 7089              		.cfi_offset 14, -20
 7090 0004 91B0     		sub	sp, sp, #68
 7091              	.LCFI620:
 7092              		.cfi_def_cfa_offset 96
 7093 0006 14AC     		add	r4, sp, #80
 7094 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 885:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_MODEL_NUMBER_VERSION, READ_LENGTH_1B);
 7095              		.loc 1 885 0
 7096 000c 0123     		movs	r3, #1
 7097 000e 0E93     		str	r3, [sp, #56]
 7098 0010 A323     		movs	r3, #163
 7099 0012 0D93     		str	r3, [sp, #52]
 7100 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 7101 0018 0C93     		str	r3, [sp, #48]
 7102 001a 6C46     		mov	r4, sp
 7103 001c 18AD     		add	r5, sp, #96
 7104 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7105 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7106 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7107 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7108 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 7109 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 7110 002e 14AB     		add	r3, sp, #80
 7111 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7112 0032 FFF7FEFF 		bl	B3M_Read
 7113              	.LVL299:
ARM GAS  /tmp/ccugrpsh.s 			page 138


 886:Src/B3M.c     **** 	return 0;
 887:Src/B3M.c     **** }
 7114              		.loc 1 887 0
 7115 0036 0020     		movs	r0, #0
 7116 0038 11B0     		add	sp, sp, #68
 7117              	.LCFI621:
 7118              		.cfi_def_cfa_offset 28
 7119              		@ sp needed
 7120 003a BDE83040 		pop	{r4, r5, lr}
 7121              	.LCFI622:
 7122              		.cfi_restore 14
 7123              		.cfi_restore 5
 7124              		.cfi_restore 4
 7125              		.cfi_def_cfa_offset 16
 7126 003e 04B0     		add	sp, sp, #16
 7127              	.LCFI623:
 7128              		.cfi_def_cfa_offset 0
 7129 0040 7047     		bx	lr
 7130              		.cfi_endproc
 7131              	.LFE227:
 7133 0042 00BF     		.section	.text.B3M_ModelNumberTorque_ReadOnly,"ax",%progbits
 7134              		.align	2
 7135              		.global	B3M_ModelNumberTorque_ReadOnly
 7136              		.thumb
 7137              		.thumb_func
 7139              	B3M_ModelNumberTorque_ReadOnly:
 7140              	.LFB228:
 888:Src/B3M.c     **** uint8_t B3M_ModelNumberTorque_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 889:Src/B3M.c     **** {
 7141              		.loc 1 889 0
 7142              		.cfi_startproc
 7143              		@ args = 68, pretend = 16, frame = 0
 7144              		@ frame_needed = 0, uses_anonymous_args = 0
 7145              	.LVL300:
 7146 0000 84B0     		sub	sp, sp, #16
 7147              	.LCFI624:
 7148              		.cfi_def_cfa_offset 16
 7149 0002 30B5     		push	{r4, r5, lr}
 7150              	.LCFI625:
 7151              		.cfi_def_cfa_offset 28
 7152              		.cfi_offset 4, -28
 7153              		.cfi_offset 5, -24
 7154              		.cfi_offset 14, -20
 7155 0004 91B0     		sub	sp, sp, #68
 7156              	.LCFI626:
 7157              		.cfi_def_cfa_offset 96
 7158 0006 14AC     		add	r4, sp, #80
 7159 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 890:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_MODEL_NUMBER_TORQUE, READ_LENGTH_1B);
 7160              		.loc 1 890 0
 7161 000c 0123     		movs	r3, #1
 7162 000e 0E93     		str	r3, [sp, #56]
 7163 0010 A423     		movs	r3, #164
 7164 0012 0D93     		str	r3, [sp, #52]
 7165 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 7166 0018 0C93     		str	r3, [sp, #48]
 7167 001a 6C46     		mov	r4, sp
ARM GAS  /tmp/ccugrpsh.s 			page 139


 7168 001c 18AD     		add	r5, sp, #96
 7169 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7170 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7171 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7172 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7173 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 7174 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 7175 002e 14AB     		add	r3, sp, #80
 7176 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7177 0032 FFF7FEFF 		bl	B3M_Read
 7178              	.LVL301:
 891:Src/B3M.c     **** 	return 0;
 892:Src/B3M.c     **** }
 7179              		.loc 1 892 0
 7180 0036 0020     		movs	r0, #0
 7181 0038 11B0     		add	sp, sp, #68
 7182              	.LCFI627:
 7183              		.cfi_def_cfa_offset 28
 7184              		@ sp needed
 7185 003a BDE83040 		pop	{r4, r5, lr}
 7186              	.LCFI628:
 7187              		.cfi_restore 14
 7188              		.cfi_restore 5
 7189              		.cfi_restore 4
 7190              		.cfi_def_cfa_offset 16
 7191 003e 04B0     		add	sp, sp, #16
 7192              	.LCFI629:
 7193              		.cfi_def_cfa_offset 0
 7194 0040 7047     		bx	lr
 7195              		.cfi_endproc
 7196              	.LFE228:
 7198 0042 00BF     		.section	.text.B3M_ModelNumberCase_ReadOnly,"ax",%progbits
 7199              		.align	2
 7200              		.global	B3M_ModelNumberCase_ReadOnly
 7201              		.thumb
 7202              		.thumb_func
 7204              	B3M_ModelNumberCase_ReadOnly:
 7205              	.LFB229:
 893:Src/B3M.c     **** uint8_t B3M_ModelNumberCase_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 894:Src/B3M.c     **** {
 7206              		.loc 1 894 0
 7207              		.cfi_startproc
 7208              		@ args = 68, pretend = 16, frame = 0
 7209              		@ frame_needed = 0, uses_anonymous_args = 0
 7210              	.LVL302:
 7211 0000 84B0     		sub	sp, sp, #16
 7212              	.LCFI630:
 7213              		.cfi_def_cfa_offset 16
 7214 0002 30B5     		push	{r4, r5, lr}
 7215              	.LCFI631:
 7216              		.cfi_def_cfa_offset 28
 7217              		.cfi_offset 4, -28
 7218              		.cfi_offset 5, -24
 7219              		.cfi_offset 14, -20
 7220 0004 91B0     		sub	sp, sp, #68
 7221              	.LCFI632:
 7222              		.cfi_def_cfa_offset 96
ARM GAS  /tmp/ccugrpsh.s 			page 140


 7223 0006 14AC     		add	r4, sp, #80
 7224 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 895:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_MODEL_NUMBER_CASE, READ_LENGTH_1B);
 7225              		.loc 1 895 0
 7226 000c 0123     		movs	r3, #1
 7227 000e 0E93     		str	r3, [sp, #56]
 7228 0010 A523     		movs	r3, #165
 7229 0012 0D93     		str	r3, [sp, #52]
 7230 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 7231 0018 0C93     		str	r3, [sp, #48]
 7232 001a 6C46     		mov	r4, sp
 7233 001c 18AD     		add	r5, sp, #96
 7234 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7235 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7236 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7237 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7238 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 7239 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 7240 002e 14AB     		add	r3, sp, #80
 7241 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7242 0032 FFF7FEFF 		bl	B3M_Read
 7243              	.LVL303:
 896:Src/B3M.c     **** 	return 0;
 897:Src/B3M.c     **** }
 7244              		.loc 1 897 0
 7245 0036 0020     		movs	r0, #0
 7246 0038 11B0     		add	sp, sp, #68
 7247              	.LCFI633:
 7248              		.cfi_def_cfa_offset 28
 7249              		@ sp needed
 7250 003a BDE83040 		pop	{r4, r5, lr}
 7251              	.LCFI634:
 7252              		.cfi_restore 14
 7253              		.cfi_restore 5
 7254              		.cfi_restore 4
 7255              		.cfi_def_cfa_offset 16
 7256 003e 04B0     		add	sp, sp, #16
 7257              	.LCFI635:
 7258              		.cfi_def_cfa_offset 0
 7259 0040 7047     		bx	lr
 7260              		.cfi_endproc
 7261              	.LFE229:
 7263 0042 00BF     		.section	.text.B3M_ModelType_ReadOnly,"ax",%progbits
 7264              		.align	2
 7265              		.global	B3M_ModelType_ReadOnly
 7266              		.thumb
 7267              		.thumb_func
 7269              	B3M_ModelType_ReadOnly:
 7270              	.LFB230:
 898:Src/B3M.c     **** uint8_t B3M_ModelType_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 899:Src/B3M.c     **** {
 7271              		.loc 1 899 0
 7272              		.cfi_startproc
 7273              		@ args = 68, pretend = 16, frame = 0
 7274              		@ frame_needed = 0, uses_anonymous_args = 0
 7275              	.LVL304:
 7276 0000 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/ccugrpsh.s 			page 141


 7277              	.LCFI636:
 7278              		.cfi_def_cfa_offset 16
 7279 0002 30B5     		push	{r4, r5, lr}
 7280              	.LCFI637:
 7281              		.cfi_def_cfa_offset 28
 7282              		.cfi_offset 4, -28
 7283              		.cfi_offset 5, -24
 7284              		.cfi_offset 14, -20
 7285 0004 91B0     		sub	sp, sp, #68
 7286              	.LCFI638:
 7287              		.cfi_def_cfa_offset 96
 7288 0006 14AC     		add	r4, sp, #80
 7289 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 900:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_MODEL_TYPE, READ_LENGTH_4B);
 7290              		.loc 1 900 0
 7291 000c 0423     		movs	r3, #4
 7292 000e 0E93     		str	r3, [sp, #56]
 7293 0010 A623     		movs	r3, #166
 7294 0012 0D93     		str	r3, [sp, #52]
 7295 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 7296 0018 0C93     		str	r3, [sp, #48]
 7297 001a 6C46     		mov	r4, sp
 7298 001c 18AD     		add	r5, sp, #96
 7299 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7300 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7301 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7302 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7303 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 7304 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 7305 002e 14AB     		add	r3, sp, #80
 7306 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7307 0032 FFF7FEFF 		bl	B3M_Read
 7308              	.LVL305:
 901:Src/B3M.c     **** 	return 0;
 902:Src/B3M.c     **** }
 7309              		.loc 1 902 0
 7310 0036 0020     		movs	r0, #0
 7311 0038 11B0     		add	sp, sp, #68
 7312              	.LCFI639:
 7313              		.cfi_def_cfa_offset 28
 7314              		@ sp needed
 7315 003a BDE83040 		pop	{r4, r5, lr}
 7316              	.LCFI640:
 7317              		.cfi_restore 14
 7318              		.cfi_restore 5
 7319              		.cfi_restore 4
 7320              		.cfi_def_cfa_offset 16
 7321 003e 04B0     		add	sp, sp, #16
 7322              	.LCFI641:
 7323              		.cfi_def_cfa_offset 0
 7324 0040 7047     		bx	lr
 7325              		.cfi_endproc
 7326              	.LFE230:
 7328 0042 00BF     		.section	.text.B3M_ModelTypeMotor_ReadOnly,"ax",%progbits
 7329              		.align	2
 7330              		.global	B3M_ModelTypeMotor_ReadOnly
 7331              		.thumb
ARM GAS  /tmp/ccugrpsh.s 			page 142


 7332              		.thumb_func
 7334              	B3M_ModelTypeMotor_ReadOnly:
 7335              	.LFB231:
 903:Src/B3M.c     **** 
 904:Src/B3M.c     **** uint8_t B3M_ModelTypeMotor_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 905:Src/B3M.c     **** {
 7336              		.loc 1 905 0
 7337              		.cfi_startproc
 7338              		@ args = 68, pretend = 16, frame = 0
 7339              		@ frame_needed = 0, uses_anonymous_args = 0
 7340              	.LVL306:
 7341 0000 84B0     		sub	sp, sp, #16
 7342              	.LCFI642:
 7343              		.cfi_def_cfa_offset 16
 7344 0002 30B5     		push	{r4, r5, lr}
 7345              	.LCFI643:
 7346              		.cfi_def_cfa_offset 28
 7347              		.cfi_offset 4, -28
 7348              		.cfi_offset 5, -24
 7349              		.cfi_offset 14, -20
 7350 0004 91B0     		sub	sp, sp, #68
 7351              	.LCFI644:
 7352              		.cfi_def_cfa_offset 96
 7353 0006 14AC     		add	r4, sp, #80
 7354 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 906:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_MODEL_TYPE_MOTOR, READ_LENGTH_1B);
 7355              		.loc 1 906 0
 7356 000c 0123     		movs	r3, #1
 7357 000e 0E93     		str	r3, [sp, #56]
 7358 0010 A823     		movs	r3, #168
 7359 0012 0D93     		str	r3, [sp, #52]
 7360 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 7361 0018 0C93     		str	r3, [sp, #48]
 7362 001a 6C46     		mov	r4, sp
 7363 001c 18AD     		add	r5, sp, #96
 7364 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7365 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7366 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7367 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7368 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 7369 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 7370 002e 14AB     		add	r3, sp, #80
 7371 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7372 0032 FFF7FEFF 		bl	B3M_Read
 7373              	.LVL307:
 907:Src/B3M.c     **** 	return 0;
 908:Src/B3M.c     **** }
 7374              		.loc 1 908 0
 7375 0036 0020     		movs	r0, #0
 7376 0038 11B0     		add	sp, sp, #68
 7377              	.LCFI645:
 7378              		.cfi_def_cfa_offset 28
 7379              		@ sp needed
 7380 003a BDE83040 		pop	{r4, r5, lr}
 7381              	.LCFI646:
 7382              		.cfi_restore 14
 7383              		.cfi_restore 5
ARM GAS  /tmp/ccugrpsh.s 			page 143


 7384              		.cfi_restore 4
 7385              		.cfi_def_cfa_offset 16
 7386 003e 04B0     		add	sp, sp, #16
 7387              	.LCFI647:
 7388              		.cfi_def_cfa_offset 0
 7389 0040 7047     		bx	lr
 7390              		.cfi_endproc
 7391              	.LFE231:
 7393 0042 00BF     		.section	.text.B3M_ModelTypeDevice_ReadOnly,"ax",%progbits
 7394              		.align	2
 7395              		.global	B3M_ModelTypeDevice_ReadOnly
 7396              		.thumb
 7397              		.thumb_func
 7399              	B3M_ModelTypeDevice_ReadOnly:
 7400              	.LFB232:
 909:Src/B3M.c     **** 
 910:Src/B3M.c     **** uint8_t B3M_ModelTypeDevice_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 911:Src/B3M.c     **** {
 7401              		.loc 1 911 0
 7402              		.cfi_startproc
 7403              		@ args = 68, pretend = 16, frame = 0
 7404              		@ frame_needed = 0, uses_anonymous_args = 0
 7405              	.LVL308:
 7406 0000 84B0     		sub	sp, sp, #16
 7407              	.LCFI648:
 7408              		.cfi_def_cfa_offset 16
 7409 0002 30B5     		push	{r4, r5, lr}
 7410              	.LCFI649:
 7411              		.cfi_def_cfa_offset 28
 7412              		.cfi_offset 4, -28
 7413              		.cfi_offset 5, -24
 7414              		.cfi_offset 14, -20
 7415 0004 91B0     		sub	sp, sp, #68
 7416              	.LCFI650:
 7417              		.cfi_def_cfa_offset 96
 7418 0006 14AC     		add	r4, sp, #80
 7419 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 912:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_MODEL_TYPE_DEVICE, READ_LENGTH_1B);
 7420              		.loc 1 912 0
 7421 000c 0123     		movs	r3, #1
 7422 000e 0E93     		str	r3, [sp, #56]
 7423 0010 A923     		movs	r3, #169
 7424 0012 0D93     		str	r3, [sp, #52]
 7425 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 7426 0018 0C93     		str	r3, [sp, #48]
 7427 001a 6C46     		mov	r4, sp
 7428 001c 18AD     		add	r5, sp, #96
 7429 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7430 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7431 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7432 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7433 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 7434 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 7435 002e 14AB     		add	r3, sp, #80
 7436 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7437 0032 FFF7FEFF 		bl	B3M_Read
 7438              	.LVL309:
ARM GAS  /tmp/ccugrpsh.s 			page 144


 913:Src/B3M.c     **** 	return 0;
 914:Src/B3M.c     **** }
 7439              		.loc 1 914 0
 7440 0036 0020     		movs	r0, #0
 7441 0038 11B0     		add	sp, sp, #68
 7442              	.LCFI651:
 7443              		.cfi_def_cfa_offset 28
 7444              		@ sp needed
 7445 003a BDE83040 		pop	{r4, r5, lr}
 7446              	.LCFI652:
 7447              		.cfi_restore 14
 7448              		.cfi_restore 5
 7449              		.cfi_restore 4
 7450              		.cfi_def_cfa_offset 16
 7451 003e 04B0     		add	sp, sp, #16
 7452              	.LCFI653:
 7453              		.cfi_def_cfa_offset 0
 7454 0040 7047     		bx	lr
 7455              		.cfi_endproc
 7456              	.LFE232:
 7458 0042 00BF     		.section	.text.B3M_FWVersion_ReadOnly,"ax",%progbits
 7459              		.align	2
 7460              		.global	B3M_FWVersion_ReadOnly
 7461              		.thumb
 7462              		.thumb_func
 7464              	B3M_FWVersion_ReadOnly:
 7465              	.LFB233:
 915:Src/B3M.c     **** 
 916:Src/B3M.c     **** uint8_t B3M_FWVersion_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 917:Src/B3M.c     **** {
 7466              		.loc 1 917 0
 7467              		.cfi_startproc
 7468              		@ args = 68, pretend = 16, frame = 0
 7469              		@ frame_needed = 0, uses_anonymous_args = 0
 7470              	.LVL310:
 7471 0000 84B0     		sub	sp, sp, #16
 7472              	.LCFI654:
 7473              		.cfi_def_cfa_offset 16
 7474 0002 30B5     		push	{r4, r5, lr}
 7475              	.LCFI655:
 7476              		.cfi_def_cfa_offset 28
 7477              		.cfi_offset 4, -28
 7478              		.cfi_offset 5, -24
 7479              		.cfi_offset 14, -20
 7480 0004 91B0     		sub	sp, sp, #68
 7481              	.LCFI656:
 7482              		.cfi_def_cfa_offset 96
 7483 0006 14AC     		add	r4, sp, #80
 7484 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 918:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_FW_VERSION, READ_LENGTH_4B);
 7485              		.loc 1 918 0
 7486 000c 0423     		movs	r3, #4
 7487 000e 0E93     		str	r3, [sp, #56]
 7488 0010 AA23     		movs	r3, #170
 7489 0012 0D93     		str	r3, [sp, #52]
 7490 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 7491 0018 0C93     		str	r3, [sp, #48]
ARM GAS  /tmp/ccugrpsh.s 			page 145


 7492 001a 6C46     		mov	r4, sp
 7493 001c 18AD     		add	r5, sp, #96
 7494 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7495 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7496 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7497 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7498 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 7499 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 7500 002e 14AB     		add	r3, sp, #80
 7501 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7502 0032 FFF7FEFF 		bl	B3M_Read
 7503              	.LVL311:
 919:Src/B3M.c     **** 	return 0;
 920:Src/B3M.c     **** }
 7504              		.loc 1 920 0
 7505 0036 0020     		movs	r0, #0
 7506 0038 11B0     		add	sp, sp, #68
 7507              	.LCFI657:
 7508              		.cfi_def_cfa_offset 28
 7509              		@ sp needed
 7510 003a BDE83040 		pop	{r4, r5, lr}
 7511              	.LCFI658:
 7512              		.cfi_restore 14
 7513              		.cfi_restore 5
 7514              		.cfi_restore 4
 7515              		.cfi_def_cfa_offset 16
 7516 003e 04B0     		add	sp, sp, #16
 7517              	.LCFI659:
 7518              		.cfi_def_cfa_offset 0
 7519 0040 7047     		bx	lr
 7520              		.cfi_endproc
 7521              	.LFE233:
 7523 0042 00BF     		.section	.text.B3M_FWRevision_ReadOnly,"ax",%progbits
 7524              		.align	2
 7525              		.global	B3M_FWRevision_ReadOnly
 7526              		.thumb
 7527              		.thumb_func
 7529              	B3M_FWRevision_ReadOnly:
 7530              	.LFB234:
 921:Src/B3M.c     **** 
 922:Src/B3M.c     **** uint8_t B3M_FWRevision_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 923:Src/B3M.c     **** {
 7531              		.loc 1 923 0
 7532              		.cfi_startproc
 7533              		@ args = 68, pretend = 16, frame = 0
 7534              		@ frame_needed = 0, uses_anonymous_args = 0
 7535              	.LVL312:
 7536 0000 84B0     		sub	sp, sp, #16
 7537              	.LCFI660:
 7538              		.cfi_def_cfa_offset 16
 7539 0002 30B5     		push	{r4, r5, lr}
 7540              	.LCFI661:
 7541              		.cfi_def_cfa_offset 28
 7542              		.cfi_offset 4, -28
 7543              		.cfi_offset 5, -24
 7544              		.cfi_offset 14, -20
 7545 0004 91B0     		sub	sp, sp, #68
ARM GAS  /tmp/ccugrpsh.s 			page 146


 7546              	.LCFI662:
 7547              		.cfi_def_cfa_offset 96
 7548 0006 14AC     		add	r4, sp, #80
 7549 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 924:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_FW_REVISION, READ_LENGTH_1B);
 7550              		.loc 1 924 0
 7551 000c 0123     		movs	r3, #1
 7552 000e 0E93     		str	r3, [sp, #56]
 7553 0010 AB23     		movs	r3, #171
 7554 0012 0D93     		str	r3, [sp, #52]
 7555 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 7556 0018 0C93     		str	r3, [sp, #48]
 7557 001a 6C46     		mov	r4, sp
 7558 001c 18AD     		add	r5, sp, #96
 7559 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7560 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7561 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7562 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7563 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 7564 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 7565 002e 14AB     		add	r3, sp, #80
 7566 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7567 0032 FFF7FEFF 		bl	B3M_Read
 7568              	.LVL313:
 925:Src/B3M.c     **** 	return 0;
 926:Src/B3M.c     **** }
 7569              		.loc 1 926 0
 7570 0036 0020     		movs	r0, #0
 7571 0038 11B0     		add	sp, sp, #68
 7572              	.LCFI663:
 7573              		.cfi_def_cfa_offset 28
 7574              		@ sp needed
 7575 003a BDE83040 		pop	{r4, r5, lr}
 7576              	.LCFI664:
 7577              		.cfi_restore 14
 7578              		.cfi_restore 5
 7579              		.cfi_restore 4
 7580              		.cfi_def_cfa_offset 16
 7581 003e 04B0     		add	sp, sp, #16
 7582              	.LCFI665:
 7583              		.cfi_def_cfa_offset 0
 7584 0040 7047     		bx	lr
 7585              		.cfi_endproc
 7586              	.LFE234:
 7588 0042 00BF     		.section	.text.B3M_FWMinor_ReadOnly,"ax",%progbits
 7589              		.align	2
 7590              		.global	B3M_FWMinor_ReadOnly
 7591              		.thumb
 7592              		.thumb_func
 7594              	B3M_FWMinor_ReadOnly:
 7595              	.LFB235:
 927:Src/B3M.c     **** 
 928:Src/B3M.c     **** uint8_t B3M_FWMinor_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 929:Src/B3M.c     **** {
 7596              		.loc 1 929 0
 7597              		.cfi_startproc
 7598              		@ args = 68, pretend = 16, frame = 0
ARM GAS  /tmp/ccugrpsh.s 			page 147


 7599              		@ frame_needed = 0, uses_anonymous_args = 0
 7600              	.LVL314:
 7601 0000 84B0     		sub	sp, sp, #16
 7602              	.LCFI666:
 7603              		.cfi_def_cfa_offset 16
 7604 0002 30B5     		push	{r4, r5, lr}
 7605              	.LCFI667:
 7606              		.cfi_def_cfa_offset 28
 7607              		.cfi_offset 4, -28
 7608              		.cfi_offset 5, -24
 7609              		.cfi_offset 14, -20
 7610 0004 91B0     		sub	sp, sp, #68
 7611              	.LCFI668:
 7612              		.cfi_def_cfa_offset 96
 7613 0006 14AC     		add	r4, sp, #80
 7614 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 930:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_FW_MINOR, READ_LENGTH_1B);
 7615              		.loc 1 930 0
 7616 000c 0123     		movs	r3, #1
 7617 000e 0E93     		str	r3, [sp, #56]
 7618 0010 AC23     		movs	r3, #172
 7619 0012 0D93     		str	r3, [sp, #52]
 7620 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 7621 0018 0C93     		str	r3, [sp, #48]
 7622 001a 6C46     		mov	r4, sp
 7623 001c 18AD     		add	r5, sp, #96
 7624 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7625 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7626 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7627 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7628 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 7629 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 7630 002e 14AB     		add	r3, sp, #80
 7631 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7632 0032 FFF7FEFF 		bl	B3M_Read
 7633              	.LVL315:
 931:Src/B3M.c     **** 	return 0;
 932:Src/B3M.c     **** }
 7634              		.loc 1 932 0
 7635 0036 0020     		movs	r0, #0
 7636 0038 11B0     		add	sp, sp, #68
 7637              	.LCFI669:
 7638              		.cfi_def_cfa_offset 28
 7639              		@ sp needed
 7640 003a BDE83040 		pop	{r4, r5, lr}
 7641              	.LCFI670:
 7642              		.cfi_restore 14
 7643              		.cfi_restore 5
 7644              		.cfi_restore 4
 7645              		.cfi_def_cfa_offset 16
 7646 003e 04B0     		add	sp, sp, #16
 7647              	.LCFI671:
 7648              		.cfi_def_cfa_offset 0
 7649 0040 7047     		bx	lr
 7650              		.cfi_endproc
 7651              	.LFE235:
 7653 0042 00BF     		.section	.text.B3M_FWMajor_ReadOnly,"ax",%progbits
ARM GAS  /tmp/ccugrpsh.s 			page 148


 7654              		.align	2
 7655              		.global	B3M_FWMajor_ReadOnly
 7656              		.thumb
 7657              		.thumb_func
 7659              	B3M_FWMajor_ReadOnly:
 7660              	.LFB236:
 933:Src/B3M.c     **** 
 934:Src/B3M.c     **** uint8_t B3M_FWMajor_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 935:Src/B3M.c     **** {
 7661              		.loc 1 935 0
 7662              		.cfi_startproc
 7663              		@ args = 68, pretend = 16, frame = 0
 7664              		@ frame_needed = 0, uses_anonymous_args = 0
 7665              	.LVL316:
 7666 0000 84B0     		sub	sp, sp, #16
 7667              	.LCFI672:
 7668              		.cfi_def_cfa_offset 16
 7669 0002 30B5     		push	{r4, r5, lr}
 7670              	.LCFI673:
 7671              		.cfi_def_cfa_offset 28
 7672              		.cfi_offset 4, -28
 7673              		.cfi_offset 5, -24
 7674              		.cfi_offset 14, -20
 7675 0004 91B0     		sub	sp, sp, #68
 7676              	.LCFI674:
 7677              		.cfi_def_cfa_offset 96
 7678 0006 14AC     		add	r4, sp, #80
 7679 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 936:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_FW_MAJOR, READ_LENGTH_1B);
 7680              		.loc 1 936 0
 7681 000c 0123     		movs	r3, #1
 7682 000e 0E93     		str	r3, [sp, #56]
 7683 0010 AD23     		movs	r3, #173
 7684 0012 0D93     		str	r3, [sp, #52]
 7685 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 7686 0018 0C93     		str	r3, [sp, #48]
 7687 001a 6C46     		mov	r4, sp
 7688 001c 18AD     		add	r5, sp, #96
 7689 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7690 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7691 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7692 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7693 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 7694 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 7695 002e 14AB     		add	r3, sp, #80
 7696 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7697 0032 FFF7FEFF 		bl	B3M_Read
 7698              	.LVL317:
 937:Src/B3M.c     **** 	return 0;
 938:Src/B3M.c     **** }
 7699              		.loc 1 938 0
 7700 0036 0020     		movs	r0, #0
 7701 0038 11B0     		add	sp, sp, #68
 7702              	.LCFI675:
 7703              		.cfi_def_cfa_offset 28
 7704              		@ sp needed
 7705 003a BDE83040 		pop	{r4, r5, lr}
ARM GAS  /tmp/ccugrpsh.s 			page 149


 7706              	.LCFI676:
 7707              		.cfi_restore 14
 7708              		.cfi_restore 5
 7709              		.cfi_restore 4
 7710              		.cfi_def_cfa_offset 16
 7711 003e 04B0     		add	sp, sp, #16
 7712              	.LCFI677:
 7713              		.cfi_def_cfa_offset 0
 7714 0040 7047     		bx	lr
 7715              		.cfi_endproc
 7716              	.LFE236:
 7718 0042 00BF     		.section	.text.B3M_EncOffsetCenter_ReadOnly,"ax",%progbits
 7719              		.align	2
 7720              		.global	B3M_EncOffsetCenter_ReadOnly
 7721              		.thumb
 7722              		.thumb_func
 7724              	B3M_EncOffsetCenter_ReadOnly:
 7725              	.LFB237:
 939:Src/B3M.c     **** 
 940:Src/B3M.c     **** uint8_t B3M_EncOffsetCenter_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 941:Src/B3M.c     **** {
 7726              		.loc 1 941 0
 7727              		.cfi_startproc
 7728              		@ args = 68, pretend = 16, frame = 0
 7729              		@ frame_needed = 0, uses_anonymous_args = 0
 7730              	.LVL318:
 7731 0000 84B0     		sub	sp, sp, #16
 7732              	.LCFI678:
 7733              		.cfi_def_cfa_offset 16
 7734 0002 30B5     		push	{r4, r5, lr}
 7735              	.LCFI679:
 7736              		.cfi_def_cfa_offset 28
 7737              		.cfi_offset 4, -28
 7738              		.cfi_offset 5, -24
 7739              		.cfi_offset 14, -20
 7740 0004 91B0     		sub	sp, sp, #68
 7741              	.LCFI680:
 7742              		.cfi_def_cfa_offset 96
 7743 0006 14AC     		add	r4, sp, #80
 7744 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 942:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_ENC_OFFSET_CENTER, READ_LENGTH_1B);
 7745              		.loc 1 942 0
 7746 000c 0123     		movs	r3, #1
 7747 000e 0E93     		str	r3, [sp, #56]
 7748 0010 AE23     		movs	r3, #174
 7749 0012 0D93     		str	r3, [sp, #52]
 7750 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 7751 0018 0C93     		str	r3, [sp, #48]
 7752 001a 6C46     		mov	r4, sp
 7753 001c 18AD     		add	r5, sp, #96
 7754 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7755 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7756 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7757 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7758 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 7759 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 7760 002e 14AB     		add	r3, sp, #80
ARM GAS  /tmp/ccugrpsh.s 			page 150


 7761 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7762 0032 FFF7FEFF 		bl	B3M_Read
 7763              	.LVL319:
 943:Src/B3M.c     **** 	return 0;
 944:Src/B3M.c     **** }
 7764              		.loc 1 944 0
 7765 0036 0020     		movs	r0, #0
 7766 0038 11B0     		add	sp, sp, #68
 7767              	.LCFI681:
 7768              		.cfi_def_cfa_offset 28
 7769              		@ sp needed
 7770 003a BDE83040 		pop	{r4, r5, lr}
 7771              	.LCFI682:
 7772              		.cfi_restore 14
 7773              		.cfi_restore 5
 7774              		.cfi_restore 4
 7775              		.cfi_def_cfa_offset 16
 7776 003e 04B0     		add	sp, sp, #16
 7777              	.LCFI683:
 7778              		.cfi_def_cfa_offset 0
 7779 0040 7047     		bx	lr
 7780              		.cfi_endproc
 7781              	.LFE237:
 7783 0042 00BF     		.section	.text.B3M_EncOffset_ReadOnly,"ax",%progbits
 7784              		.align	2
 7785              		.global	B3M_EncOffset_ReadOnly
 7786              		.thumb
 7787              		.thumb_func
 7789              	B3M_EncOffset_ReadOnly:
 7790              	.LFB238:
 945:Src/B3M.c     **** 
 946:Src/B3M.c     **** uint8_t B3M_EncOffset_ReadOnly(UART_HandleTypeDef huart, uint8_t SERVO_ID)
 947:Src/B3M.c     **** {
 7791              		.loc 1 947 0
 7792              		.cfi_startproc
 7793              		@ args = 68, pretend = 16, frame = 0
 7794              		@ frame_needed = 0, uses_anonymous_args = 0
 7795              	.LVL320:
 7796 0000 84B0     		sub	sp, sp, #16
 7797              	.LCFI684:
 7798              		.cfi_def_cfa_offset 16
 7799 0002 30B5     		push	{r4, r5, lr}
 7800              	.LCFI685:
 7801              		.cfi_def_cfa_offset 28
 7802              		.cfi_offset 4, -28
 7803              		.cfi_offset 5, -24
 7804              		.cfi_offset 14, -20
 7805 0004 91B0     		sub	sp, sp, #68
 7806              	.LCFI686:
 7807              		.cfi_def_cfa_offset 96
 7808 0006 14AC     		add	r4, sp, #80
 7809 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 948:Src/B3M.c     **** 	B3M_Read(huart, SERVO_ID, CONFIG_ENC_OFFSET, READ_LENGTH_1B);
 7810              		.loc 1 948 0
 7811 000c 0123     		movs	r3, #1
 7812 000e 0E93     		str	r3, [sp, #56]
 7813 0010 B023     		movs	r3, #176
ARM GAS  /tmp/ccugrpsh.s 			page 151


 7814 0012 0D93     		str	r3, [sp, #52]
 7815 0014 9DF89030 		ldrb	r3, [sp, #144]	@ zero_extendqisi2
 7816 0018 0C93     		str	r3, [sp, #48]
 7817 001a 6C46     		mov	r4, sp
 7818 001c 18AD     		add	r5, sp, #96
 7819 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7820 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7821 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7822 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7823 0026 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 7824 002a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 7825 002e 14AB     		add	r3, sp, #80
 7826 0030 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7827 0032 FFF7FEFF 		bl	B3M_Read
 7828              	.LVL321:
 949:Src/B3M.c     **** 	return 0;
 950:Src/B3M.c     **** }
 7829              		.loc 1 950 0
 7830 0036 0020     		movs	r0, #0
 7831 0038 11B0     		add	sp, sp, #68
 7832              	.LCFI687:
 7833              		.cfi_def_cfa_offset 28
 7834              		@ sp needed
 7835 003a BDE83040 		pop	{r4, r5, lr}
 7836              	.LCFI688:
 7837              		.cfi_restore 14
 7838              		.cfi_restore 5
 7839              		.cfi_restore 4
 7840              		.cfi_def_cfa_offset 16
 7841 003e 04B0     		add	sp, sp, #16
 7842              	.LCFI689:
 7843              		.cfi_def_cfa_offset 0
 7844 0040 7047     		bx	lr
 7845              		.cfi_endproc
 7846              	.LFE238:
 7848 0042 00BF     		.text
 7849              	.Letext0:
 7850              		.file 2 "/home/ryouya/STM32Toolchain/gcc-arm-none-eabi-5_4-2016q3.2/arm-none-eabi/include/machine/
 7851              		.file 3 "/home/ryouya/STM32Toolchain/gcc-arm-none-eabi-5_4-2016q3.2/arm-none-eabi/include/sys/_std
 7852              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 7853              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 7854              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 7855              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 7856              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 7857              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccugrpsh.s 			page 152


DEFINED SYMBOLS
                            *ABS*:00000000 B3M.c
     /tmp/ccugrpsh.s:22     .text.B3M_Load:00000000 $t
     /tmp/ccugrpsh.s:27     .text.B3M_Load:00000000 B3M_Load
     /tmp/ccugrpsh.s:118    .text.B3M_Save:00000000 $t
     /tmp/ccugrpsh.s:123    .text.B3M_Save:00000000 B3M_Save
     /tmp/ccugrpsh.s:213    .text.B3M_Read:00000000 $t
     /tmp/ccugrpsh.s:218    .text.B3M_Read:00000000 B3M_Read
     /tmp/ccugrpsh.s:314    .text.B3M_Write_1B:00000000 $t
     /tmp/ccugrpsh.s:319    .text.B3M_Write_1B:00000000 B3M_Write_1B
     /tmp/ccugrpsh.s:418    .text.B3M_Write_2B:00000000 $t
     /tmp/ccugrpsh.s:423    .text.B3M_Write_2B:00000000 B3M_Write_2B
     /tmp/ccugrpsh.s:525    .text.B3M_Write_4B:00000000 $t
     /tmp/ccugrpsh.s:530    .text.B3M_Write_4B:00000000 B3M_Write_4B
     /tmp/ccugrpsh.s:637    .text.B3M_Reset:00000000 $t
     /tmp/ccugrpsh.s:642    .text.B3M_Reset:00000000 B3M_Reset
     /tmp/ccugrpsh.s:734    .text.B3M_SetDesirePostion:00000000 $t
     /tmp/ccugrpsh.s:739    .text.B3M_SetDesirePostion:00000000 B3M_SetDesirePostion
     /tmp/ccugrpsh.s:842    .text.B3M_SetPosition:00000000 $t
     /tmp/ccugrpsh.s:847    .text.B3M_SetPosition:00000000 B3M_SetPosition
     /tmp/ccugrpsh.s:950    .text.B3M_RunNormal:00000000 $t
     /tmp/ccugrpsh.s:955    .text.B3M_RunNormal:00000000 B3M_RunNormal
     /tmp/ccugrpsh.s:1017   .text.B3M_RunFree:00000000 $t
     /tmp/ccugrpsh.s:1022   .text.B3M_RunFree:00000000 B3M_RunFree
     /tmp/ccugrpsh.s:1082   .text.B3M_RunHold:00000000 $t
     /tmp/ccugrpsh.s:1087   .text.B3M_RunHold:00000000 B3M_RunHold
     /tmp/ccugrpsh.s:1147   .text.B3M_ControlPosition:00000000 $t
     /tmp/ccugrpsh.s:1152   .text.B3M_ControlPosition:00000000 B3M_ControlPosition
     /tmp/ccugrpsh.s:1214   .text.B3M_ControlVelocity:00000000 $t
     /tmp/ccugrpsh.s:1219   .text.B3M_ControlVelocity:00000000 B3M_ControlVelocity
     /tmp/ccugrpsh.s:1279   .text.B3M_ControlTorque:00000000 $t
     /tmp/ccugrpsh.s:1284   .text.B3M_ControlTorque:00000000 B3M_ControlTorque
     /tmp/ccugrpsh.s:1344   .text.B3M_ControlFeedForward:00000000 $t
     /tmp/ccugrpsh.s:1349   .text.B3M_ControlFeedForward:00000000 B3M_ControlFeedForward
     /tmp/ccugrpsh.s:1409   .text.B3M_ServoNormal:00000000 $t
     /tmp/ccugrpsh.s:1414   .text.B3M_ServoNormal:00000000 B3M_ServoNormal
     /tmp/ccugrpsh.s:1476   .text.B3M_ServoClone:00000000 $t
     /tmp/ccugrpsh.s:1481   .text.B3M_ServoClone:00000000 B3M_ServoClone
     /tmp/ccugrpsh.s:1540   .text.B3M_ServoReverse:00000000 $t
     /tmp/ccugrpsh.s:1545   .text.B3M_ServoReverse:00000000 B3M_ServoReverse
     /tmp/ccugrpsh.s:1605   .text.B3M_SystemID_Read:00000000 $t
     /tmp/ccugrpsh.s:1610   .text.B3M_SystemID_Read:00000000 B3M_SystemID_Read
     /tmp/ccugrpsh.s:1672   .text.B3M_SystemID_Write:00000000 $t
     /tmp/ccugrpsh.s:1677   .text.B3M_SystemID_Write:00000000 B3M_SystemID_Write
     /tmp/ccugrpsh.s:1739   .text.B3M_SystemBaudrate_Read:00000000 $t
     /tmp/ccugrpsh.s:1744   .text.B3M_SystemBaudrate_Read:00000000 B3M_SystemBaudrate_Read
     /tmp/ccugrpsh.s:1804   .text.B3M_SystemBaudrate_Write:00000000 $t
     /tmp/ccugrpsh.s:1809   .text.B3M_SystemBaudrate_Write:00000000 B3M_SystemBaudrate_Write
     /tmp/ccugrpsh.s:1869   .text.B3M_PositionMin_Read:00000000 $t
     /tmp/ccugrpsh.s:1874   .text.B3M_PositionMin_Read:00000000 B3M_PositionMin_Read
     /tmp/ccugrpsh.s:1934   .text.B3M_PositionMin_Write:00000000 $t
     /tmp/ccugrpsh.s:1939   .text.B3M_PositionMin_Write:00000000 B3M_PositionMin_Write
     /tmp/ccugrpsh.s:1999   .text.B3M_PositionMax_Read:00000000 $t
     /tmp/ccugrpsh.s:2004   .text.B3M_PositionMax_Read:00000000 B3M_PositionMax_Read
     /tmp/ccugrpsh.s:2064   .text.B3M_PositionMax_Write:00000000 $t
     /tmp/ccugrpsh.s:2069   .text.B3M_PositionMax_Write:00000000 B3M_PositionMax_Write
     /tmp/ccugrpsh.s:2129   .text.B3M_PositionCenter_Read:00000000 $t
ARM GAS  /tmp/ccugrpsh.s 			page 153


     /tmp/ccugrpsh.s:2134   .text.B3M_PositionCenter_Read:00000000 B3M_PositionCenter_Read
     /tmp/ccugrpsh.s:2194   .text.B3M_PositionCenter_Write:00000000 $t
     /tmp/ccugrpsh.s:2199   .text.B3M_PositionCenter_Write:00000000 B3M_PositionCenter_Write
     /tmp/ccugrpsh.s:2259   .text.B3M_MCUTempLimit_Read:00000000 $t
     /tmp/ccugrpsh.s:2264   .text.B3M_MCUTempLimit_Read:00000000 B3M_MCUTempLimit_Read
     /tmp/ccugrpsh.s:2324   .text.B3M_MCUTempLimit_Write:00000000 $t
     /tmp/ccugrpsh.s:2329   .text.B3M_MCUTempLimit_Write:00000000 B3M_MCUTempLimit_Write
     /tmp/ccugrpsh.s:2389   .text.B3M_MCUTempLimitPR_Read:00000000 $t
     /tmp/ccugrpsh.s:2394   .text.B3M_MCUTempLimitPR_Read:00000000 B3M_MCUTempLimitPR_Read
     /tmp/ccugrpsh.s:2454   .text.B3M_MCUTempLimitPR_Write:00000000 $t
     /tmp/ccugrpsh.s:2459   .text.B3M_MCUTempLimitPR_Write:00000000 B3M_MCUTempLimitPR_Write
     /tmp/ccugrpsh.s:2519   .text.B3M_MotorTempLimit_Read:00000000 $t
     /tmp/ccugrpsh.s:2524   .text.B3M_MotorTempLimit_Read:00000000 B3M_MotorTempLimit_Read
     /tmp/ccugrpsh.s:2584   .text.B3M_MotorTempLimit_Write:00000000 $t
     /tmp/ccugrpsh.s:2589   .text.B3M_MotorTempLimit_Write:00000000 B3M_MotorTempLimit_Write
     /tmp/ccugrpsh.s:2649   .text.B3M_MotorTempLimitPR_Read:00000000 $t
     /tmp/ccugrpsh.s:2654   .text.B3M_MotorTempLimitPR_Read:00000000 B3M_MotorTempLimitPR_Read
     /tmp/ccugrpsh.s:2714   .text.B3M_MotorTempLimitPR_Write:00000000 $t
     /tmp/ccugrpsh.s:2719   .text.B3M_MotorTempLimitPR_Write:00000000 B3M_MotorTempLimitPR_Write
     /tmp/ccugrpsh.s:2779   .text.B3M_CurrentLimit_Read:00000000 $t
     /tmp/ccugrpsh.s:2784   .text.B3M_CurrentLimit_Read:00000000 B3M_CurrentLimit_Read
     /tmp/ccugrpsh.s:2844   .text.B3M_CurrentLimit_Write:00000000 $t
     /tmp/ccugrpsh.s:2849   .text.B3M_CurrentLimit_Write:00000000 B3M_CurrentLimit_Write
     /tmp/ccugrpsh.s:2909   .text.B3M_CurrentLimitPR_Read:00000000 $t
     /tmp/ccugrpsh.s:2914   .text.B3M_CurrentLimitPR_Read:00000000 B3M_CurrentLimitPR_Read
     /tmp/ccugrpsh.s:2974   .text.B3M_CurrentLimitPR_Write:00000000 $t
     /tmp/ccugrpsh.s:2979   .text.B3M_CurrentLimitPR_Write:00000000 B3M_CurrentLimitPR_Write
     /tmp/ccugrpsh.s:3039   .text.B3M_LockDetectTime_Read:00000000 $t
     /tmp/ccugrpsh.s:3044   .text.B3M_LockDetectTime_Read:00000000 B3M_LockDetectTime_Read
     /tmp/ccugrpsh.s:3104   .text.B3M_LockDetectTime_Write:00000000 $t
     /tmp/ccugrpsh.s:3109   .text.B3M_LockDetectTime_Write:00000000 B3M_LockDetectTime_Write
     /tmp/ccugrpsh.s:3169   .text.B3M_LockDetectOutrate_Read:00000000 $t
     /tmp/ccugrpsh.s:3174   .text.B3M_LockDetectOutrate_Read:00000000 B3M_LockDetectOutrate_Read
     /tmp/ccugrpsh.s:3234   .text.B3M_LockDetectOutrate_Write:00000000 $t
     /tmp/ccugrpsh.s:3239   .text.B3M_LockDetectOutrate_Write:00000000 B3M_LockDetectOutrate_Write
     /tmp/ccugrpsh.s:3299   .text.B3M_LockDetectTimePR_Read:00000000 $t
     /tmp/ccugrpsh.s:3304   .text.B3M_LockDetectTimePR_Read:00000000 B3M_LockDetectTimePR_Read
     /tmp/ccugrpsh.s:3364   .text.B3M_LockDetectTimePR_Write:00000000 $t
     /tmp/ccugrpsh.s:3369   .text.B3M_LockDetectTimePR_Write:00000000 B3M_LockDetectTimePR_Write
     /tmp/ccugrpsh.s:3429   .text.B3M_InputVoltageMin_Read:00000000 $t
     /tmp/ccugrpsh.s:3434   .text.B3M_InputVoltageMin_Read:00000000 B3M_InputVoltageMin_Read
     /tmp/ccugrpsh.s:3494   .text.B3M_InputVoltageMin_Write:00000000 $t
     /tmp/ccugrpsh.s:3499   .text.B3M_InputVoltageMin_Write:00000000 B3M_InputVoltageMin_Write
     /tmp/ccugrpsh.s:3559   .text.B3M_InputVoltageMax_Read:00000000 $t
     /tmp/ccugrpsh.s:3564   .text.B3M_InputVoltageMax_Read:00000000 B3M_InputVoltageMax_Read
     /tmp/ccugrpsh.s:3624   .text.B3M_InputVoltageMax_Write:00000000 $t
     /tmp/ccugrpsh.s:3629   .text.B3M_InputVoltageMax_Write:00000000 B3M_InputVoltageMax_Write
     /tmp/ccugrpsh.s:3689   .text.B3M_TorqueLimit_Read:00000000 $t
     /tmp/ccugrpsh.s:3694   .text.B3M_TorqueLimit_Read:00000000 B3M_TorqueLimit_Read
     /tmp/ccugrpsh.s:3754   .text.B3M_TorqueLimit_Write:00000000 $t
     /tmp/ccugrpsh.s:3759   .text.B3M_TorqueLimit_Write:00000000 B3M_TorqueLimit_Write
     /tmp/ccugrpsh.s:3819   .text.B3M_DeadBandWidth_Read:00000000 $t
     /tmp/ccugrpsh.s:3824   .text.B3M_DeadBandWidth_Read:00000000 B3M_DeadBandWidth_Read
     /tmp/ccugrpsh.s:3884   .text.B3M_DeadBandWidth_Write:00000000 $t
     /tmp/ccugrpsh.s:3889   .text.B3M_DeadBandWidth_Write:00000000 B3M_DeadBandWidth_Write
     /tmp/ccugrpsh.s:3949   .text.B3M_MotorCWRatio_Read:00000000 $t
     /tmp/ccugrpsh.s:3954   .text.B3M_MotorCWRatio_Read:00000000 B3M_MotorCWRatio_Read
ARM GAS  /tmp/ccugrpsh.s 			page 154


     /tmp/ccugrpsh.s:4014   .text.B3M_MotorCWRatio_Write:00000000 $t
     /tmp/ccugrpsh.s:4019   .text.B3M_MotorCWRatio_Write:00000000 B3M_MotorCWRatio_Write
     /tmp/ccugrpsh.s:4079   .text.B3M_MotorCCWRatio_Read:00000000 $t
     /tmp/ccugrpsh.s:4084   .text.B3M_MotorCCWRatio_Read:00000000 B3M_MotorCCWRatio_Read
     /tmp/ccugrpsh.s:4144   .text.B3M_MotorCCWRatio_Write:00000000 $t
     /tmp/ccugrpsh.s:4149   .text.B3M_MotorCCWRatio_Write:00000000 B3M_MotorCCWRatio_Write
     /tmp/ccugrpsh.s:4209   .text.B3M_ServoOption_Read:00000000 $t
     /tmp/ccugrpsh.s:4214   .text.B3M_ServoOption_Read:00000000 B3M_ServoOption_Read
     /tmp/ccugrpsh.s:4274   .text.B3M_ControlLow_Read:00000000 $t
     /tmp/ccugrpsh.s:4279   .text.B3M_ControlLow_Read:00000000 B3M_ControlLow_Read
     /tmp/ccugrpsh.s:4339   .text.B3M_ControlLow_Write:00000000 $t
     /tmp/ccugrpsh.s:4344   .text.B3M_ControlLow_Write:00000000 B3M_ControlLow_Write
     /tmp/ccugrpsh.s:4404   .text.B3M_GainPresetNO_Read:00000000 $t
     /tmp/ccugrpsh.s:4409   .text.B3M_GainPresetNO_Read:00000000 B3M_GainPresetNO_Read
     /tmp/ccugrpsh.s:4469   .text.B3M_GainPresetNO_Write:00000000 $t
     /tmp/ccugrpsh.s:4474   .text.B3M_GainPresetNO_Write:00000000 B3M_GainPresetNO_Write
     /tmp/ccugrpsh.s:4534   .text.B3M_Type_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:4539   .text.B3M_Type_ReadOnly:00000000 B3M_Type_ReadOnly
     /tmp/ccugrpsh.s:4599   .text.B3M_KP0_Read:00000000 $t
     /tmp/ccugrpsh.s:4604   .text.B3M_KP0_Read:00000000 B3M_KP0_Read
     /tmp/ccugrpsh.s:4664   .text.B3M_KP0_Write:00000000 $t
     /tmp/ccugrpsh.s:4669   .text.B3M_KP0_Write:00000000 B3M_KP0_Write
     /tmp/ccugrpsh.s:4729   .text.B3M_KD0_Read:00000000 $t
     /tmp/ccugrpsh.s:4734   .text.B3M_KD0_Read:00000000 B3M_KD0_Read
     /tmp/ccugrpsh.s:4794   .text.B3M_KD0_Write:00000000 $t
     /tmp/ccugrpsh.s:4799   .text.B3M_KD0_Write:00000000 B3M_KD0_Write
     /tmp/ccugrpsh.s:4859   .text.B3M_KI0_Read:00000000 $t
     /tmp/ccugrpsh.s:4864   .text.B3M_KI0_Read:00000000 B3M_KI0_Read
     /tmp/ccugrpsh.s:4924   .text.B3M_KI0_Write:00000000 $t
     /tmp/ccugrpsh.s:4929   .text.B3M_KI0_Write:00000000 B3M_KI0_Write
     /tmp/ccugrpsh.s:4989   .text.B3M_StaticFriction0_Read:00000000 $t
     /tmp/ccugrpsh.s:4994   .text.B3M_StaticFriction0_Read:00000000 B3M_StaticFriction0_Read
     /tmp/ccugrpsh.s:5054   .text.B3M_StaticFriction0_Write:00000000 $t
     /tmp/ccugrpsh.s:5059   .text.B3M_StaticFriction0_Write:00000000 B3M_StaticFriction0_Write
     /tmp/ccugrpsh.s:5119   .text.B3M_DynamicFriction0_Read:00000000 $t
     /tmp/ccugrpsh.s:5124   .text.B3M_DynamicFriction0_Read:00000000 B3M_DynamicFriction0_Read
     /tmp/ccugrpsh.s:5184   .text.B3M_DynamicFriction0_Write:00000000 $t
     /tmp/ccugrpsh.s:5189   .text.B3M_DynamicFriction0_Write:00000000 B3M_DynamicFriction0_Write
     /tmp/ccugrpsh.s:5249   .text.B3M_KP1_Read:00000000 $t
     /tmp/ccugrpsh.s:5254   .text.B3M_KP1_Read:00000000 B3M_KP1_Read
     /tmp/ccugrpsh.s:5314   .text.B3M_KP1_Write:00000000 $t
     /tmp/ccugrpsh.s:5319   .text.B3M_KP1_Write:00000000 B3M_KP1_Write
     /tmp/ccugrpsh.s:5379   .text.B3M_KD1_Read:00000000 $t
     /tmp/ccugrpsh.s:5384   .text.B3M_KD1_Read:00000000 B3M_KD1_Read
     /tmp/ccugrpsh.s:5444   .text.B3M_KD1_Write:00000000 $t
     /tmp/ccugrpsh.s:5449   .text.B3M_KD1_Write:00000000 B3M_KD1_Write
     /tmp/ccugrpsh.s:5509   .text.B3M_KI1_Read:00000000 $t
     /tmp/ccugrpsh.s:5514   .text.B3M_KI1_Read:00000000 B3M_KI1_Read
     /tmp/ccugrpsh.s:5574   .text.B3M_KI1_Write:00000000 $t
     /tmp/ccugrpsh.s:5579   .text.B3M_KI1_Write:00000000 B3M_KI1_Write
     /tmp/ccugrpsh.s:5639   .text.B3M_StaticFriction1_Read:00000000 $t
     /tmp/ccugrpsh.s:5644   .text.B3M_StaticFriction1_Read:00000000 B3M_StaticFriction1_Read
     /tmp/ccugrpsh.s:5704   .text.B3M_StaticFriction1_Write:00000000 $t
     /tmp/ccugrpsh.s:5709   .text.B3M_StaticFriction1_Write:00000000 B3M_StaticFriction1_Write
     /tmp/ccugrpsh.s:5769   .text.B3M_DynamicFriction1_Read:00000000 $t
     /tmp/ccugrpsh.s:5774   .text.B3M_DynamicFriction1_Read:00000000 B3M_DynamicFriction1_Read
     /tmp/ccugrpsh.s:5834   .text.B3M_DynamicFriction1_Write:00000000 $t
ARM GAS  /tmp/ccugrpsh.s 			page 155


     /tmp/ccugrpsh.s:5839   .text.B3M_DynamicFriction1_Write:00000000 B3M_DynamicFriction1_Write
     /tmp/ccugrpsh.s:5899   .text.B3M_KP2_Read:00000000 $t
     /tmp/ccugrpsh.s:5904   .text.B3M_KP2_Read:00000000 B3M_KP2_Read
     /tmp/ccugrpsh.s:5964   .text.B3M_KP2_Write:00000000 $t
     /tmp/ccugrpsh.s:5969   .text.B3M_KP2_Write:00000000 B3M_KP2_Write
     /tmp/ccugrpsh.s:6029   .text.B3M_KD2_Read:00000000 $t
     /tmp/ccugrpsh.s:6034   .text.B3M_KD2_Read:00000000 B3M_KD2_Read
     /tmp/ccugrpsh.s:6094   .text.B3M_KD2_Write:00000000 $t
     /tmp/ccugrpsh.s:6099   .text.B3M_KD2_Write:00000000 B3M_KD2_Write
     /tmp/ccugrpsh.s:6159   .text.B3M_KI2_Read:00000000 $t
     /tmp/ccugrpsh.s:6164   .text.B3M_KI2_Read:00000000 B3M_KI2_Read
     /tmp/ccugrpsh.s:6224   .text.B3M_KI2_Write:00000000 $t
     /tmp/ccugrpsh.s:6229   .text.B3M_KI2_Write:00000000 B3M_KI2_Write
     /tmp/ccugrpsh.s:6289   .text.B3M_StaticFriction2_Read:00000000 $t
     /tmp/ccugrpsh.s:6294   .text.B3M_StaticFriction2_Read:00000000 B3M_StaticFriction2_Read
     /tmp/ccugrpsh.s:6354   .text.B3M_StaticFriction2_Write:00000000 $t
     /tmp/ccugrpsh.s:6359   .text.B3M_StaticFriction2_Write:00000000 B3M_StaticFriction2_Write
     /tmp/ccugrpsh.s:6419   .text.B3M_DynamicFriction2_Read:00000000 $t
     /tmp/ccugrpsh.s:6424   .text.B3M_DynamicFriction2_Read:00000000 B3M_DynamicFriction2_Read
     /tmp/ccugrpsh.s:6484   .text.B3M_DynamicFriction2_Write:00000000 $t
     /tmp/ccugrpsh.s:6489   .text.B3M_DynamicFriction2_Write:00000000 B3M_DynamicFriction2_Write
     /tmp/ccugrpsh.s:6549   .text.B3M_StatusBaseADDR_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:6554   .text.B3M_StatusBaseADDR_ReadOnly:00000000 B3M_StatusBaseADDR_ReadOnly
     /tmp/ccugrpsh.s:6614   .text.B3M_StatusSystem_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:6619   .text.B3M_StatusSystem_ReadOnly:00000000 B3M_StatusSystem_ReadOnly
     /tmp/ccugrpsh.s:6679   .text.B3M_StatusSytemError_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:6684   .text.B3M_StatusSytemError_ReadOnly:00000000 B3M_StatusSytemError_ReadOnly
     /tmp/ccugrpsh.s:6744   .text.B3M_StatusMotor_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:6749   .text.B3M_StatusMotor_ReadOnly:00000000 B3M_StatusMotor_ReadOnly
     /tmp/ccugrpsh.s:6809   .text.B3M_StatusUart_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:6814   .text.B3M_StatusUart_ReadOnly:00000000 B3M_StatusUart_ReadOnly
     /tmp/ccugrpsh.s:6874   .text.B3M_StatusCommand_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:6879   .text.B3M_StatusCommand_ReadOnly:00000000 B3M_StatusCommand_ReadOnly
     /tmp/ccugrpsh.s:6939   .text.B3M_ModelNumber_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:6944   .text.B3M_ModelNumber_ReadOnly:00000000 B3M_ModelNumber_ReadOnly
     /tmp/ccugrpsh.s:7004   .text.B3M_ModelNumberVoltageClass_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:7009   .text.B3M_ModelNumberVoltageClass_ReadOnly:00000000 B3M_ModelNumberVoltageClass_ReadOnly
     /tmp/ccugrpsh.s:7069   .text.B3M_ModelNumberVersion_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:7074   .text.B3M_ModelNumberVersion_ReadOnly:00000000 B3M_ModelNumberVersion_ReadOnly
     /tmp/ccugrpsh.s:7134   .text.B3M_ModelNumberTorque_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:7139   .text.B3M_ModelNumberTorque_ReadOnly:00000000 B3M_ModelNumberTorque_ReadOnly
     /tmp/ccugrpsh.s:7199   .text.B3M_ModelNumberCase_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:7204   .text.B3M_ModelNumberCase_ReadOnly:00000000 B3M_ModelNumberCase_ReadOnly
     /tmp/ccugrpsh.s:7264   .text.B3M_ModelType_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:7269   .text.B3M_ModelType_ReadOnly:00000000 B3M_ModelType_ReadOnly
     /tmp/ccugrpsh.s:7329   .text.B3M_ModelTypeMotor_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:7334   .text.B3M_ModelTypeMotor_ReadOnly:00000000 B3M_ModelTypeMotor_ReadOnly
     /tmp/ccugrpsh.s:7394   .text.B3M_ModelTypeDevice_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:7399   .text.B3M_ModelTypeDevice_ReadOnly:00000000 B3M_ModelTypeDevice_ReadOnly
     /tmp/ccugrpsh.s:7459   .text.B3M_FWVersion_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:7464   .text.B3M_FWVersion_ReadOnly:00000000 B3M_FWVersion_ReadOnly
     /tmp/ccugrpsh.s:7524   .text.B3M_FWRevision_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:7529   .text.B3M_FWRevision_ReadOnly:00000000 B3M_FWRevision_ReadOnly
     /tmp/ccugrpsh.s:7589   .text.B3M_FWMinor_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:7594   .text.B3M_FWMinor_ReadOnly:00000000 B3M_FWMinor_ReadOnly
     /tmp/ccugrpsh.s:7654   .text.B3M_FWMajor_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:7659   .text.B3M_FWMajor_ReadOnly:00000000 B3M_FWMajor_ReadOnly
ARM GAS  /tmp/ccugrpsh.s 			page 156


     /tmp/ccugrpsh.s:7719   .text.B3M_EncOffsetCenter_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:7724   .text.B3M_EncOffsetCenter_ReadOnly:00000000 B3M_EncOffsetCenter_ReadOnly
     /tmp/ccugrpsh.s:7784   .text.B3M_EncOffset_ReadOnly:00000000 $t
     /tmp/ccugrpsh.s:7789   .text.B3M_EncOffset_ReadOnly:00000000 B3M_EncOffset_ReadOnly
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
HAL_Delay
